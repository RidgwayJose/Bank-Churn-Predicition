2024-10-21 23:34:06,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-21 23:34:06,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-21 23:34:06,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-21 23:34:06,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-21 23:37:10,306:INFO:PyCaret ClassificationExperiment
2024-10-21 23:37:10,306:INFO:Logging name: Bank_Churn
2024-10-21 23:37:10,306:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-21 23:37:10,307:INFO:version 3.3.2
2024-10-21 23:37:10,307:INFO:Initializing setup()
2024-10-21 23:37:10,307:INFO:self.USI: 99a3
2024-10-21 23:37:10,307:INFO:self._variable_keys: {'pipeline', 'memory', 'html_param', 'exp_id', 'gpu_param', 'X_test', 'logging_param', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'n_jobs_param', 'idx', 'log_plots_param', 'target_param', 'is_multiclass', 'fold_shuffle_param', 'USI', 'fold_groups_param', 'fix_imbalance', 'data', 'y_train', 'X', 'y_test', '_available_plots', 'X_train', 'fold_generator', 'y', '_ml_usecase'}
2024-10-21 23:37:10,307:INFO:Checking environment
2024-10-21 23:37:10,308:INFO:python_version: 3.11.1
2024-10-21 23:37:10,308:INFO:python_build: ('tags/v3.11.1:a7a450f', 'Dec  6 2022 19:58:39')
2024-10-21 23:37:10,308:INFO:machine: AMD64
2024-10-21 23:37:10,308:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-21 23:37:10,316:INFO:Memory: svmem(total=16984227840, available=4903067648, percent=71.1, used=12081160192, free=4903067648)
2024-10-21 23:37:10,316:INFO:Physical Core: 6
2024-10-21 23:37:10,316:INFO:Logical Core: 12
2024-10-21 23:37:10,316:INFO:Checking libraries
2024-10-21 23:37:10,316:INFO:System:
2024-10-21 23:37:10,316:INFO:    python: 3.11.1 (tags/v3.11.1:a7a450f, Dec  6 2022, 19:58:39) [MSC v.1934 64 bit (AMD64)]
2024-10-21 23:37:10,316:INFO:executable: e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Scripts\python.exe
2024-10-21 23:37:10,316:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-21 23:37:10,316:INFO:PyCaret required dependencies:
2024-10-21 23:37:10,466:INFO:                 pip: 22.3.1
2024-10-21 23:37:10,466:INFO:          setuptools: 65.5.0
2024-10-21 23:37:10,466:INFO:             pycaret: 3.3.2
2024-10-21 23:37:10,467:INFO:             IPython: 8.28.0
2024-10-21 23:37:10,467:INFO:          ipywidgets: 8.1.5
2024-10-21 23:37:10,467:INFO:                tqdm: 4.66.5
2024-10-21 23:37:10,467:INFO:               numpy: 1.26.4
2024-10-21 23:37:10,467:INFO:              pandas: 2.1.4
2024-10-21 23:37:10,467:INFO:              jinja2: 3.1.4
2024-10-21 23:37:10,467:INFO:               scipy: 1.11.4
2024-10-21 23:37:10,468:INFO:              joblib: 1.3.2
2024-10-21 23:37:10,468:INFO:             sklearn: 1.4.2
2024-10-21 23:37:10,468:INFO:                pyod: 2.0.2
2024-10-21 23:37:10,468:INFO:            imblearn: 0.12.4
2024-10-21 23:37:10,468:INFO:   category_encoders: 2.6.4
2024-10-21 23:37:10,468:INFO:            lightgbm: 4.5.0
2024-10-21 23:37:10,468:INFO:               numba: 0.60.0
2024-10-21 23:37:10,469:INFO:            requests: 2.32.3
2024-10-21 23:37:10,469:INFO:          matplotlib: 3.7.5
2024-10-21 23:37:10,469:INFO:          scikitplot: 0.3.7
2024-10-21 23:37:10,469:INFO:         yellowbrick: 1.5
2024-10-21 23:37:10,469:INFO:              plotly: 5.24.1
2024-10-21 23:37:10,469:INFO:    plotly-resampler: Not installed
2024-10-21 23:37:10,469:INFO:             kaleido: 0.2.1
2024-10-21 23:37:10,469:INFO:           schemdraw: 0.15
2024-10-21 23:37:10,469:INFO:         statsmodels: 0.14.4
2024-10-21 23:37:10,469:INFO:              sktime: 0.26.0
2024-10-21 23:37:10,469:INFO:               tbats: 1.1.3
2024-10-21 23:37:10,469:INFO:            pmdarima: 2.0.4
2024-10-21 23:37:10,469:INFO:              psutil: 6.1.0
2024-10-21 23:37:10,471:INFO:          markupsafe: 3.0.2
2024-10-21 23:37:10,471:INFO:             pickle5: Not installed
2024-10-21 23:37:10,471:INFO:         cloudpickle: 3.1.0
2024-10-21 23:37:10,471:INFO:         deprecation: 2.1.0
2024-10-21 23:37:10,471:INFO:              xxhash: 3.5.0
2024-10-21 23:37:10,471:INFO:           wurlitzer: Not installed
2024-10-21 23:37:10,471:INFO:PyCaret optional dependencies:
2024-10-21 23:37:11,263:INFO:                shap: Not installed
2024-10-21 23:37:11,263:INFO:           interpret: Not installed
2024-10-21 23:37:11,263:INFO:                umap: Not installed
2024-10-21 23:37:11,263:INFO:     ydata_profiling: Not installed
2024-10-21 23:37:11,264:INFO:  explainerdashboard: Not installed
2024-10-21 23:37:11,264:INFO:             autoviz: Not installed
2024-10-21 23:37:11,264:INFO:           fairlearn: Not installed
2024-10-21 23:37:11,264:INFO:          deepchecks: Not installed
2024-10-21 23:37:11,264:INFO:             xgboost: Not installed
2024-10-21 23:37:11,264:INFO:            catboost: Not installed
2024-10-21 23:37:11,264:INFO:              kmodes: Not installed
2024-10-21 23:37:11,264:INFO:             mlxtend: Not installed
2024-10-21 23:37:11,264:INFO:       statsforecast: Not installed
2024-10-21 23:37:11,264:INFO:        tune_sklearn: Not installed
2024-10-21 23:37:11,264:INFO:                 ray: Not installed
2024-10-21 23:37:11,264:INFO:            hyperopt: 0.2.7
2024-10-21 23:37:11,264:INFO:              optuna: 4.0.0
2024-10-21 23:37:11,264:INFO:               skopt: 0.10.2
2024-10-21 23:37:11,264:INFO:              mlflow: 2.17.0
2024-10-21 23:37:11,265:INFO:              gradio: Not installed
2024-10-21 23:37:11,265:INFO:             fastapi: 0.115.2
2024-10-21 23:37:11,265:INFO:             uvicorn: 0.32.0
2024-10-21 23:37:11,265:INFO:              m2cgen: Not installed
2024-10-21 23:37:11,265:INFO:           evidently: Not installed
2024-10-21 23:37:11,265:INFO:               fugue: Not installed
2024-10-21 23:37:11,265:INFO:           streamlit: Not installed
2024-10-21 23:37:11,265:INFO:             prophet: Not installed
2024-10-21 23:37:11,265:INFO:None
2024-10-21 23:37:11,265:INFO:Set up data.
2024-10-21 23:37:11,434:INFO:Set up folding strategy.
2024-10-21 23:37:11,434:INFO:Set up train/test split.
2024-10-21 23:37:11,593:INFO:Set up index.
2024-10-21 23:37:11,605:INFO:Assigning column types.
2024-10-21 23:37:11,641:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-21 23:37:11,667:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 23:37:11,673:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-21 23:37:11,770:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 23:37:11,771:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 23:37:11,806:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-21 23:37:11,807:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-21 23:37:11,825:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 23:37:11,825:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 23:37:11,826:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-21 23:37:11,855:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-21 23:37:11,870:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 23:37:11,870:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 23:37:11,898:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-21 23:37:11,916:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 23:37:11,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 23:37:11,916:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-21 23:37:11,965:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 23:37:11,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 23:37:12,017:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 23:37:12,017:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 23:37:12,018:INFO:Preparing preprocessing pipeline...
2024-10-21 23:37:12,023:INFO:Set up simple imputation.
2024-10-21 23:37:12,036:INFO:Set up encoding of ordinal features.
2024-10-21 23:37:12,043:INFO:Set up encoding of categorical features.
2024-10-21 23:37:12,317:INFO:Finished creating preprocessing pipeline.
2024-10-21 23:37:12,340:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-21 23:37:12,340:INFO:Creating final display dataframe.
2024-10-21 23:37:12,627:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target           Exited
2                   Target type           Binary
3           Original data shape     (165034, 14)
4        Transformed data shape     (165034, 13)
5   Transformed train set shape     (115523, 13)
6    Transformed test set shape      (49511, 13)
7               Ignore features                3
8              Numeric features                8
9          Categorical features                2
10                   Preprocess             True
11              Imputation type           simple
12           Numeric imputation             mean
13       Categorical imputation             mode
14     Maximum one-hot encoding               25
15              Encoding method             None
16               Fold Generator  StratifiedKFold
17                  Fold Number               10
18                     CPU Jobs               -1
19                      Use GPU            False
20               Log Experiment     MlflowLogger
21              Experiment Name       Bank_Churn
22                          USI             99a3
2024-10-21 23:37:12,718:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 23:37:12,719:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 23:37:12,761:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 23:37:12,761:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-21 23:37:12,762:INFO:Logging experiment in loggers
2024-10-21 23:37:13,322:INFO:SubProcess save_model() called ==================================
2024-10-21 23:37:13,341:INFO:Initializing save_model()
2024-10-21 23:37:13,341:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), model_name=C:\Users\User\AppData\Local\Temp\tmp6l_iol9h\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-10-21 23:37:13,341:INFO:Adding model into prep_pipe
2024-10-21 23:37:13,341:WARNING:Only Model saved as it was a pipeline.
2024-10-21 23:37:13,344:INFO:C:\Users\User\AppData\Local\Temp\tmp6l_iol9h\Transformation Pipeline.pkl saved in current working directory
2024-10-21 23:37:13,355:INFO:Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-21 23:37:13,355:INFO:save_model() successfully completed......................................
2024-10-21 23:37:13,429:INFO:SubProcess save_model() end ==================================
2024-10-21 23:37:13,512:INFO:setup() successfully completed in 2.5s...............
2024-10-21 23:41:49,590:INFO:Initializing compare_models()
2024-10-21 23:41:49,590:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-21 23:41:49,590:INFO:Checking exceptions
2024-10-21 23:41:49,611:INFO:Preparing display monitor
2024-10-21 23:41:49,625:INFO:Initializing Logistic Regression
2024-10-21 23:41:49,625:INFO:Total runtime is 0.0 minutes
2024-10-21 23:41:49,627:INFO:SubProcess create_model() called ==================================
2024-10-21 23:41:49,627:INFO:Initializing create_model()
2024-10-21 23:41:49,627:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601F1670D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 23:41:49,627:INFO:Checking exceptions
2024-10-21 23:41:49,627:INFO:Importing libraries
2024-10-21 23:41:49,627:INFO:Copying training dataset
2024-10-21 23:41:49,683:INFO:Defining folds
2024-10-21 23:41:49,683:INFO:Declaring metric variables
2024-10-21 23:41:49,685:INFO:Importing untrained model
2024-10-21 23:41:49,687:INFO:Logistic Regression Imported successfully
2024-10-21 23:41:49,690:INFO:Starting cross validation
2024-10-21 23:41:49,692:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 23:42:10,147:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-21 23:42:10,178:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-21 23:42:10,202:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-21 23:42:10,256:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-21 23:42:10,378:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-21 23:42:10,383:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-21 23:42:10,383:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-21 23:42:10,454:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-21 23:42:10,471:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-21 23:42:10,491:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-21 23:42:10,579:INFO:Calculating mean and std
2024-10-21 23:42:10,581:INFO:Creating metrics dataframe
2024-10-21 23:42:10,584:INFO:Uploading results into container
2024-10-21 23:42:10,585:INFO:Uploading model into container now
2024-10-21 23:42:10,585:INFO:_master_model_container: 1
2024-10-21 23:42:10,586:INFO:_display_container: 2
2024-10-21 23:42:10,586:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-21 23:42:10,586:INFO:create_model() successfully completed......................................
2024-10-21 23:42:10,686:INFO:SubProcess create_model() end ==================================
2024-10-21 23:42:10,686:INFO:Creating metrics dataframe
2024-10-21 23:42:10,690:INFO:Initializing K Neighbors Classifier
2024-10-21 23:42:10,691:INFO:Total runtime is 0.35109031200408936 minutes
2024-10-21 23:42:10,692:INFO:SubProcess create_model() called ==================================
2024-10-21 23:42:10,692:INFO:Initializing create_model()
2024-10-21 23:42:10,693:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601F1670D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 23:42:10,693:INFO:Checking exceptions
2024-10-21 23:42:10,693:INFO:Importing libraries
2024-10-21 23:42:10,693:INFO:Copying training dataset
2024-10-21 23:42:10,726:INFO:Defining folds
2024-10-21 23:42:10,740:INFO:Declaring metric variables
2024-10-21 23:42:10,742:INFO:Importing untrained model
2024-10-21 23:42:10,744:INFO:K Neighbors Classifier Imported successfully
2024-10-21 23:42:10,749:INFO:Starting cross validation
2024-10-21 23:42:10,750:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 23:42:14,900:INFO:Calculating mean and std
2024-10-21 23:42:14,900:INFO:Creating metrics dataframe
2024-10-21 23:42:14,903:INFO:Uploading results into container
2024-10-21 23:42:14,903:INFO:Uploading model into container now
2024-10-21 23:42:14,903:INFO:_master_model_container: 2
2024-10-21 23:42:14,903:INFO:_display_container: 2
2024-10-21 23:42:14,904:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-21 23:42:14,904:INFO:create_model() successfully completed......................................
2024-10-21 23:42:14,978:INFO:SubProcess create_model() end ==================================
2024-10-21 23:42:14,978:INFO:Creating metrics dataframe
2024-10-21 23:42:14,982:INFO:Initializing Naive Bayes
2024-10-21 23:42:14,982:INFO:Total runtime is 0.42261221806208293 minutes
2024-10-21 23:42:14,984:INFO:SubProcess create_model() called ==================================
2024-10-21 23:42:14,984:INFO:Initializing create_model()
2024-10-21 23:42:14,984:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601F1670D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 23:42:14,984:INFO:Checking exceptions
2024-10-21 23:42:14,984:INFO:Importing libraries
2024-10-21 23:42:14,984:INFO:Copying training dataset
2024-10-21 23:42:15,013:INFO:Defining folds
2024-10-21 23:42:15,013:INFO:Declaring metric variables
2024-10-21 23:42:15,015:INFO:Importing untrained model
2024-10-21 23:42:15,018:INFO:Naive Bayes Imported successfully
2024-10-21 23:42:15,023:INFO:Starting cross validation
2024-10-21 23:42:15,024:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 23:42:16,228:INFO:Calculating mean and std
2024-10-21 23:42:16,229:INFO:Creating metrics dataframe
2024-10-21 23:42:16,230:INFO:Uploading results into container
2024-10-21 23:42:16,231:INFO:Uploading model into container now
2024-10-21 23:42:16,231:INFO:_master_model_container: 3
2024-10-21 23:42:16,232:INFO:_display_container: 2
2024-10-21 23:42:16,232:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-21 23:42:16,232:INFO:create_model() successfully completed......................................
2024-10-21 23:42:16,299:INFO:SubProcess create_model() end ==================================
2024-10-21 23:42:16,299:INFO:Creating metrics dataframe
2024-10-21 23:42:16,303:INFO:Initializing Decision Tree Classifier
2024-10-21 23:42:16,303:INFO:Total runtime is 0.4446338693300883 minutes
2024-10-21 23:42:16,304:INFO:SubProcess create_model() called ==================================
2024-10-21 23:42:16,305:INFO:Initializing create_model()
2024-10-21 23:42:16,305:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601F1670D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 23:42:16,305:INFO:Checking exceptions
2024-10-21 23:42:16,305:INFO:Importing libraries
2024-10-21 23:42:16,305:INFO:Copying training dataset
2024-10-21 23:42:16,343:INFO:Defining folds
2024-10-21 23:42:16,343:INFO:Declaring metric variables
2024-10-21 23:42:16,347:INFO:Importing untrained model
2024-10-21 23:42:16,349:INFO:Decision Tree Classifier Imported successfully
2024-10-21 23:42:16,352:INFO:Starting cross validation
2024-10-21 23:42:16,353:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 23:42:18,287:INFO:Calculating mean and std
2024-10-21 23:42:18,288:INFO:Creating metrics dataframe
2024-10-21 23:42:18,289:INFO:Uploading results into container
2024-10-21 23:42:18,290:INFO:Uploading model into container now
2024-10-21 23:42:18,290:INFO:_master_model_container: 4
2024-10-21 23:42:18,290:INFO:_display_container: 2
2024-10-21 23:42:18,291:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-10-21 23:42:18,291:INFO:create_model() successfully completed......................................
2024-10-21 23:42:18,358:INFO:SubProcess create_model() end ==================================
2024-10-21 23:42:18,358:INFO:Creating metrics dataframe
2024-10-21 23:42:18,362:INFO:Initializing SVM - Linear Kernel
2024-10-21 23:42:18,362:INFO:Total runtime is 0.47894744873046874 minutes
2024-10-21 23:42:18,365:INFO:SubProcess create_model() called ==================================
2024-10-21 23:42:18,365:INFO:Initializing create_model()
2024-10-21 23:42:18,365:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601F1670D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 23:42:18,365:INFO:Checking exceptions
2024-10-21 23:42:18,365:INFO:Importing libraries
2024-10-21 23:42:18,365:INFO:Copying training dataset
2024-10-21 23:42:18,396:INFO:Defining folds
2024-10-21 23:42:18,396:INFO:Declaring metric variables
2024-10-21 23:42:18,398:INFO:Importing untrained model
2024-10-21 23:42:18,402:INFO:SVM - Linear Kernel Imported successfully
2024-10-21 23:42:18,406:INFO:Starting cross validation
2024-10-21 23:42:18,406:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 23:42:31,308:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 23:42:32,406:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 23:42:35,351:INFO:Calculating mean and std
2024-10-21 23:42:35,352:INFO:Creating metrics dataframe
2024-10-21 23:42:35,353:INFO:Uploading results into container
2024-10-21 23:42:35,354:INFO:Uploading model into container now
2024-10-21 23:42:35,354:INFO:_master_model_container: 5
2024-10-21 23:42:35,354:INFO:_display_container: 2
2024-10-21 23:42:35,355:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-21 23:42:35,355:INFO:create_model() successfully completed......................................
2024-10-21 23:42:35,443:INFO:SubProcess create_model() end ==================================
2024-10-21 23:42:35,443:INFO:Creating metrics dataframe
2024-10-21 23:42:35,448:INFO:Initializing Ridge Classifier
2024-10-21 23:42:35,448:INFO:Total runtime is 0.7637044548988342 minutes
2024-10-21 23:42:35,450:INFO:SubProcess create_model() called ==================================
2024-10-21 23:42:35,450:INFO:Initializing create_model()
2024-10-21 23:42:35,450:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601F1670D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 23:42:35,450:INFO:Checking exceptions
2024-10-21 23:42:35,450:INFO:Importing libraries
2024-10-21 23:42:35,450:INFO:Copying training dataset
2024-10-21 23:42:35,482:INFO:Defining folds
2024-10-21 23:42:35,482:INFO:Declaring metric variables
2024-10-21 23:42:35,485:INFO:Importing untrained model
2024-10-21 23:42:35,487:INFO:Ridge Classifier Imported successfully
2024-10-21 23:42:35,490:INFO:Starting cross validation
2024-10-21 23:42:35,491:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 23:42:36,772:INFO:Calculating mean and std
2024-10-21 23:42:36,773:INFO:Creating metrics dataframe
2024-10-21 23:42:36,774:INFO:Uploading results into container
2024-10-21 23:42:36,774:INFO:Uploading model into container now
2024-10-21 23:42:36,774:INFO:_master_model_container: 6
2024-10-21 23:42:36,775:INFO:_display_container: 2
2024-10-21 23:42:36,775:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-10-21 23:42:36,775:INFO:create_model() successfully completed......................................
2024-10-21 23:42:36,867:INFO:SubProcess create_model() end ==================================
2024-10-21 23:42:36,867:INFO:Creating metrics dataframe
2024-10-21 23:42:36,872:INFO:Initializing Random Forest Classifier
2024-10-21 23:42:36,872:INFO:Total runtime is 0.7874413927396138 minutes
2024-10-21 23:42:36,873:INFO:SubProcess create_model() called ==================================
2024-10-21 23:42:36,873:INFO:Initializing create_model()
2024-10-21 23:42:36,873:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601F1670D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 23:42:36,873:INFO:Checking exceptions
2024-10-21 23:42:36,874:INFO:Importing libraries
2024-10-21 23:42:36,874:INFO:Copying training dataset
2024-10-21 23:42:36,919:INFO:Defining folds
2024-10-21 23:42:36,920:INFO:Declaring metric variables
2024-10-21 23:42:36,923:INFO:Importing untrained model
2024-10-21 23:42:36,930:INFO:Random Forest Classifier Imported successfully
2024-10-21 23:42:36,947:INFO:Starting cross validation
2024-10-21 23:42:36,949:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 23:42:58,594:INFO:Calculating mean and std
2024-10-21 23:42:58,597:INFO:Creating metrics dataframe
2024-10-21 23:42:58,600:INFO:Uploading results into container
2024-10-21 23:42:58,601:INFO:Uploading model into container now
2024-10-21 23:42:58,602:INFO:_master_model_container: 7
2024-10-21 23:42:58,602:INFO:_display_container: 2
2024-10-21 23:42:58,602:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-21 23:42:58,602:INFO:create_model() successfully completed......................................
2024-10-21 23:42:58,724:INFO:SubProcess create_model() end ==================================
2024-10-21 23:42:58,724:INFO:Creating metrics dataframe
2024-10-21 23:42:58,732:INFO:Initializing Quadratic Discriminant Analysis
2024-10-21 23:42:58,732:INFO:Total runtime is 1.151773504416148 minutes
2024-10-21 23:42:58,735:INFO:SubProcess create_model() called ==================================
2024-10-21 23:42:58,735:INFO:Initializing create_model()
2024-10-21 23:42:58,735:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601F1670D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 23:42:58,735:INFO:Checking exceptions
2024-10-21 23:42:58,735:INFO:Importing libraries
2024-10-21 23:42:58,735:INFO:Copying training dataset
2024-10-21 23:42:58,787:INFO:Defining folds
2024-10-21 23:42:58,787:INFO:Declaring metric variables
2024-10-21 23:42:58,791:INFO:Importing untrained model
2024-10-21 23:42:58,795:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-21 23:42:58,803:INFO:Starting cross validation
2024-10-21 23:42:58,804:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 23:42:59,936:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 23:42:59,962:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 23:43:00,030:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 23:43:00,067:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 23:43:00,140:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 23:43:00,208:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 23:43:00,263:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 23:43:00,277:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 23:43:00,313:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 23:43:00,353:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-21 23:43:00,462:INFO:Calculating mean and std
2024-10-21 23:43:00,463:INFO:Creating metrics dataframe
2024-10-21 23:43:00,465:INFO:Uploading results into container
2024-10-21 23:43:00,466:INFO:Uploading model into container now
2024-10-21 23:43:00,466:INFO:_master_model_container: 8
2024-10-21 23:43:00,466:INFO:_display_container: 2
2024-10-21 23:43:00,467:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-21 23:43:00,467:INFO:create_model() successfully completed......................................
2024-10-21 23:43:00,613:INFO:SubProcess create_model() end ==================================
2024-10-21 23:43:00,614:INFO:Creating metrics dataframe
2024-10-21 23:43:00,620:INFO:Initializing Ada Boost Classifier
2024-10-21 23:43:00,620:INFO:Total runtime is 1.1832390189170838 minutes
2024-10-21 23:43:00,623:INFO:SubProcess create_model() called ==================================
2024-10-21 23:43:00,623:INFO:Initializing create_model()
2024-10-21 23:43:00,623:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601F1670D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 23:43:00,623:INFO:Checking exceptions
2024-10-21 23:43:00,623:INFO:Importing libraries
2024-10-21 23:43:00,623:INFO:Copying training dataset
2024-10-21 23:43:00,666:INFO:Defining folds
2024-10-21 23:43:00,666:INFO:Declaring metric variables
2024-10-21 23:43:00,669:INFO:Importing untrained model
2024-10-21 23:43:00,672:INFO:Ada Boost Classifier Imported successfully
2024-10-21 23:43:00,678:INFO:Starting cross validation
2024-10-21 23:43:00,679:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 23:43:01,401:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 23:43:01,585:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 23:43:01,644:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 23:43:01,666:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 23:43:01,702:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 23:43:01,715:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 23:43:01,761:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 23:43:01,765:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 23:43:01,896:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 23:43:02,009:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-21 23:43:08,805:INFO:Calculating mean and std
2024-10-21 23:43:08,806:INFO:Creating metrics dataframe
2024-10-21 23:43:08,807:INFO:Uploading results into container
2024-10-21 23:43:08,807:INFO:Uploading model into container now
2024-10-21 23:43:08,808:INFO:_master_model_container: 9
2024-10-21 23:43:08,808:INFO:_display_container: 2
2024-10-21 23:43:08,808:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-10-21 23:43:08,808:INFO:create_model() successfully completed......................................
2024-10-21 23:43:08,915:INFO:SubProcess create_model() end ==================================
2024-10-21 23:43:08,915:INFO:Creating metrics dataframe
2024-10-21 23:43:08,922:INFO:Initializing Gradient Boosting Classifier
2024-10-21 23:43:08,922:INFO:Total runtime is 1.3216076175371807 minutes
2024-10-21 23:43:08,923:INFO:SubProcess create_model() called ==================================
2024-10-21 23:43:08,924:INFO:Initializing create_model()
2024-10-21 23:43:08,924:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601F1670D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 23:43:08,924:INFO:Checking exceptions
2024-10-21 23:43:08,924:INFO:Importing libraries
2024-10-21 23:43:08,924:INFO:Copying training dataset
2024-10-21 23:43:08,956:INFO:Defining folds
2024-10-21 23:43:08,956:INFO:Declaring metric variables
2024-10-21 23:43:08,958:INFO:Importing untrained model
2024-10-21 23:43:08,961:INFO:Gradient Boosting Classifier Imported successfully
2024-10-21 23:43:08,966:INFO:Starting cross validation
2024-10-21 23:43:08,967:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 23:43:29,485:INFO:Calculating mean and std
2024-10-21 23:43:29,486:INFO:Creating metrics dataframe
2024-10-21 23:43:29,490:INFO:Uploading results into container
2024-10-21 23:43:29,490:INFO:Uploading model into container now
2024-10-21 23:43:29,491:INFO:_master_model_container: 10
2024-10-21 23:43:29,491:INFO:_display_container: 2
2024-10-21 23:43:29,491:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-21 23:43:29,492:INFO:create_model() successfully completed......................................
2024-10-21 23:43:29,562:INFO:SubProcess create_model() end ==================================
2024-10-21 23:43:29,562:INFO:Creating metrics dataframe
2024-10-21 23:43:29,567:INFO:Initializing Linear Discriminant Analysis
2024-10-21 23:43:29,567:INFO:Total runtime is 1.6657024184862774 minutes
2024-10-21 23:43:29,569:INFO:SubProcess create_model() called ==================================
2024-10-21 23:43:29,569:INFO:Initializing create_model()
2024-10-21 23:43:29,570:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601F1670D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 23:43:29,570:INFO:Checking exceptions
2024-10-21 23:43:29,570:INFO:Importing libraries
2024-10-21 23:43:29,570:INFO:Copying training dataset
2024-10-21 23:43:29,601:INFO:Defining folds
2024-10-21 23:43:29,601:INFO:Declaring metric variables
2024-10-21 23:43:29,604:INFO:Importing untrained model
2024-10-21 23:43:29,606:INFO:Linear Discriminant Analysis Imported successfully
2024-10-21 23:43:29,610:INFO:Starting cross validation
2024-10-21 23:43:29,611:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 23:43:30,988:INFO:Calculating mean and std
2024-10-21 23:43:30,989:INFO:Creating metrics dataframe
2024-10-21 23:43:30,990:INFO:Uploading results into container
2024-10-21 23:43:30,990:INFO:Uploading model into container now
2024-10-21 23:43:30,991:INFO:_master_model_container: 11
2024-10-21 23:43:30,991:INFO:_display_container: 2
2024-10-21 23:43:30,991:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-21 23:43:30,991:INFO:create_model() successfully completed......................................
2024-10-21 23:43:31,064:INFO:SubProcess create_model() end ==================================
2024-10-21 23:43:31,064:INFO:Creating metrics dataframe
2024-10-21 23:43:31,070:INFO:Initializing Extra Trees Classifier
2024-10-21 23:43:31,071:INFO:Total runtime is 1.6907471855481466 minutes
2024-10-21 23:43:31,073:INFO:SubProcess create_model() called ==================================
2024-10-21 23:43:31,073:INFO:Initializing create_model()
2024-10-21 23:43:31,073:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601F1670D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 23:43:31,073:INFO:Checking exceptions
2024-10-21 23:43:31,073:INFO:Importing libraries
2024-10-21 23:43:31,073:INFO:Copying training dataset
2024-10-21 23:43:31,105:INFO:Defining folds
2024-10-21 23:43:31,105:INFO:Declaring metric variables
2024-10-21 23:43:31,108:INFO:Importing untrained model
2024-10-21 23:43:31,111:INFO:Extra Trees Classifier Imported successfully
2024-10-21 23:43:31,121:INFO:Starting cross validation
2024-10-21 23:43:31,123:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 23:43:53,533:INFO:Calculating mean and std
2024-10-21 23:43:53,562:INFO:Creating metrics dataframe
2024-10-21 23:43:53,566:INFO:Uploading results into container
2024-10-21 23:43:53,567:INFO:Uploading model into container now
2024-10-21 23:43:53,568:INFO:_master_model_container: 12
2024-10-21 23:43:53,568:INFO:_display_container: 2
2024-10-21 23:43:53,569:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-10-21 23:43:53,569:INFO:create_model() successfully completed......................................
2024-10-21 23:43:54,036:INFO:SubProcess create_model() end ==================================
2024-10-21 23:43:54,036:INFO:Creating metrics dataframe
2024-10-21 23:43:54,043:INFO:Initializing Light Gradient Boosting Machine
2024-10-21 23:43:54,043:INFO:Total runtime is 2.0736286640167236 minutes
2024-10-21 23:43:54,046:INFO:SubProcess create_model() called ==================================
2024-10-21 23:43:54,047:INFO:Initializing create_model()
2024-10-21 23:43:54,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601F1670D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 23:43:54,130:INFO:Checking exceptions
2024-10-21 23:43:54,130:INFO:Importing libraries
2024-10-21 23:43:54,130:INFO:Copying training dataset
2024-10-21 23:43:54,170:INFO:Defining folds
2024-10-21 23:43:54,171:INFO:Declaring metric variables
2024-10-21 23:43:54,173:INFO:Importing untrained model
2024-10-21 23:43:54,176:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-21 23:43:54,182:INFO:Starting cross validation
2024-10-21 23:43:54,183:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 23:43:58,245:INFO:Calculating mean and std
2024-10-21 23:43:58,246:INFO:Creating metrics dataframe
2024-10-21 23:43:58,248:INFO:Uploading results into container
2024-10-21 23:43:58,248:INFO:Uploading model into container now
2024-10-21 23:43:58,250:INFO:_master_model_container: 13
2024-10-21 23:43:58,250:INFO:_display_container: 2
2024-10-21 23:43:58,251:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-21 23:43:58,251:INFO:create_model() successfully completed......................................
2024-10-21 23:43:58,345:INFO:SubProcess create_model() end ==================================
2024-10-21 23:43:58,345:INFO:Creating metrics dataframe
2024-10-21 23:43:58,352:INFO:Initializing Dummy Classifier
2024-10-21 23:43:58,352:INFO:Total runtime is 2.1454461455345153 minutes
2024-10-21 23:43:58,354:INFO:SubProcess create_model() called ==================================
2024-10-21 23:43:58,355:INFO:Initializing create_model()
2024-10-21 23:43:58,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601F1670D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 23:43:58,355:INFO:Checking exceptions
2024-10-21 23:43:58,355:INFO:Importing libraries
2024-10-21 23:43:58,355:INFO:Copying training dataset
2024-10-21 23:43:58,403:INFO:Defining folds
2024-10-21 23:43:58,403:INFO:Declaring metric variables
2024-10-21 23:43:58,405:INFO:Importing untrained model
2024-10-21 23:43:58,408:INFO:Dummy Classifier Imported successfully
2024-10-21 23:43:58,416:INFO:Starting cross validation
2024-10-21 23:43:58,418:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 23:43:59,297:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 23:43:59,370:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 23:43:59,371:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 23:43:59,437:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 23:43:59,458:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 23:43:59,521:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 23:43:59,546:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 23:43:59,569:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 23:43:59,595:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 23:43:59,626:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-21 23:43:59,641:INFO:Calculating mean and std
2024-10-21 23:43:59,642:INFO:Creating metrics dataframe
2024-10-21 23:43:59,644:INFO:Uploading results into container
2024-10-21 23:43:59,645:INFO:Uploading model into container now
2024-10-21 23:43:59,645:INFO:_master_model_container: 14
2024-10-21 23:43:59,645:INFO:_display_container: 2
2024-10-21 23:43:59,645:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-10-21 23:43:59,645:INFO:create_model() successfully completed......................................
2024-10-21 23:43:59,731:INFO:SubProcess create_model() end ==================================
2024-10-21 23:43:59,731:INFO:Creating metrics dataframe
2024-10-21 23:43:59,776:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-10-21 23:43:59,784:INFO:Initializing create_model()
2024-10-21 23:43:59,785:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 23:43:59,785:INFO:Checking exceptions
2024-10-21 23:43:59,786:INFO:Importing libraries
2024-10-21 23:43:59,787:INFO:Copying training dataset
2024-10-21 23:43:59,841:INFO:Defining folds
2024-10-21 23:43:59,841:INFO:Declaring metric variables
2024-10-21 23:43:59,841:INFO:Importing untrained model
2024-10-21 23:43:59,841:INFO:Declaring custom model
2024-10-21 23:43:59,842:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-21 23:43:59,843:INFO:Cross validation set to False
2024-10-21 23:43:59,843:INFO:Fitting Model
2024-10-21 23:44:00,290:INFO:[LightGBM] [Info] Number of positive: 24445, number of negative: 91078
2024-10-21 23:44:00,295:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001465 seconds.
2024-10-21 23:44:00,296:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-10-21 23:44:00,296:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-10-21 23:44:00,296:INFO:[LightGBM] [Info] Total Bins 860
2024-10-21 23:44:00,296:INFO:[LightGBM] [Info] Number of data points in the train set: 115523, number of used features: 12
2024-10-21 23:44:00,297:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.211603 -> initscore=-1.315291
2024-10-21 23:44:00,297:INFO:[LightGBM] [Info] Start training from score -1.315291
2024-10-21 23:44:00,643:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-21 23:44:00,643:INFO:create_model() successfully completed......................................
2024-10-21 23:44:00,730:INFO:Creating Dashboard logs
2024-10-21 23:44:00,733:INFO:Model: Light Gradient Boosting Machine
2024-10-21 23:44:01,454:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-10-21 23:44:01,741:INFO:Initializing predict_model()
2024-10-21 23:44:01,741:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016020BFAC00>)
2024-10-21 23:44:01,742:INFO:Checking exceptions
2024-10-21 23:44:01,742:INFO:Preloading libraries
2024-10-21 23:44:16,667:INFO:Creating Dashboard logs
2024-10-21 23:44:16,669:INFO:Model: Gradient Boosting Classifier
2024-10-21 23:44:16,739:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-21 23:44:17,168:INFO:Creating Dashboard logs
2024-10-21 23:44:17,170:INFO:Model: Ada Boost Classifier
2024-10-21 23:44:17,289:INFO:Logged params: {'algorithm': 'SAMME.R', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2024-10-21 23:44:17,651:INFO:Creating Dashboard logs
2024-10-21 23:44:17,653:INFO:Model: Random Forest Classifier
2024-10-21 23:44:17,727:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-21 23:44:18,334:INFO:Creating Dashboard logs
2024-10-21 23:44:18,337:INFO:Model: Extra Trees Classifier
2024-10-21 23:44:18,383:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-21 23:44:18,769:INFO:Creating Dashboard logs
2024-10-21 23:44:18,771:INFO:Model: Logistic Regression
2024-10-21 23:44:18,820:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-10-21 23:44:19,188:INFO:Creating Dashboard logs
2024-10-21 23:44:19,190:INFO:Model: Linear Discriminant Analysis
2024-10-21 23:44:19,339:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2024-10-21 23:44:20,489:INFO:Creating Dashboard logs
2024-10-21 23:44:20,491:INFO:Model: Ridge Classifier
2024-10-21 23:44:20,908:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2024-10-21 23:44:21,723:INFO:Creating Dashboard logs
2024-10-21 23:44:21,726:INFO:Model: Decision Tree Classifier
2024-10-21 23:44:21,781:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 123, 'splitter': 'best'}
2024-10-21 23:44:22,407:INFO:Creating Dashboard logs
2024-10-21 23:44:22,410:INFO:Model: Naive Bayes
2024-10-21 23:44:22,601:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2024-10-21 23:44:23,050:INFO:Creating Dashboard logs
2024-10-21 23:44:23,052:INFO:Model: Dummy Classifier
2024-10-21 23:44:23,131:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2024-10-21 23:44:23,463:INFO:Creating Dashboard logs
2024-10-21 23:44:23,465:INFO:Model: K Neighbors Classifier
2024-10-21 23:44:23,504:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-10-21 23:44:23,943:INFO:Creating Dashboard logs
2024-10-21 23:44:23,946:INFO:Model: SVM - Linear Kernel
2024-10-21 23:44:24,043:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-21 23:44:24,501:INFO:Creating Dashboard logs
2024-10-21 23:44:24,503:INFO:Model: Quadratic Discriminant Analysis
2024-10-21 23:44:24,559:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2024-10-21 23:44:25,124:INFO:_master_model_container: 14
2024-10-21 23:44:25,125:INFO:_display_container: 2
2024-10-21 23:44:25,126:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-21 23:44:25,126:INFO:compare_models() successfully completed......................................
2024-10-21 23:55:17,053:INFO:Initializing tune_model()
2024-10-21 23:55:17,053:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid={'n_estimators': [100], 'max_depth': [10, 20], 'min_samples_split': [2]}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-10-21 23:55:17,054:INFO:Checking exceptions
2024-10-21 23:55:17,114:INFO:Copying training dataset
2024-10-21 23:55:17,159:INFO:Checking base model
2024-10-21 23:55:17,159:INFO:Base model : Light Gradient Boosting Machine
2024-10-21 23:55:17,162:INFO:Declaring metric variables
2024-10-21 23:55:17,167:INFO:Defining Hyperparameters
2024-10-21 23:55:17,261:INFO:custom_grid: {'actual_estimator__n_estimators': [100], 'actual_estimator__max_depth': [10, 20], 'actual_estimator__min_samples_split': [2]}
2024-10-21 23:55:17,261:INFO:Tuning with n_jobs=-1
2024-10-21 23:55:17,261:INFO:Initializing GridSearchCV
2024-10-21 23:55:37,049:INFO:best_params: {'actual_estimator__max_depth': 10, 'actual_estimator__min_samples_split': 2, 'actual_estimator__n_estimators': 100}
2024-10-21 23:55:37,050:INFO:Hyperparameter search completed
2024-10-21 23:55:37,050:INFO:SubProcess create_model() called ==================================
2024-10-21 23:55:37,050:INFO:Initializing create_model()
2024-10-21 23:55:37,050:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016020B34AD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'max_depth': 10, 'min_samples_split': 2, 'n_estimators': 100})
2024-10-21 23:55:37,050:INFO:Checking exceptions
2024-10-21 23:55:37,051:INFO:Importing libraries
2024-10-21 23:55:37,051:INFO:Copying training dataset
2024-10-21 23:55:37,093:INFO:Defining folds
2024-10-21 23:55:37,093:INFO:Declaring metric variables
2024-10-21 23:55:37,095:INFO:Importing untrained model
2024-10-21 23:55:37,095:INFO:Declaring custom model
2024-10-21 23:55:37,098:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-21 23:55:37,103:INFO:Starting cross validation
2024-10-21 23:55:37,104:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 23:55:40,042:INFO:Calculating mean and std
2024-10-21 23:55:40,043:INFO:Creating metrics dataframe
2024-10-21 23:55:40,047:INFO:Finalizing model
2024-10-21 23:55:40,338:INFO:[LightGBM] [Warning] Unknown parameter: min_samples_split
2024-10-21 23:55:40,375:INFO:[LightGBM] [Warning] Unknown parameter: min_samples_split
2024-10-21 23:55:40,375:INFO:[LightGBM] [Info] Number of positive: 24445, number of negative: 91078
2024-10-21 23:55:40,378:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001022 seconds.
2024-10-21 23:55:40,378:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-10-21 23:55:40,378:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-10-21 23:55:40,378:INFO:[LightGBM] [Info] Total Bins 860
2024-10-21 23:55:40,378:INFO:[LightGBM] [Info] Number of data points in the train set: 115523, number of used features: 12
2024-10-21 23:55:40,379:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.211603 -> initscore=-1.315291
2024-10-21 23:55:40,379:INFO:[LightGBM] [Info] Start training from score -1.315291
2024-10-21 23:55:40,544:INFO:Uploading results into container
2024-10-21 23:55:40,545:INFO:Uploading model into container now
2024-10-21 23:55:40,545:INFO:_master_model_container: 15
2024-10-21 23:55:40,545:INFO:_display_container: 3
2024-10-21 23:55:40,546:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=10,
               min_child_samples=20, min_child_weight=0.001,
               min_samples_split=2, min_split_gain=0.0, n_estimators=100,
               n_jobs=-1, num_leaves=31, objective=None, random_state=123,
               reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-21 23:55:40,546:INFO:create_model() successfully completed......................................
2024-10-21 23:55:40,630:INFO:SubProcess create_model() end ==================================
2024-10-21 23:55:40,630:INFO:choose_better activated
2024-10-21 23:55:40,633:INFO:SubProcess create_model() called ==================================
2024-10-21 23:55:40,633:INFO:Initializing create_model()
2024-10-21 23:55:40,633:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-21 23:55:40,633:INFO:Checking exceptions
2024-10-21 23:55:40,635:INFO:Importing libraries
2024-10-21 23:55:40,635:INFO:Copying training dataset
2024-10-21 23:55:40,668:INFO:Defining folds
2024-10-21 23:55:40,668:INFO:Declaring metric variables
2024-10-21 23:55:40,669:INFO:Importing untrained model
2024-10-21 23:55:40,669:INFO:Declaring custom model
2024-10-21 23:55:40,669:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-21 23:55:40,669:INFO:Starting cross validation
2024-10-21 23:55:40,670:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-21 23:55:43,643:INFO:Calculating mean and std
2024-10-21 23:55:43,643:INFO:Creating metrics dataframe
2024-10-21 23:55:43,645:INFO:Finalizing model
2024-10-21 23:55:43,946:INFO:[LightGBM] [Info] Number of positive: 24445, number of negative: 91078
2024-10-21 23:55:43,949:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000697 seconds.
2024-10-21 23:55:43,949:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-10-21 23:55:43,949:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-10-21 23:55:43,949:INFO:[LightGBM] [Info] Total Bins 860
2024-10-21 23:55:43,949:INFO:[LightGBM] [Info] Number of data points in the train set: 115523, number of used features: 12
2024-10-21 23:55:43,950:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.211603 -> initscore=-1.315291
2024-10-21 23:55:43,950:INFO:[LightGBM] [Info] Start training from score -1.315291
2024-10-21 23:55:44,126:INFO:Uploading results into container
2024-10-21 23:55:44,126:INFO:Uploading model into container now
2024-10-21 23:55:44,126:INFO:_master_model_container: 16
2024-10-21 23:55:44,126:INFO:_display_container: 4
2024-10-21 23:55:44,127:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-21 23:55:44,127:INFO:create_model() successfully completed......................................
2024-10-21 23:55:44,200:INFO:SubProcess create_model() end ==================================
2024-10-21 23:55:44,200:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for Accuracy is 0.8661
2024-10-21 23:55:44,201:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=10,
               min_child_samples=20, min_child_weight=0.001,
               min_samples_split=2, min_split_gain=0.0, n_estimators=100,
               n_jobs=-1, num_leaves=31, objective=None, random_state=123,
               reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for Accuracy is 0.8667
2024-10-21 23:55:44,201:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=10,
               min_child_samples=20, min_child_weight=0.001,
               min_samples_split=2, min_split_gain=0.0, n_estimators=100,
               n_jobs=-1, num_leaves=31, objective=None, random_state=123,
               reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) is best model
2024-10-21 23:55:44,201:INFO:choose_better completed
2024-10-21 23:55:44,201:INFO:Creating Dashboard logs
2024-10-21 23:55:44,204:INFO:Model: Light Gradient Boosting Machine
2024-10-21 23:55:44,290:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': 10, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0, 'min_samples_split': 2}
2024-10-21 23:55:44,507:INFO:Initializing predict_model()
2024-10-21 23:55:44,507:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=10,
               min_child_samples=20, min_child_weight=0.001,
               min_samples_split=2, min_split_gain=0.0, n_estimators=100,
               n_jobs=-1, num_leaves=31, objective=None, random_state=123,
               reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016020ADCF40>)
2024-10-21 23:55:44,507:INFO:Checking exceptions
2024-10-21 23:55:44,507:INFO:Preloading libraries
2024-10-21 23:55:45,027:INFO:_master_model_container: 16
2024-10-21 23:55:45,027:INFO:_display_container: 3
2024-10-21 23:55:45,027:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=10,
               min_child_samples=20, min_child_weight=0.001,
               min_samples_split=2, min_split_gain=0.0, n_estimators=100,
               n_jobs=-1, num_leaves=31, objective=None, random_state=123,
               reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-21 23:55:45,028:INFO:tune_model() successfully completed......................................
2024-10-22 00:00:10,076:INFO:Initializing tune_model()
2024-10-22 00:00:10,077:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid={'n_estimators': [100, 200], 'max_depth': [10, 20, -1], 'learning_rate': [0.01, 0.1], 'num_leaves': [31, 50, 100], 'min_child_samples': [20, 30]}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-10-22 00:00:10,077:INFO:Checking exceptions
2024-10-22 00:00:10,103:INFO:Copying training dataset
2024-10-22 00:00:10,125:INFO:Checking base model
2024-10-22 00:00:10,125:INFO:Base model : Light Gradient Boosting Machine
2024-10-22 00:00:10,127:INFO:Declaring metric variables
2024-10-22 00:00:10,129:INFO:Defining Hyperparameters
2024-10-22 00:00:10,246:INFO:custom_grid: {'actual_estimator__n_estimators': [100, 200], 'actual_estimator__max_depth': [10, 20, -1], 'actual_estimator__learning_rate': [0.01, 0.1], 'actual_estimator__num_leaves': [31, 50, 100], 'actual_estimator__min_child_samples': [20, 30]}
2024-10-22 00:00:10,246:INFO:Tuning with n_jobs=-1
2024-10-22 00:00:10,246:INFO:Initializing GridSearchCV
2024-10-22 00:05:33,916:INFO:Initializing tune_model()
2024-10-22 00:05:33,916:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid={'n_estimators': [100], 'max_depth': [10, 20]}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-10-22 00:05:33,917:INFO:Checking exceptions
2024-10-22 00:05:33,968:INFO:Copying training dataset
2024-10-22 00:05:34,018:INFO:Checking base model
2024-10-22 00:05:34,018:INFO:Base model : Light Gradient Boosting Machine
2024-10-22 00:05:34,021:INFO:Declaring metric variables
2024-10-22 00:05:34,024:INFO:Defining Hyperparameters
2024-10-22 00:05:34,137:INFO:custom_grid: {'actual_estimator__n_estimators': [100], 'actual_estimator__max_depth': [10, 20]}
2024-10-22 00:05:34,138:INFO:Tuning with n_jobs=-1
2024-10-22 00:05:34,138:INFO:Initializing GridSearchCV
2024-10-22 00:05:46,414:INFO:best_params: {'actual_estimator__max_depth': 10, 'actual_estimator__n_estimators': 100}
2024-10-22 00:05:46,414:INFO:Hyperparameter search completed
2024-10-22 00:05:46,414:INFO:SubProcess create_model() called ==================================
2024-10-22 00:05:46,416:INFO:Initializing create_model()
2024-10-22 00:05:46,416:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016021EE8FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'max_depth': 10, 'n_estimators': 100})
2024-10-22 00:05:46,416:INFO:Checking exceptions
2024-10-22 00:05:46,416:INFO:Importing libraries
2024-10-22 00:05:46,416:INFO:Copying training dataset
2024-10-22 00:05:46,462:INFO:Defining folds
2024-10-22 00:05:46,462:INFO:Declaring metric variables
2024-10-22 00:05:46,466:INFO:Importing untrained model
2024-10-22 00:05:46,466:INFO:Declaring custom model
2024-10-22 00:05:46,470:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-22 00:05:46,475:INFO:Starting cross validation
2024-10-22 00:05:46,476:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:05:50,473:INFO:Calculating mean and std
2024-10-22 00:05:50,474:INFO:Creating metrics dataframe
2024-10-22 00:05:50,480:INFO:Finalizing model
2024-10-22 00:05:50,822:INFO:[LightGBM] [Info] Number of positive: 24445, number of negative: 91078
2024-10-22 00:05:50,827:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001486 seconds.
2024-10-22 00:05:50,827:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-10-22 00:05:50,827:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-10-22 00:05:50,827:INFO:[LightGBM] [Info] Total Bins 860
2024-10-22 00:05:50,827:INFO:[LightGBM] [Info] Number of data points in the train set: 115523, number of used features: 12
2024-10-22 00:05:50,827:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.211603 -> initscore=-1.315291
2024-10-22 00:05:50,827:INFO:[LightGBM] [Info] Start training from score -1.315291
2024-10-22 00:05:51,142:INFO:Uploading results into container
2024-10-22 00:05:51,143:INFO:Uploading model into container now
2024-10-22 00:05:51,143:INFO:_master_model_container: 17
2024-10-22 00:05:51,143:INFO:_display_container: 4
2024-10-22 00:05:51,144:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=10,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-22 00:05:51,144:INFO:create_model() successfully completed......................................
2024-10-22 00:05:51,262:INFO:SubProcess create_model() end ==================================
2024-10-22 00:05:51,262:INFO:choose_better activated
2024-10-22 00:05:51,264:INFO:SubProcess create_model() called ==================================
2024-10-22 00:05:51,264:INFO:Initializing create_model()
2024-10-22 00:05:51,264:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:05:51,264:INFO:Checking exceptions
2024-10-22 00:05:51,267:INFO:Importing libraries
2024-10-22 00:05:51,267:INFO:Copying training dataset
2024-10-22 00:05:51,296:INFO:Defining folds
2024-10-22 00:05:51,296:INFO:Declaring metric variables
2024-10-22 00:05:51,296:INFO:Importing untrained model
2024-10-22 00:05:51,297:INFO:Declaring custom model
2024-10-22 00:05:51,297:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-22 00:05:51,297:INFO:Starting cross validation
2024-10-22 00:05:51,298:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:05:54,922:INFO:Calculating mean and std
2024-10-22 00:05:54,922:INFO:Creating metrics dataframe
2024-10-22 00:05:54,924:INFO:Finalizing model
2024-10-22 00:05:55,238:INFO:[LightGBM] [Info] Number of positive: 24445, number of negative: 91078
2024-10-22 00:05:55,244:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001683 seconds.
2024-10-22 00:05:55,244:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-10-22 00:05:55,244:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-10-22 00:05:55,244:INFO:[LightGBM] [Info] Total Bins 860
2024-10-22 00:05:55,244:INFO:[LightGBM] [Info] Number of data points in the train set: 115523, number of used features: 12
2024-10-22 00:05:55,245:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.211603 -> initscore=-1.315291
2024-10-22 00:05:55,245:INFO:[LightGBM] [Info] Start training from score -1.315291
2024-10-22 00:05:55,535:INFO:Uploading results into container
2024-10-22 00:05:55,536:INFO:Uploading model into container now
2024-10-22 00:05:55,536:INFO:_master_model_container: 18
2024-10-22 00:05:55,536:INFO:_display_container: 5
2024-10-22 00:05:55,537:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-22 00:05:55,537:INFO:create_model() successfully completed......................................
2024-10-22 00:05:55,642:INFO:SubProcess create_model() end ==================================
2024-10-22 00:05:55,642:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for Accuracy is 0.8661
2024-10-22 00:05:55,642:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=10,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for Accuracy is 0.8667
2024-10-22 00:05:55,642:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=10,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) is best model
2024-10-22 00:05:55,642:INFO:choose_better completed
2024-10-22 00:05:55,642:INFO:Creating Dashboard logs
2024-10-22 00:05:55,645:INFO:Model: Light Gradient Boosting Machine
2024-10-22 00:05:55,709:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': 10, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-10-22 00:05:55,940:INFO:Initializing predict_model()
2024-10-22 00:05:55,940:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=10,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160251484A0>)
2024-10-22 00:05:55,940:INFO:Checking exceptions
2024-10-22 00:05:55,940:INFO:Preloading libraries
2024-10-22 00:05:56,540:INFO:_master_model_container: 18
2024-10-22 00:05:56,540:INFO:_display_container: 4
2024-10-22 00:05:56,541:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=10,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-22 00:05:56,541:INFO:tune_model() successfully completed......................................
2024-10-22 00:11:18,133:INFO:Initializing tune_model()
2024-10-22 00:11:18,133:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid={'n_estimators': [100], 'max_depth': [10, 20], 'min_child_samples': [20, 30]}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-10-22 00:11:18,134:INFO:Checking exceptions
2024-10-22 00:11:18,164:INFO:Copying training dataset
2024-10-22 00:11:18,194:INFO:Checking base model
2024-10-22 00:11:18,194:INFO:Base model : Light Gradient Boosting Machine
2024-10-22 00:11:18,197:INFO:Declaring metric variables
2024-10-22 00:11:18,201:INFO:Defining Hyperparameters
2024-10-22 00:11:18,330:INFO:custom_grid: {'actual_estimator__n_estimators': [100], 'actual_estimator__max_depth': [10, 20], 'actual_estimator__min_child_samples': [20, 30]}
2024-10-22 00:11:18,331:INFO:Tuning with n_jobs=-1
2024-10-22 00:11:18,331:INFO:Initializing GridSearchCV
2024-10-22 00:11:35,516:INFO:best_params: {'actual_estimator__max_depth': 10, 'actual_estimator__min_child_samples': 20, 'actual_estimator__n_estimators': 100}
2024-10-22 00:11:35,517:INFO:Hyperparameter search completed
2024-10-22 00:11:35,517:INFO:SubProcess create_model() called ==================================
2024-10-22 00:11:35,518:INFO:Initializing create_model()
2024-10-22 00:11:35,518:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016020CEA490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'max_depth': 10, 'min_child_samples': 20, 'n_estimators': 100})
2024-10-22 00:11:35,518:INFO:Checking exceptions
2024-10-22 00:11:35,518:INFO:Importing libraries
2024-10-22 00:11:35,518:INFO:Copying training dataset
2024-10-22 00:11:35,563:INFO:Defining folds
2024-10-22 00:11:35,564:INFO:Declaring metric variables
2024-10-22 00:11:35,567:INFO:Importing untrained model
2024-10-22 00:11:35,567:INFO:Declaring custom model
2024-10-22 00:11:35,571:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-22 00:11:35,576:INFO:Starting cross validation
2024-10-22 00:11:35,577:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:11:39,115:INFO:Calculating mean and std
2024-10-22 00:11:39,116:INFO:Creating metrics dataframe
2024-10-22 00:11:39,121:INFO:Finalizing model
2024-10-22 00:11:39,464:INFO:[LightGBM] [Info] Number of positive: 24445, number of negative: 91078
2024-10-22 00:11:39,469:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000945 seconds.
2024-10-22 00:11:39,469:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-10-22 00:11:39,469:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-10-22 00:11:39,469:INFO:[LightGBM] [Info] Total Bins 860
2024-10-22 00:11:39,469:INFO:[LightGBM] [Info] Number of data points in the train set: 115523, number of used features: 12
2024-10-22 00:11:39,470:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.211603 -> initscore=-1.315291
2024-10-22 00:11:39,471:INFO:[LightGBM] [Info] Start training from score -1.315291
2024-10-22 00:11:39,679:INFO:Uploading results into container
2024-10-22 00:11:39,680:INFO:Uploading model into container now
2024-10-22 00:11:39,681:INFO:_master_model_container: 19
2024-10-22 00:11:39,681:INFO:_display_container: 5
2024-10-22 00:11:39,683:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=10,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-22 00:11:39,683:INFO:create_model() successfully completed......................................
2024-10-22 00:11:39,801:INFO:SubProcess create_model() end ==================================
2024-10-22 00:11:39,801:INFO:choose_better activated
2024-10-22 00:11:39,804:INFO:SubProcess create_model() called ==================================
2024-10-22 00:11:39,804:INFO:Initializing create_model()
2024-10-22 00:11:39,804:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:11:39,804:INFO:Checking exceptions
2024-10-22 00:11:39,806:INFO:Importing libraries
2024-10-22 00:11:39,806:INFO:Copying training dataset
2024-10-22 00:11:39,833:INFO:Defining folds
2024-10-22 00:11:39,833:INFO:Declaring metric variables
2024-10-22 00:11:39,833:INFO:Importing untrained model
2024-10-22 00:11:39,833:INFO:Declaring custom model
2024-10-22 00:11:39,834:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-22 00:11:39,834:INFO:Starting cross validation
2024-10-22 00:11:39,835:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:11:43,265:INFO:Calculating mean and std
2024-10-22 00:11:43,266:INFO:Creating metrics dataframe
2024-10-22 00:11:43,267:INFO:Finalizing model
2024-10-22 00:11:43,576:INFO:[LightGBM] [Info] Number of positive: 24445, number of negative: 91078
2024-10-22 00:11:43,579:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001256 seconds.
2024-10-22 00:11:43,580:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-10-22 00:11:43,580:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-10-22 00:11:43,580:INFO:[LightGBM] [Info] Total Bins 860
2024-10-22 00:11:43,580:INFO:[LightGBM] [Info] Number of data points in the train set: 115523, number of used features: 12
2024-10-22 00:11:43,581:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.211603 -> initscore=-1.315291
2024-10-22 00:11:43,581:INFO:[LightGBM] [Info] Start training from score -1.315291
2024-10-22 00:11:43,803:INFO:Uploading results into container
2024-10-22 00:11:43,803:INFO:Uploading model into container now
2024-10-22 00:11:43,804:INFO:_master_model_container: 20
2024-10-22 00:11:43,804:INFO:_display_container: 6
2024-10-22 00:11:43,805:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-22 00:11:43,805:INFO:create_model() successfully completed......................................
2024-10-22 00:11:43,905:INFO:SubProcess create_model() end ==================================
2024-10-22 00:11:43,905:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for Accuracy is 0.8661
2024-10-22 00:11:43,905:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=10,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) result for Accuracy is 0.8667
2024-10-22 00:11:43,906:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=10,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) is best model
2024-10-22 00:11:43,906:INFO:choose_better completed
2024-10-22 00:11:43,906:INFO:Creating Dashboard logs
2024-10-22 00:11:43,909:INFO:Model: Light Gradient Boosting Machine
2024-10-22 00:11:43,989:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': 10, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-10-22 00:11:44,229:INFO:Initializing predict_model()
2024-10-22 00:11:44,229:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=10,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160251496C0>)
2024-10-22 00:11:44,229:INFO:Checking exceptions
2024-10-22 00:11:44,229:INFO:Preloading libraries
2024-10-22 00:11:44,804:INFO:_master_model_container: 20
2024-10-22 00:11:44,804:INFO:_display_container: 5
2024-10-22 00:11:44,806:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=10,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-22 00:11:44,806:INFO:tune_model() successfully completed......................................
2024-10-22 00:16:06,026:INFO:Initializing compare_models()
2024-10-22 00:16:06,026:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-22 00:16:06,026:INFO:Checking exceptions
2024-10-22 00:16:06,043:INFO:Preparing display monitor
2024-10-22 00:16:06,059:INFO:Initializing Logistic Regression
2024-10-22 00:16:06,059:INFO:Total runtime is 0.0 minutes
2024-10-22 00:16:06,061:INFO:SubProcess create_model() called ==================================
2024-10-22 00:16:06,061:INFO:Initializing create_model()
2024-10-22 00:16:06,061:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001601ED3C6D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016020C06950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:16:06,061:INFO:Checking exceptions
2024-10-22 00:16:06,061:INFO:Importing libraries
2024-10-22 00:16:06,061:INFO:Copying training dataset
2024-10-22 00:16:06,092:INFO:Defining folds
2024-10-22 00:16:06,092:INFO:Declaring metric variables
2024-10-22 00:16:06,094:INFO:Importing untrained model
2024-10-22 00:16:06,097:INFO:Logistic Regression Imported successfully
2024-10-22 00:16:06,103:INFO:Starting cross validation
2024-10-22 00:16:06,105:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:16:34,545:INFO:PyCaret ClassificationExperiment
2024-10-22 00:16:34,545:INFO:Logging name: Bank_Churn
2024-10-22 00:16:34,545:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-22 00:16:34,545:INFO:version 3.3.2
2024-10-22 00:16:34,545:INFO:Initializing setup()
2024-10-22 00:16:34,545:INFO:self.USI: 62c8
2024-10-22 00:16:34,545:INFO:self._variable_keys: {'pipeline', 'memory', 'html_param', 'exp_id', 'gpu_param', 'X_test', 'logging_param', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'n_jobs_param', 'idx', 'log_plots_param', 'target_param', 'is_multiclass', 'fold_shuffle_param', 'USI', 'fold_groups_param', 'fix_imbalance', 'data', 'y_train', 'X', 'y_test', '_available_plots', 'X_train', 'fold_generator', 'y', '_ml_usecase'}
2024-10-22 00:16:34,546:INFO:Checking environment
2024-10-22 00:16:34,546:INFO:python_version: 3.11.1
2024-10-22 00:16:34,546:INFO:python_build: ('tags/v3.11.1:a7a450f', 'Dec  6 2022 19:58:39')
2024-10-22 00:16:34,546:INFO:machine: AMD64
2024-10-22 00:16:34,546:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-22 00:16:34,552:INFO:Memory: svmem(total=16984227840, available=8379408384, percent=50.7, used=8604819456, free=8379408384)
2024-10-22 00:16:34,552:INFO:Physical Core: 6
2024-10-22 00:16:34,552:INFO:Logical Core: 12
2024-10-22 00:16:34,552:INFO:Checking libraries
2024-10-22 00:16:34,552:INFO:System:
2024-10-22 00:16:34,553:INFO:    python: 3.11.1 (tags/v3.11.1:a7a450f, Dec  6 2022, 19:58:39) [MSC v.1934 64 bit (AMD64)]
2024-10-22 00:16:34,553:INFO:executable: e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Scripts\python.exe
2024-10-22 00:16:34,553:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-22 00:16:34,553:INFO:PyCaret required dependencies:
2024-10-22 00:16:34,553:INFO:                 pip: 22.3.1
2024-10-22 00:16:34,553:INFO:          setuptools: 65.5.0
2024-10-22 00:16:34,553:INFO:             pycaret: 3.3.2
2024-10-22 00:16:34,553:INFO:             IPython: 8.28.0
2024-10-22 00:16:34,553:INFO:          ipywidgets: 8.1.5
2024-10-22 00:16:34,553:INFO:                tqdm: 4.66.5
2024-10-22 00:16:34,553:INFO:               numpy: 1.26.4
2024-10-22 00:16:34,553:INFO:              pandas: 2.1.4
2024-10-22 00:16:34,553:INFO:              jinja2: 3.1.4
2024-10-22 00:16:34,553:INFO:               scipy: 1.11.4
2024-10-22 00:16:34,553:INFO:              joblib: 1.3.2
2024-10-22 00:16:34,553:INFO:             sklearn: 1.4.2
2024-10-22 00:16:34,553:INFO:                pyod: 2.0.2
2024-10-22 00:16:34,553:INFO:            imblearn: 0.12.4
2024-10-22 00:16:34,553:INFO:   category_encoders: 2.6.4
2024-10-22 00:16:34,553:INFO:            lightgbm: 4.5.0
2024-10-22 00:16:34,553:INFO:               numba: 0.60.0
2024-10-22 00:16:34,553:INFO:            requests: 2.32.3
2024-10-22 00:16:34,553:INFO:          matplotlib: 3.7.5
2024-10-22 00:16:34,553:INFO:          scikitplot: 0.3.7
2024-10-22 00:16:34,553:INFO:         yellowbrick: 1.5
2024-10-22 00:16:34,553:INFO:              plotly: 5.24.1
2024-10-22 00:16:34,553:INFO:    plotly-resampler: Not installed
2024-10-22 00:16:34,553:INFO:             kaleido: 0.2.1
2024-10-22 00:16:34,553:INFO:           schemdraw: 0.15
2024-10-22 00:16:34,553:INFO:         statsmodels: 0.14.4
2024-10-22 00:16:34,553:INFO:              sktime: 0.26.0
2024-10-22 00:16:34,553:INFO:               tbats: 1.1.3
2024-10-22 00:16:34,553:INFO:            pmdarima: 2.0.4
2024-10-22 00:16:34,553:INFO:              psutil: 6.1.0
2024-10-22 00:16:34,553:INFO:          markupsafe: 3.0.2
2024-10-22 00:16:34,553:INFO:             pickle5: Not installed
2024-10-22 00:16:34,554:INFO:         cloudpickle: 3.1.0
2024-10-22 00:16:34,554:INFO:         deprecation: 2.1.0
2024-10-22 00:16:34,554:INFO:              xxhash: 3.5.0
2024-10-22 00:16:34,554:INFO:           wurlitzer: Not installed
2024-10-22 00:16:34,554:INFO:PyCaret optional dependencies:
2024-10-22 00:16:34,554:INFO:                shap: Not installed
2024-10-22 00:16:34,554:INFO:           interpret: Not installed
2024-10-22 00:16:34,554:INFO:                umap: Not installed
2024-10-22 00:16:34,554:INFO:     ydata_profiling: Not installed
2024-10-22 00:16:34,554:INFO:  explainerdashboard: Not installed
2024-10-22 00:16:34,554:INFO:             autoviz: Not installed
2024-10-22 00:16:34,554:INFO:           fairlearn: Not installed
2024-10-22 00:16:34,554:INFO:          deepchecks: Not installed
2024-10-22 00:16:34,554:INFO:             xgboost: Not installed
2024-10-22 00:16:34,554:INFO:            catboost: Not installed
2024-10-22 00:16:34,554:INFO:              kmodes: Not installed
2024-10-22 00:16:34,554:INFO:             mlxtend: Not installed
2024-10-22 00:16:34,554:INFO:       statsforecast: Not installed
2024-10-22 00:16:34,554:INFO:        tune_sklearn: Not installed
2024-10-22 00:16:34,554:INFO:                 ray: Not installed
2024-10-22 00:16:34,554:INFO:            hyperopt: 0.2.7
2024-10-22 00:16:34,554:INFO:              optuna: 4.0.0
2024-10-22 00:16:34,554:INFO:               skopt: 0.10.2
2024-10-22 00:16:34,554:INFO:              mlflow: 2.17.0
2024-10-22 00:16:34,554:INFO:              gradio: Not installed
2024-10-22 00:16:34,554:INFO:             fastapi: 0.115.2
2024-10-22 00:16:34,554:INFO:             uvicorn: 0.32.0
2024-10-22 00:16:34,554:INFO:              m2cgen: Not installed
2024-10-22 00:16:34,554:INFO:           evidently: Not installed
2024-10-22 00:16:34,554:INFO:               fugue: Not installed
2024-10-22 00:16:34,554:INFO:           streamlit: Not installed
2024-10-22 00:16:34,554:INFO:             prophet: Not installed
2024-10-22 00:16:34,554:INFO:None
2024-10-22 00:16:34,554:INFO:Set up data.
2024-10-22 00:16:34,706:INFO:Set up folding strategy.
2024-10-22 00:16:34,706:INFO:Set up train/test split.
2024-10-22 00:16:34,785:INFO:Set up index.
2024-10-22 00:16:34,788:INFO:Assigning column types.
2024-10-22 00:16:34,801:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-22 00:16:34,830:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-22 00:16:34,830:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 00:16:34,847:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:16:34,848:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:16:34,873:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-22 00:16:34,873:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 00:16:34,889:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:16:34,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:16:34,889:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-22 00:16:34,913:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 00:16:34,929:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:16:34,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:16:34,957:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 00:16:34,974:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:16:34,974:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:16:34,975:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-22 00:16:35,016:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:16:35,016:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:16:35,061:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:16:35,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:16:35,064:INFO:Preparing preprocessing pipeline...
2024-10-22 00:16:35,069:INFO:Set up simple imputation.
2024-10-22 00:16:35,081:INFO:Set up encoding of ordinal features.
2024-10-22 00:16:35,088:INFO:Set up encoding of categorical features.
2024-10-22 00:16:35,338:INFO:Finished creating preprocessing pipeline.
2024-10-22 00:16:35,346:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-22 00:16:35,346:INFO:Creating final display dataframe.
2024-10-22 00:16:35,515:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target           Exited
2                   Target type           Binary
3           Original data shape     (165034, 14)
4        Transformed data shape     (165034, 13)
5   Transformed train set shape     (115523, 13)
6    Transformed test set shape      (49511, 13)
7               Ignore features                3
8              Numeric features                8
9          Categorical features                2
10                   Preprocess             True
11              Imputation type           simple
12           Numeric imputation             mean
13       Categorical imputation             mode
14     Maximum one-hot encoding               25
15              Encoding method             None
16               Fold Generator  StratifiedKFold
17                  Fold Number               10
18                     CPU Jobs               -1
19                      Use GPU            False
20               Log Experiment     MlflowLogger
21              Experiment Name       Bank_Churn
22                          USI             62c8
2024-10-22 00:16:35,592:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:16:35,593:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:16:35,636:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:16:35,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:16:35,637:INFO:Logging experiment in loggers
2024-10-22 00:16:35,849:INFO:SubProcess save_model() called ==================================
2024-10-22 00:16:35,869:INFO:Initializing save_model()
2024-10-22 00:16:35,869:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), model_name=C:\Users\User\AppData\Local\Temp\tmp708ybvob\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-10-22 00:16:35,870:INFO:Adding model into prep_pipe
2024-10-22 00:16:35,870:WARNING:Only Model saved as it was a pipeline.
2024-10-22 00:16:35,872:INFO:C:\Users\User\AppData\Local\Temp\tmp708ybvob\Transformation Pipeline.pkl saved in current working directory
2024-10-22 00:16:35,879:INFO:Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-22 00:16:35,879:INFO:save_model() successfully completed......................................
2024-10-22 00:16:35,986:INFO:SubProcess save_model() end ==================================
2024-10-22 00:16:36,026:INFO:setup() successfully completed in 1.11s...............
2024-10-22 00:16:54,213:INFO:Initializing compare_models()
2024-10-22 00:16:54,213:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-22 00:16:54,213:INFO:Checking exceptions
2024-10-22 00:16:54,273:INFO:Preparing display monitor
2024-10-22 00:16:54,307:INFO:Initializing Logistic Regression
2024-10-22 00:16:54,307:INFO:Total runtime is 0.0 minutes
2024-10-22 00:16:54,311:INFO:SubProcess create_model() called ==================================
2024-10-22 00:16:54,311:INFO:Initializing create_model()
2024-10-22 00:16:54,311:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016028A17A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:16:54,311:INFO:Checking exceptions
2024-10-22 00:16:54,311:INFO:Importing libraries
2024-10-22 00:16:54,311:INFO:Copying training dataset
2024-10-22 00:16:54,353:INFO:Defining folds
2024-10-22 00:16:54,354:INFO:Declaring metric variables
2024-10-22 00:16:54,356:INFO:Importing untrained model
2024-10-22 00:16:54,357:INFO:Logistic Regression Imported successfully
2024-10-22 00:16:54,361:INFO:Starting cross validation
2024-10-22 00:16:54,362:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:17:15,049:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:17:15,175:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:17:15,178:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:17:15,335:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:17:15,348:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:17:15,410:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:17:15,473:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:17:15,479:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:17:15,529:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:17:15,586:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:17:15,661:INFO:Calculating mean and std
2024-10-22 00:17:15,663:INFO:Creating metrics dataframe
2024-10-22 00:17:15,666:INFO:Uploading results into container
2024-10-22 00:17:15,666:INFO:Uploading model into container now
2024-10-22 00:17:15,666:INFO:_master_model_container: 1
2024-10-22 00:17:15,666:INFO:_display_container: 2
2024-10-22 00:17:15,667:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-22 00:17:15,667:INFO:create_model() successfully completed......................................
2024-10-22 00:17:15,776:INFO:SubProcess create_model() end ==================================
2024-10-22 00:17:15,776:INFO:Creating metrics dataframe
2024-10-22 00:17:15,780:INFO:Initializing K Neighbors Classifier
2024-10-22 00:17:15,780:INFO:Total runtime is 0.35789469480514524 minutes
2024-10-22 00:17:15,783:INFO:SubProcess create_model() called ==================================
2024-10-22 00:17:15,783:INFO:Initializing create_model()
2024-10-22 00:17:15,783:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016028A17A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:17:15,783:INFO:Checking exceptions
2024-10-22 00:17:15,783:INFO:Importing libraries
2024-10-22 00:17:15,783:INFO:Copying training dataset
2024-10-22 00:17:15,810:INFO:Defining folds
2024-10-22 00:17:15,810:INFO:Declaring metric variables
2024-10-22 00:17:15,813:INFO:Importing untrained model
2024-10-22 00:17:15,815:INFO:K Neighbors Classifier Imported successfully
2024-10-22 00:17:15,819:INFO:Starting cross validation
2024-10-22 00:17:15,820:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:17:20,055:INFO:Calculating mean and std
2024-10-22 00:17:20,056:INFO:Creating metrics dataframe
2024-10-22 00:17:20,058:INFO:Uploading results into container
2024-10-22 00:17:20,058:INFO:Uploading model into container now
2024-10-22 00:17:20,058:INFO:_master_model_container: 2
2024-10-22 00:17:20,059:INFO:_display_container: 2
2024-10-22 00:17:20,059:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-22 00:17:20,059:INFO:create_model() successfully completed......................................
2024-10-22 00:17:20,195:INFO:SubProcess create_model() end ==================================
2024-10-22 00:17:20,196:INFO:Creating metrics dataframe
2024-10-22 00:17:20,200:INFO:Initializing Naive Bayes
2024-10-22 00:17:20,200:INFO:Total runtime is 0.4315503636995951 minutes
2024-10-22 00:17:20,202:INFO:SubProcess create_model() called ==================================
2024-10-22 00:17:20,202:INFO:Initializing create_model()
2024-10-22 00:17:20,202:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016028A17A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:17:20,202:INFO:Checking exceptions
2024-10-22 00:17:20,202:INFO:Importing libraries
2024-10-22 00:17:20,202:INFO:Copying training dataset
2024-10-22 00:17:20,230:INFO:Defining folds
2024-10-22 00:17:20,230:INFO:Declaring metric variables
2024-10-22 00:17:20,233:INFO:Importing untrained model
2024-10-22 00:17:20,235:INFO:Naive Bayes Imported successfully
2024-10-22 00:17:20,239:INFO:Starting cross validation
2024-10-22 00:17:20,240:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:17:21,432:INFO:Calculating mean and std
2024-10-22 00:17:21,433:INFO:Creating metrics dataframe
2024-10-22 00:17:21,434:INFO:Uploading results into container
2024-10-22 00:17:21,434:INFO:Uploading model into container now
2024-10-22 00:17:21,435:INFO:_master_model_container: 3
2024-10-22 00:17:21,435:INFO:_display_container: 2
2024-10-22 00:17:21,435:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-22 00:17:21,435:INFO:create_model() successfully completed......................................
2024-10-22 00:17:21,523:INFO:SubProcess create_model() end ==================================
2024-10-22 00:17:21,523:INFO:Creating metrics dataframe
2024-10-22 00:17:21,527:INFO:Initializing Decision Tree Classifier
2024-10-22 00:17:21,527:INFO:Total runtime is 0.45366948445638017 minutes
2024-10-22 00:17:21,530:INFO:SubProcess create_model() called ==================================
2024-10-22 00:17:21,530:INFO:Initializing create_model()
2024-10-22 00:17:21,530:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016028A17A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:17:21,530:INFO:Checking exceptions
2024-10-22 00:17:21,530:INFO:Importing libraries
2024-10-22 00:17:21,530:INFO:Copying training dataset
2024-10-22 00:17:21,558:INFO:Defining folds
2024-10-22 00:17:21,558:INFO:Declaring metric variables
2024-10-22 00:17:21,561:INFO:Importing untrained model
2024-10-22 00:17:21,563:INFO:Decision Tree Classifier Imported successfully
2024-10-22 00:17:21,567:INFO:Starting cross validation
2024-10-22 00:17:21,568:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:17:23,506:INFO:Calculating mean and std
2024-10-22 00:17:23,507:INFO:Creating metrics dataframe
2024-10-22 00:17:23,508:INFO:Uploading results into container
2024-10-22 00:17:23,508:INFO:Uploading model into container now
2024-10-22 00:17:23,509:INFO:_master_model_container: 4
2024-10-22 00:17:23,509:INFO:_display_container: 2
2024-10-22 00:17:23,509:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-10-22 00:17:23,509:INFO:create_model() successfully completed......................................
2024-10-22 00:17:23,604:INFO:SubProcess create_model() end ==================================
2024-10-22 00:17:23,604:INFO:Creating metrics dataframe
2024-10-22 00:17:23,608:INFO:Initializing SVM - Linear Kernel
2024-10-22 00:17:23,608:INFO:Total runtime is 0.48834861119588213 minutes
2024-10-22 00:17:23,609:INFO:SubProcess create_model() called ==================================
2024-10-22 00:17:23,609:INFO:Initializing create_model()
2024-10-22 00:17:23,610:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016028A17A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:17:23,610:INFO:Checking exceptions
2024-10-22 00:17:23,610:INFO:Importing libraries
2024-10-22 00:17:23,610:INFO:Copying training dataset
2024-10-22 00:17:23,645:INFO:Defining folds
2024-10-22 00:17:23,645:INFO:Declaring metric variables
2024-10-22 00:17:23,651:INFO:Importing untrained model
2024-10-22 00:17:23,657:INFO:SVM - Linear Kernel Imported successfully
2024-10-22 00:17:23,668:INFO:Starting cross validation
2024-10-22 00:17:23,670:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:17:36,534:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:17:37,874:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:17:40,576:INFO:Calculating mean and std
2024-10-22 00:17:40,577:INFO:Creating metrics dataframe
2024-10-22 00:17:40,578:INFO:Uploading results into container
2024-10-22 00:17:40,579:INFO:Uploading model into container now
2024-10-22 00:17:40,580:INFO:_master_model_container: 5
2024-10-22 00:17:40,580:INFO:_display_container: 2
2024-10-22 00:17:40,581:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-22 00:17:40,582:INFO:create_model() successfully completed......................................
2024-10-22 00:17:40,687:INFO:SubProcess create_model() end ==================================
2024-10-22 00:17:40,687:INFO:Creating metrics dataframe
2024-10-22 00:17:40,692:INFO:Initializing Ridge Classifier
2024-10-22 00:17:40,692:INFO:Total runtime is 0.7730930924415589 minutes
2024-10-22 00:17:40,694:INFO:SubProcess create_model() called ==================================
2024-10-22 00:17:40,694:INFO:Initializing create_model()
2024-10-22 00:17:40,694:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016028A17A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:17:40,694:INFO:Checking exceptions
2024-10-22 00:17:40,694:INFO:Importing libraries
2024-10-22 00:17:40,694:INFO:Copying training dataset
2024-10-22 00:17:40,724:INFO:Defining folds
2024-10-22 00:17:40,724:INFO:Declaring metric variables
2024-10-22 00:17:40,726:INFO:Importing untrained model
2024-10-22 00:17:40,728:INFO:Ridge Classifier Imported successfully
2024-10-22 00:17:40,733:INFO:Starting cross validation
2024-10-22 00:17:40,734:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:17:42,058:INFO:Calculating mean and std
2024-10-22 00:17:42,059:INFO:Creating metrics dataframe
2024-10-22 00:17:42,060:INFO:Uploading results into container
2024-10-22 00:17:42,060:INFO:Uploading model into container now
2024-10-22 00:17:42,061:INFO:_master_model_container: 6
2024-10-22 00:17:42,061:INFO:_display_container: 2
2024-10-22 00:17:42,061:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-10-22 00:17:42,061:INFO:create_model() successfully completed......................................
2024-10-22 00:17:42,155:INFO:SubProcess create_model() end ==================================
2024-10-22 00:17:42,155:INFO:Creating metrics dataframe
2024-10-22 00:17:42,159:INFO:Initializing Random Forest Classifier
2024-10-22 00:17:42,159:INFO:Total runtime is 0.7975350618362427 minutes
2024-10-22 00:17:42,161:INFO:SubProcess create_model() called ==================================
2024-10-22 00:17:42,161:INFO:Initializing create_model()
2024-10-22 00:17:42,161:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016028A17A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:17:42,162:INFO:Checking exceptions
2024-10-22 00:17:42,162:INFO:Importing libraries
2024-10-22 00:17:42,162:INFO:Copying training dataset
2024-10-22 00:17:42,194:INFO:Defining folds
2024-10-22 00:17:42,194:INFO:Declaring metric variables
2024-10-22 00:17:42,200:INFO:Importing untrained model
2024-10-22 00:17:42,205:INFO:Random Forest Classifier Imported successfully
2024-10-22 00:17:42,211:INFO:Starting cross validation
2024-10-22 00:17:42,214:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:18:03,411:INFO:Calculating mean and std
2024-10-22 00:18:03,413:INFO:Creating metrics dataframe
2024-10-22 00:18:03,416:INFO:Uploading results into container
2024-10-22 00:18:03,417:INFO:Uploading model into container now
2024-10-22 00:18:03,417:INFO:_master_model_container: 7
2024-10-22 00:18:03,418:INFO:_display_container: 2
2024-10-22 00:18:03,418:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-22 00:18:03,419:INFO:create_model() successfully completed......................................
2024-10-22 00:18:03,572:INFO:SubProcess create_model() end ==================================
2024-10-22 00:18:03,572:INFO:Creating metrics dataframe
2024-10-22 00:18:03,578:INFO:Initializing Quadratic Discriminant Analysis
2024-10-22 00:18:03,578:INFO:Total runtime is 1.1545129934946696 minutes
2024-10-22 00:18:03,583:INFO:SubProcess create_model() called ==================================
2024-10-22 00:18:03,583:INFO:Initializing create_model()
2024-10-22 00:18:03,583:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016028A17A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:18:03,583:INFO:Checking exceptions
2024-10-22 00:18:03,583:INFO:Importing libraries
2024-10-22 00:18:03,583:INFO:Copying training dataset
2024-10-22 00:18:03,626:INFO:Defining folds
2024-10-22 00:18:03,627:INFO:Declaring metric variables
2024-10-22 00:18:03,630:INFO:Importing untrained model
2024-10-22 00:18:03,634:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-22 00:18:03,640:INFO:Starting cross validation
2024-10-22 00:18:03,641:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:18:04,804:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:18:04,805:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:18:04,806:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:18:04,807:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:18:04,814:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:18:04,866:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:18:04,958:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:18:04,996:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:18:05,030:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:18:05,045:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:18:05,153:INFO:Calculating mean and std
2024-10-22 00:18:05,154:INFO:Creating metrics dataframe
2024-10-22 00:18:05,156:INFO:Uploading results into container
2024-10-22 00:18:05,156:INFO:Uploading model into container now
2024-10-22 00:18:05,157:INFO:_master_model_container: 8
2024-10-22 00:18:05,157:INFO:_display_container: 2
2024-10-22 00:18:05,157:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-22 00:18:05,157:INFO:create_model() successfully completed......................................
2024-10-22 00:18:05,338:INFO:SubProcess create_model() end ==================================
2024-10-22 00:18:05,338:INFO:Creating metrics dataframe
2024-10-22 00:18:05,347:INFO:Initializing Ada Boost Classifier
2024-10-22 00:18:05,347:INFO:Total runtime is 1.1839961210886638 minutes
2024-10-22 00:18:05,351:INFO:SubProcess create_model() called ==================================
2024-10-22 00:18:05,352:INFO:Initializing create_model()
2024-10-22 00:18:05,352:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016028A17A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:18:05,352:INFO:Checking exceptions
2024-10-22 00:18:05,352:INFO:Importing libraries
2024-10-22 00:18:05,352:INFO:Copying training dataset
2024-10-22 00:18:05,399:INFO:Defining folds
2024-10-22 00:18:05,400:INFO:Declaring metric variables
2024-10-22 00:18:05,404:INFO:Importing untrained model
2024-10-22 00:18:05,407:INFO:Ada Boost Classifier Imported successfully
2024-10-22 00:18:05,411:INFO:Starting cross validation
2024-10-22 00:18:05,412:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:18:06,119:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:18:06,192:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:18:06,214:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:18:06,235:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:18:06,362:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:18:06,387:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:18:06,401:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:18:06,425:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:18:06,462:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:18:06,666:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:18:12,756:INFO:Calculating mean and std
2024-10-22 00:18:12,758:INFO:Creating metrics dataframe
2024-10-22 00:18:12,759:INFO:Uploading results into container
2024-10-22 00:18:12,760:INFO:Uploading model into container now
2024-10-22 00:18:12,762:INFO:_master_model_container: 9
2024-10-22 00:18:12,762:INFO:_display_container: 2
2024-10-22 00:18:12,763:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-10-22 00:18:12,763:INFO:create_model() successfully completed......................................
2024-10-22 00:18:12,887:INFO:SubProcess create_model() end ==================================
2024-10-22 00:18:12,887:INFO:Creating metrics dataframe
2024-10-22 00:18:12,894:INFO:Initializing Gradient Boosting Classifier
2024-10-22 00:18:12,894:INFO:Total runtime is 1.3097806493441264 minutes
2024-10-22 00:18:12,899:INFO:SubProcess create_model() called ==================================
2024-10-22 00:18:12,899:INFO:Initializing create_model()
2024-10-22 00:18:12,899:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016028A17A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:18:12,899:INFO:Checking exceptions
2024-10-22 00:18:12,899:INFO:Importing libraries
2024-10-22 00:18:12,900:INFO:Copying training dataset
2024-10-22 00:18:12,941:INFO:Defining folds
2024-10-22 00:18:12,941:INFO:Declaring metric variables
2024-10-22 00:18:12,943:INFO:Importing untrained model
2024-10-22 00:18:12,946:INFO:Gradient Boosting Classifier Imported successfully
2024-10-22 00:18:12,951:INFO:Starting cross validation
2024-10-22 00:18:12,952:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:18:34,032:INFO:Calculating mean and std
2024-10-22 00:18:34,033:INFO:Creating metrics dataframe
2024-10-22 00:18:34,034:INFO:Uploading results into container
2024-10-22 00:18:34,034:INFO:Uploading model into container now
2024-10-22 00:18:34,035:INFO:_master_model_container: 10
2024-10-22 00:18:34,035:INFO:_display_container: 2
2024-10-22 00:18:34,035:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-22 00:18:34,035:INFO:create_model() successfully completed......................................
2024-10-22 00:18:34,129:INFO:SubProcess create_model() end ==================================
2024-10-22 00:18:34,130:INFO:Creating metrics dataframe
2024-10-22 00:18:34,143:INFO:Initializing Linear Discriminant Analysis
2024-10-22 00:18:34,143:INFO:Total runtime is 1.6639357368151346 minutes
2024-10-22 00:18:34,149:INFO:SubProcess create_model() called ==================================
2024-10-22 00:18:34,150:INFO:Initializing create_model()
2024-10-22 00:18:34,150:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016028A17A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:18:34,150:INFO:Checking exceptions
2024-10-22 00:18:34,150:INFO:Importing libraries
2024-10-22 00:18:34,150:INFO:Copying training dataset
2024-10-22 00:18:34,190:INFO:Defining folds
2024-10-22 00:18:34,190:INFO:Declaring metric variables
2024-10-22 00:18:34,193:INFO:Importing untrained model
2024-10-22 00:18:34,198:INFO:Linear Discriminant Analysis Imported successfully
2024-10-22 00:18:34,204:INFO:Starting cross validation
2024-10-22 00:18:34,205:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:18:35,590:INFO:Calculating mean and std
2024-10-22 00:18:35,591:INFO:Creating metrics dataframe
2024-10-22 00:18:35,592:INFO:Uploading results into container
2024-10-22 00:18:35,592:INFO:Uploading model into container now
2024-10-22 00:18:35,593:INFO:_master_model_container: 11
2024-10-22 00:18:35,593:INFO:_display_container: 2
2024-10-22 00:18:35,593:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-22 00:18:35,593:INFO:create_model() successfully completed......................................
2024-10-22 00:18:35,698:INFO:SubProcess create_model() end ==================================
2024-10-22 00:18:35,698:INFO:Creating metrics dataframe
2024-10-22 00:18:35,704:INFO:Initializing Extra Trees Classifier
2024-10-22 00:18:35,704:INFO:Total runtime is 1.6899566372235615 minutes
2024-10-22 00:18:35,708:INFO:SubProcess create_model() called ==================================
2024-10-22 00:18:35,708:INFO:Initializing create_model()
2024-10-22 00:18:35,708:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016028A17A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:18:35,708:INFO:Checking exceptions
2024-10-22 00:18:35,708:INFO:Importing libraries
2024-10-22 00:18:35,709:INFO:Copying training dataset
2024-10-22 00:18:35,743:INFO:Defining folds
2024-10-22 00:18:35,743:INFO:Declaring metric variables
2024-10-22 00:18:35,748:INFO:Importing untrained model
2024-10-22 00:18:35,754:INFO:Extra Trees Classifier Imported successfully
2024-10-22 00:18:35,760:INFO:Starting cross validation
2024-10-22 00:18:35,762:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:18:53,401:INFO:Calculating mean and std
2024-10-22 00:18:53,404:INFO:Creating metrics dataframe
2024-10-22 00:18:53,408:INFO:Uploading results into container
2024-10-22 00:18:53,409:INFO:Uploading model into container now
2024-10-22 00:18:53,410:INFO:_master_model_container: 12
2024-10-22 00:18:53,410:INFO:_display_container: 2
2024-10-22 00:18:53,411:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-10-22 00:18:53,411:INFO:create_model() successfully completed......................................
2024-10-22 00:18:53,595:INFO:SubProcess create_model() end ==================================
2024-10-22 00:18:53,595:INFO:Creating metrics dataframe
2024-10-22 00:18:53,604:INFO:Initializing Light Gradient Boosting Machine
2024-10-22 00:18:53,604:INFO:Total runtime is 1.9882887760798136 minutes
2024-10-22 00:18:53,607:INFO:SubProcess create_model() called ==================================
2024-10-22 00:18:53,607:INFO:Initializing create_model()
2024-10-22 00:18:53,607:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016028A17A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:18:53,607:INFO:Checking exceptions
2024-10-22 00:18:53,607:INFO:Importing libraries
2024-10-22 00:18:53,607:INFO:Copying training dataset
2024-10-22 00:18:53,671:INFO:Defining folds
2024-10-22 00:18:53,671:INFO:Declaring metric variables
2024-10-22 00:18:53,675:INFO:Importing untrained model
2024-10-22 00:18:53,679:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-22 00:18:53,686:INFO:Starting cross validation
2024-10-22 00:18:53,687:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:18:57,637:INFO:Calculating mean and std
2024-10-22 00:18:57,638:INFO:Creating metrics dataframe
2024-10-22 00:18:57,640:INFO:Uploading results into container
2024-10-22 00:18:57,640:INFO:Uploading model into container now
2024-10-22 00:18:57,641:INFO:_master_model_container: 13
2024-10-22 00:18:57,641:INFO:_display_container: 2
2024-10-22 00:18:57,642:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-22 00:18:57,642:INFO:create_model() successfully completed......................................
2024-10-22 00:18:57,810:INFO:SubProcess create_model() end ==================================
2024-10-22 00:18:57,810:INFO:Creating metrics dataframe
2024-10-22 00:18:57,818:INFO:Initializing Dummy Classifier
2024-10-22 00:18:57,818:INFO:Total runtime is 2.0585163235664368 minutes
2024-10-22 00:18:57,822:INFO:SubProcess create_model() called ==================================
2024-10-22 00:18:57,822:INFO:Initializing create_model()
2024-10-22 00:18:57,822:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016028A17A50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:18:57,822:INFO:Checking exceptions
2024-10-22 00:18:57,822:INFO:Importing libraries
2024-10-22 00:18:57,822:INFO:Copying training dataset
2024-10-22 00:18:57,875:INFO:Defining folds
2024-10-22 00:18:57,875:INFO:Declaring metric variables
2024-10-22 00:18:57,880:INFO:Importing untrained model
2024-10-22 00:18:57,884:INFO:Dummy Classifier Imported successfully
2024-10-22 00:18:57,891:INFO:Starting cross validation
2024-10-22 00:18:57,893:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:18:58,703:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:18:58,761:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:18:58,872:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:18:58,881:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:18:58,943:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:18:59,012:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:18:59,052:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:18:59,087:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:18:59,103:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:18:59,123:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:18:59,138:INFO:Calculating mean and std
2024-10-22 00:18:59,138:INFO:Creating metrics dataframe
2024-10-22 00:18:59,140:INFO:Uploading results into container
2024-10-22 00:18:59,140:INFO:Uploading model into container now
2024-10-22 00:18:59,140:INFO:_master_model_container: 14
2024-10-22 00:18:59,141:INFO:_display_container: 2
2024-10-22 00:18:59,141:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-10-22 00:18:59,141:INFO:create_model() successfully completed......................................
2024-10-22 00:18:59,254:INFO:SubProcess create_model() end ==================================
2024-10-22 00:18:59,255:INFO:Creating metrics dataframe
2024-10-22 00:18:59,261:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-10-22 00:18:59,277:INFO:Initializing create_model()
2024-10-22 00:18:59,277:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:18:59,277:INFO:Checking exceptions
2024-10-22 00:18:59,280:INFO:Importing libraries
2024-10-22 00:18:59,280:INFO:Copying training dataset
2024-10-22 00:18:59,316:INFO:Defining folds
2024-10-22 00:18:59,316:INFO:Declaring metric variables
2024-10-22 00:18:59,316:INFO:Importing untrained model
2024-10-22 00:18:59,316:INFO:Declaring custom model
2024-10-22 00:18:59,317:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-22 00:18:59,318:INFO:Cross validation set to False
2024-10-22 00:18:59,318:INFO:Fitting Model
2024-10-22 00:18:59,611:INFO:[LightGBM] [Info] Number of positive: 24445, number of negative: 91078
2024-10-22 00:18:59,616:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001033 seconds.
2024-10-22 00:18:59,616:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-10-22 00:18:59,616:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-10-22 00:18:59,616:INFO:[LightGBM] [Info] Total Bins 860
2024-10-22 00:18:59,616:INFO:[LightGBM] [Info] Number of data points in the train set: 115523, number of used features: 12
2024-10-22 00:18:59,616:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.211603 -> initscore=-1.315291
2024-10-22 00:18:59,617:INFO:[LightGBM] [Info] Start training from score -1.315291
2024-10-22 00:18:59,989:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-22 00:18:59,989:INFO:create_model() successfully completed......................................
2024-10-22 00:19:00,169:INFO:Creating Dashboard logs
2024-10-22 00:19:00,171:INFO:Model: Light Gradient Boosting Machine
2024-10-22 00:19:00,253:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-10-22 00:19:00,480:INFO:Initializing predict_model()
2024-10-22 00:19:00,480:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160289EFEC0>)
2024-10-22 00:19:00,480:INFO:Checking exceptions
2024-10-22 00:19:00,480:INFO:Preloading libraries
2024-10-22 00:19:01,091:INFO:Creating Dashboard logs
2024-10-22 00:19:01,093:INFO:Model: Gradient Boosting Classifier
2024-10-22 00:19:01,138:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-22 00:19:01,536:INFO:Creating Dashboard logs
2024-10-22 00:19:01,538:INFO:Model: Ada Boost Classifier
2024-10-22 00:19:01,600:INFO:Logged params: {'algorithm': 'SAMME.R', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2024-10-22 00:19:02,006:INFO:Creating Dashboard logs
2024-10-22 00:19:02,008:INFO:Model: Random Forest Classifier
2024-10-22 00:19:02,059:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-22 00:19:02,448:INFO:Creating Dashboard logs
2024-10-22 00:19:02,450:INFO:Model: Extra Trees Classifier
2024-10-22 00:19:02,497:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-22 00:19:02,921:INFO:Creating Dashboard logs
2024-10-22 00:19:02,923:INFO:Model: Logistic Regression
2024-10-22 00:19:02,967:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-10-22 00:19:03,354:INFO:Creating Dashboard logs
2024-10-22 00:19:03,357:INFO:Model: Linear Discriminant Analysis
2024-10-22 00:19:03,401:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2024-10-22 00:19:03,780:INFO:Creating Dashboard logs
2024-10-22 00:19:03,782:INFO:Model: Ridge Classifier
2024-10-22 00:19:03,823:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2024-10-22 00:19:04,241:INFO:Creating Dashboard logs
2024-10-22 00:19:04,243:INFO:Model: Decision Tree Classifier
2024-10-22 00:19:04,307:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 123, 'splitter': 'best'}
2024-10-22 00:19:04,732:INFO:Creating Dashboard logs
2024-10-22 00:19:04,735:INFO:Model: Naive Bayes
2024-10-22 00:19:04,781:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2024-10-22 00:19:05,227:INFO:Creating Dashboard logs
2024-10-22 00:19:05,230:INFO:Model: Dummy Classifier
2024-10-22 00:19:05,298:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2024-10-22 00:19:05,782:INFO:Creating Dashboard logs
2024-10-22 00:19:05,784:INFO:Model: K Neighbors Classifier
2024-10-22 00:19:05,836:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-10-22 00:19:06,299:INFO:Creating Dashboard logs
2024-10-22 00:19:06,301:INFO:Model: SVM - Linear Kernel
2024-10-22 00:19:06,351:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-22 00:19:06,800:INFO:Creating Dashboard logs
2024-10-22 00:19:06,802:INFO:Model: Quadratic Discriminant Analysis
2024-10-22 00:19:06,843:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2024-10-22 00:19:07,356:INFO:_master_model_container: 14
2024-10-22 00:19:07,356:INFO:_display_container: 2
2024-10-22 00:19:07,357:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-22 00:19:07,357:INFO:compare_models() successfully completed......................................
2024-10-22 00:22:40,808:INFO:Initializing compare_models()
2024-10-22 00:22:40,808:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-22 00:22:40,808:INFO:Checking exceptions
2024-10-22 00:22:40,829:INFO:Preparing display monitor
2024-10-22 00:22:40,858:INFO:Initializing Logistic Regression
2024-10-22 00:22:40,859:INFO:Total runtime is 1.6609827677408855e-05 minutes
2024-10-22 00:22:40,864:INFO:SubProcess create_model() called ==================================
2024-10-22 00:22:40,864:INFO:Initializing create_model()
2024-10-22 00:22:40,866:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601E8FF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:22:40,866:INFO:Checking exceptions
2024-10-22 00:22:40,867:INFO:Importing libraries
2024-10-22 00:22:40,867:INFO:Copying training dataset
2024-10-22 00:22:40,929:INFO:Defining folds
2024-10-22 00:22:40,930:INFO:Declaring metric variables
2024-10-22 00:22:40,934:INFO:Importing untrained model
2024-10-22 00:22:40,937:INFO:Logistic Regression Imported successfully
2024-10-22 00:22:40,941:INFO:Starting cross validation
2024-10-22 00:22:40,943:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:23:00,288:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:23:00,470:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:23:00,667:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:23:00,682:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:23:00,725:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:23:00,800:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:23:01,135:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:23:01,150:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:23:01,150:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:23:01,203:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:23:01,263:INFO:Calculating mean and std
2024-10-22 00:23:01,264:INFO:Creating metrics dataframe
2024-10-22 00:23:01,266:INFO:Uploading results into container
2024-10-22 00:23:01,267:INFO:Uploading model into container now
2024-10-22 00:23:01,267:INFO:_master_model_container: 15
2024-10-22 00:23:01,267:INFO:_display_container: 3
2024-10-22 00:23:01,268:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-22 00:23:01,268:INFO:create_model() successfully completed......................................
2024-10-22 00:23:01,443:INFO:SubProcess create_model() end ==================================
2024-10-22 00:23:01,443:INFO:Creating metrics dataframe
2024-10-22 00:23:01,454:INFO:Initializing K Neighbors Classifier
2024-10-22 00:23:01,454:INFO:Total runtime is 0.3432606021563212 minutes
2024-10-22 00:23:01,459:INFO:SubProcess create_model() called ==================================
2024-10-22 00:23:01,460:INFO:Initializing create_model()
2024-10-22 00:23:01,460:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601E8FF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:23:01,460:INFO:Checking exceptions
2024-10-22 00:23:01,460:INFO:Importing libraries
2024-10-22 00:23:01,460:INFO:Copying training dataset
2024-10-22 00:23:01,522:INFO:Defining folds
2024-10-22 00:23:01,522:INFO:Declaring metric variables
2024-10-22 00:23:01,524:INFO:Importing untrained model
2024-10-22 00:23:01,529:INFO:K Neighbors Classifier Imported successfully
2024-10-22 00:23:01,536:INFO:Starting cross validation
2024-10-22 00:23:01,538:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:23:04,787:INFO:Calculating mean and std
2024-10-22 00:23:04,789:INFO:Creating metrics dataframe
2024-10-22 00:23:04,793:INFO:Uploading results into container
2024-10-22 00:23:04,794:INFO:Uploading model into container now
2024-10-22 00:23:04,794:INFO:_master_model_container: 16
2024-10-22 00:23:04,795:INFO:_display_container: 3
2024-10-22 00:23:04,795:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-22 00:23:04,795:INFO:create_model() successfully completed......................................
2024-10-22 00:23:04,900:INFO:SubProcess create_model() end ==================================
2024-10-22 00:23:04,900:INFO:Creating metrics dataframe
2024-10-22 00:23:04,905:INFO:Initializing Naive Bayes
2024-10-22 00:23:04,905:INFO:Total runtime is 0.4007795214653015 minutes
2024-10-22 00:23:04,907:INFO:SubProcess create_model() called ==================================
2024-10-22 00:23:04,907:INFO:Initializing create_model()
2024-10-22 00:23:04,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601E8FF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:23:04,907:INFO:Checking exceptions
2024-10-22 00:23:04,907:INFO:Importing libraries
2024-10-22 00:23:04,907:INFO:Copying training dataset
2024-10-22 00:23:04,942:INFO:Defining folds
2024-10-22 00:23:04,942:INFO:Declaring metric variables
2024-10-22 00:23:04,951:INFO:Importing untrained model
2024-10-22 00:23:04,956:INFO:Naive Bayes Imported successfully
2024-10-22 00:23:04,969:INFO:Starting cross validation
2024-10-22 00:23:04,970:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:23:06,283:INFO:Calculating mean and std
2024-10-22 00:23:06,283:INFO:Creating metrics dataframe
2024-10-22 00:23:06,285:INFO:Uploading results into container
2024-10-22 00:23:06,285:INFO:Uploading model into container now
2024-10-22 00:23:06,286:INFO:_master_model_container: 17
2024-10-22 00:23:06,286:INFO:_display_container: 3
2024-10-22 00:23:06,286:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-22 00:23:06,286:INFO:create_model() successfully completed......................................
2024-10-22 00:23:06,408:INFO:SubProcess create_model() end ==================================
2024-10-22 00:23:06,408:INFO:Creating metrics dataframe
2024-10-22 00:23:06,413:INFO:Initializing Decision Tree Classifier
2024-10-22 00:23:06,413:INFO:Total runtime is 0.42591218948364257 minutes
2024-10-22 00:23:06,415:INFO:SubProcess create_model() called ==================================
2024-10-22 00:23:06,416:INFO:Initializing create_model()
2024-10-22 00:23:06,416:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601E8FF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:23:06,416:INFO:Checking exceptions
2024-10-22 00:23:06,416:INFO:Importing libraries
2024-10-22 00:23:06,416:INFO:Copying training dataset
2024-10-22 00:23:06,445:INFO:Defining folds
2024-10-22 00:23:06,445:INFO:Declaring metric variables
2024-10-22 00:23:06,449:INFO:Importing untrained model
2024-10-22 00:23:06,452:INFO:Decision Tree Classifier Imported successfully
2024-10-22 00:23:06,456:INFO:Starting cross validation
2024-10-22 00:23:06,458:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:23:08,530:INFO:Calculating mean and std
2024-10-22 00:23:08,531:INFO:Creating metrics dataframe
2024-10-22 00:23:08,533:INFO:Uploading results into container
2024-10-22 00:23:08,533:INFO:Uploading model into container now
2024-10-22 00:23:08,534:INFO:_master_model_container: 18
2024-10-22 00:23:08,534:INFO:_display_container: 3
2024-10-22 00:23:08,534:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-10-22 00:23:08,534:INFO:create_model() successfully completed......................................
2024-10-22 00:23:08,632:INFO:SubProcess create_model() end ==================================
2024-10-22 00:23:08,632:INFO:Creating metrics dataframe
2024-10-22 00:23:08,637:INFO:Initializing SVM - Linear Kernel
2024-10-22 00:23:08,637:INFO:Total runtime is 0.46298166116078693 minutes
2024-10-22 00:23:08,639:INFO:SubProcess create_model() called ==================================
2024-10-22 00:23:08,639:INFO:Initializing create_model()
2024-10-22 00:23:08,639:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601E8FF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:23:08,639:INFO:Checking exceptions
2024-10-22 00:23:08,639:INFO:Importing libraries
2024-10-22 00:23:08,639:INFO:Copying training dataset
2024-10-22 00:23:08,669:INFO:Defining folds
2024-10-22 00:23:08,669:INFO:Declaring metric variables
2024-10-22 00:23:08,672:INFO:Importing untrained model
2024-10-22 00:23:08,674:INFO:SVM - Linear Kernel Imported successfully
2024-10-22 00:23:08,681:INFO:Starting cross validation
2024-10-22 00:23:08,682:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:23:23,369:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:23:24,992:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:23:27,485:INFO:Calculating mean and std
2024-10-22 00:23:27,486:INFO:Creating metrics dataframe
2024-10-22 00:23:27,487:INFO:Uploading results into container
2024-10-22 00:23:27,487:INFO:Uploading model into container now
2024-10-22 00:23:27,487:INFO:_master_model_container: 19
2024-10-22 00:23:27,487:INFO:_display_container: 3
2024-10-22 00:23:27,489:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-22 00:23:27,489:INFO:create_model() successfully completed......................................
2024-10-22 00:23:27,669:INFO:SubProcess create_model() end ==================================
2024-10-22 00:23:27,669:INFO:Creating metrics dataframe
2024-10-22 00:23:27,676:INFO:Initializing Ridge Classifier
2024-10-22 00:23:27,676:INFO:Total runtime is 0.7802992304166159 minutes
2024-10-22 00:23:27,680:INFO:SubProcess create_model() called ==================================
2024-10-22 00:23:27,680:INFO:Initializing create_model()
2024-10-22 00:23:27,680:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601E8FF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:23:27,681:INFO:Checking exceptions
2024-10-22 00:23:27,681:INFO:Importing libraries
2024-10-22 00:23:27,681:INFO:Copying training dataset
2024-10-22 00:23:27,719:INFO:Defining folds
2024-10-22 00:23:27,720:INFO:Declaring metric variables
2024-10-22 00:23:27,723:INFO:Importing untrained model
2024-10-22 00:23:27,725:INFO:Ridge Classifier Imported successfully
2024-10-22 00:23:27,730:INFO:Starting cross validation
2024-10-22 00:23:27,732:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:23:28,853:INFO:Calculating mean and std
2024-10-22 00:23:28,854:INFO:Creating metrics dataframe
2024-10-22 00:23:28,855:INFO:Uploading results into container
2024-10-22 00:23:28,856:INFO:Uploading model into container now
2024-10-22 00:23:28,856:INFO:_master_model_container: 20
2024-10-22 00:23:28,856:INFO:_display_container: 3
2024-10-22 00:23:28,857:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-10-22 00:23:28,857:INFO:create_model() successfully completed......................................
2024-10-22 00:23:28,971:INFO:SubProcess create_model() end ==================================
2024-10-22 00:23:28,971:INFO:Creating metrics dataframe
2024-10-22 00:23:28,977:INFO:Initializing Random Forest Classifier
2024-10-22 00:23:28,977:INFO:Total runtime is 0.8019859393437704 minutes
2024-10-22 00:23:28,979:INFO:SubProcess create_model() called ==================================
2024-10-22 00:23:28,979:INFO:Initializing create_model()
2024-10-22 00:23:28,980:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601E8FF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:23:28,980:INFO:Checking exceptions
2024-10-22 00:23:28,980:INFO:Importing libraries
2024-10-22 00:23:28,980:INFO:Copying training dataset
2024-10-22 00:23:29,012:INFO:Defining folds
2024-10-22 00:23:29,013:INFO:Declaring metric variables
2024-10-22 00:23:29,016:INFO:Importing untrained model
2024-10-22 00:23:29,020:INFO:Random Forest Classifier Imported successfully
2024-10-22 00:23:29,023:INFO:Starting cross validation
2024-10-22 00:23:29,024:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:23:49,528:INFO:Calculating mean and std
2024-10-22 00:23:49,529:INFO:Creating metrics dataframe
2024-10-22 00:23:49,532:INFO:Uploading results into container
2024-10-22 00:23:49,532:INFO:Uploading model into container now
2024-10-22 00:23:49,533:INFO:_master_model_container: 21
2024-10-22 00:23:49,533:INFO:_display_container: 3
2024-10-22 00:23:49,533:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-22 00:23:49,533:INFO:create_model() successfully completed......................................
2024-10-22 00:23:49,733:INFO:SubProcess create_model() end ==================================
2024-10-22 00:23:49,733:INFO:Creating metrics dataframe
2024-10-22 00:23:49,739:INFO:Initializing Quadratic Discriminant Analysis
2024-10-22 00:23:49,739:INFO:Total runtime is 1.1480135162671408 minutes
2024-10-22 00:23:49,742:INFO:SubProcess create_model() called ==================================
2024-10-22 00:23:49,742:INFO:Initializing create_model()
2024-10-22 00:23:49,742:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601E8FF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:23:49,742:INFO:Checking exceptions
2024-10-22 00:23:49,742:INFO:Importing libraries
2024-10-22 00:23:49,742:INFO:Copying training dataset
2024-10-22 00:23:49,791:INFO:Defining folds
2024-10-22 00:23:49,791:INFO:Declaring metric variables
2024-10-22 00:23:49,795:INFO:Importing untrained model
2024-10-22 00:23:49,800:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-22 00:23:49,805:INFO:Starting cross validation
2024-10-22 00:23:49,807:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:23:50,708:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:23:50,873:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:23:50,951:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:23:51,003:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:23:51,042:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:23:51,115:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:23:51,183:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:23:51,258:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:23:51,288:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:23:51,293:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:23:51,413:INFO:Calculating mean and std
2024-10-22 00:23:51,414:INFO:Creating metrics dataframe
2024-10-22 00:23:51,416:INFO:Uploading results into container
2024-10-22 00:23:51,417:INFO:Uploading model into container now
2024-10-22 00:23:51,417:INFO:_master_model_container: 22
2024-10-22 00:23:51,417:INFO:_display_container: 3
2024-10-22 00:23:51,418:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-22 00:23:51,418:INFO:create_model() successfully completed......................................
2024-10-22 00:23:51,561:INFO:SubProcess create_model() end ==================================
2024-10-22 00:23:51,562:INFO:Creating metrics dataframe
2024-10-22 00:23:51,568:INFO:Initializing Ada Boost Classifier
2024-10-22 00:23:51,568:INFO:Total runtime is 1.1784953276316326 minutes
2024-10-22 00:23:51,571:INFO:SubProcess create_model() called ==================================
2024-10-22 00:23:51,571:INFO:Initializing create_model()
2024-10-22 00:23:51,571:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601E8FF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:23:51,571:INFO:Checking exceptions
2024-10-22 00:23:51,571:INFO:Importing libraries
2024-10-22 00:23:51,572:INFO:Copying training dataset
2024-10-22 00:23:51,622:INFO:Defining folds
2024-10-22 00:23:51,622:INFO:Declaring metric variables
2024-10-22 00:23:51,626:INFO:Importing untrained model
2024-10-22 00:23:51,631:INFO:Ada Boost Classifier Imported successfully
2024-10-22 00:23:51,646:INFO:Starting cross validation
2024-10-22 00:23:51,648:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:23:52,314:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:23:52,368:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:23:52,420:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:23:52,499:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:23:52,526:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:23:52,557:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:23:52,618:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:23:52,660:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:23:52,713:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:23:52,741:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:23:59,463:INFO:Calculating mean and std
2024-10-22 00:23:59,464:INFO:Creating metrics dataframe
2024-10-22 00:23:59,465:INFO:Uploading results into container
2024-10-22 00:23:59,466:INFO:Uploading model into container now
2024-10-22 00:23:59,466:INFO:_master_model_container: 23
2024-10-22 00:23:59,466:INFO:_display_container: 3
2024-10-22 00:23:59,466:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-10-22 00:23:59,466:INFO:create_model() successfully completed......................................
2024-10-22 00:23:59,578:INFO:SubProcess create_model() end ==================================
2024-10-22 00:23:59,578:INFO:Creating metrics dataframe
2024-10-22 00:23:59,583:INFO:Initializing Gradient Boosting Classifier
2024-10-22 00:23:59,583:INFO:Total runtime is 1.3120855768521626 minutes
2024-10-22 00:23:59,585:INFO:SubProcess create_model() called ==================================
2024-10-22 00:23:59,585:INFO:Initializing create_model()
2024-10-22 00:23:59,585:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601E8FF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:23:59,585:INFO:Checking exceptions
2024-10-22 00:23:59,586:INFO:Importing libraries
2024-10-22 00:23:59,586:INFO:Copying training dataset
2024-10-22 00:23:59,620:INFO:Defining folds
2024-10-22 00:23:59,620:INFO:Declaring metric variables
2024-10-22 00:23:59,623:INFO:Importing untrained model
2024-10-22 00:23:59,625:INFO:Gradient Boosting Classifier Imported successfully
2024-10-22 00:23:59,631:INFO:Starting cross validation
2024-10-22 00:23:59,632:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:24:20,357:INFO:Calculating mean and std
2024-10-22 00:24:20,358:INFO:Creating metrics dataframe
2024-10-22 00:24:20,359:INFO:Uploading results into container
2024-10-22 00:24:20,359:INFO:Uploading model into container now
2024-10-22 00:24:20,360:INFO:_master_model_container: 24
2024-10-22 00:24:20,360:INFO:_display_container: 3
2024-10-22 00:24:20,361:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-22 00:24:20,361:INFO:create_model() successfully completed......................................
2024-10-22 00:24:20,457:INFO:SubProcess create_model() end ==================================
2024-10-22 00:24:20,457:INFO:Creating metrics dataframe
2024-10-22 00:24:20,463:INFO:Initializing Linear Discriminant Analysis
2024-10-22 00:24:20,463:INFO:Total runtime is 1.6600743929545083 minutes
2024-10-22 00:24:20,465:INFO:SubProcess create_model() called ==================================
2024-10-22 00:24:20,465:INFO:Initializing create_model()
2024-10-22 00:24:20,465:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601E8FF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:24:20,465:INFO:Checking exceptions
2024-10-22 00:24:20,465:INFO:Importing libraries
2024-10-22 00:24:20,465:INFO:Copying training dataset
2024-10-22 00:24:20,494:INFO:Defining folds
2024-10-22 00:24:20,494:INFO:Declaring metric variables
2024-10-22 00:24:20,497:INFO:Importing untrained model
2024-10-22 00:24:20,501:INFO:Linear Discriminant Analysis Imported successfully
2024-10-22 00:24:20,504:INFO:Starting cross validation
2024-10-22 00:24:20,505:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:24:21,918:INFO:Calculating mean and std
2024-10-22 00:24:21,919:INFO:Creating metrics dataframe
2024-10-22 00:24:21,920:INFO:Uploading results into container
2024-10-22 00:24:21,921:INFO:Uploading model into container now
2024-10-22 00:24:21,921:INFO:_master_model_container: 25
2024-10-22 00:24:21,921:INFO:_display_container: 3
2024-10-22 00:24:21,921:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-22 00:24:21,921:INFO:create_model() successfully completed......................................
2024-10-22 00:24:22,042:INFO:SubProcess create_model() end ==================================
2024-10-22 00:24:22,042:INFO:Creating metrics dataframe
2024-10-22 00:24:22,052:INFO:Initializing Extra Trees Classifier
2024-10-22 00:24:22,052:INFO:Total runtime is 1.6865656852722166 minutes
2024-10-22 00:24:22,057:INFO:SubProcess create_model() called ==================================
2024-10-22 00:24:22,057:INFO:Initializing create_model()
2024-10-22 00:24:22,058:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601E8FF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:24:22,058:INFO:Checking exceptions
2024-10-22 00:24:22,058:INFO:Importing libraries
2024-10-22 00:24:22,058:INFO:Copying training dataset
2024-10-22 00:24:22,103:INFO:Defining folds
2024-10-22 00:24:22,103:INFO:Declaring metric variables
2024-10-22 00:24:22,107:INFO:Importing untrained model
2024-10-22 00:24:22,112:INFO:Extra Trees Classifier Imported successfully
2024-10-22 00:24:22,117:INFO:Starting cross validation
2024-10-22 00:24:22,119:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:24:40,109:INFO:Calculating mean and std
2024-10-22 00:24:40,112:INFO:Creating metrics dataframe
2024-10-22 00:24:40,116:INFO:Uploading results into container
2024-10-22 00:24:40,116:INFO:Uploading model into container now
2024-10-22 00:24:40,117:INFO:_master_model_container: 26
2024-10-22 00:24:40,117:INFO:_display_container: 3
2024-10-22 00:24:40,118:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-10-22 00:24:40,118:INFO:create_model() successfully completed......................................
2024-10-22 00:24:40,322:INFO:SubProcess create_model() end ==================================
2024-10-22 00:24:40,323:INFO:Creating metrics dataframe
2024-10-22 00:24:40,330:INFO:Initializing Light Gradient Boosting Machine
2024-10-22 00:24:40,330:INFO:Total runtime is 1.9911913752555845 minutes
2024-10-22 00:24:40,333:INFO:SubProcess create_model() called ==================================
2024-10-22 00:24:40,333:INFO:Initializing create_model()
2024-10-22 00:24:40,333:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601E8FF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:24:40,333:INFO:Checking exceptions
2024-10-22 00:24:40,333:INFO:Importing libraries
2024-10-22 00:24:40,333:INFO:Copying training dataset
2024-10-22 00:24:40,371:INFO:Defining folds
2024-10-22 00:24:40,371:INFO:Declaring metric variables
2024-10-22 00:24:40,374:INFO:Importing untrained model
2024-10-22 00:24:40,378:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-22 00:24:40,383:INFO:Starting cross validation
2024-10-22 00:24:40,384:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:24:44,269:INFO:Calculating mean and std
2024-10-22 00:24:44,271:INFO:Creating metrics dataframe
2024-10-22 00:24:44,273:INFO:Uploading results into container
2024-10-22 00:24:44,273:INFO:Uploading model into container now
2024-10-22 00:24:44,274:INFO:_master_model_container: 27
2024-10-22 00:24:44,274:INFO:_display_container: 3
2024-10-22 00:24:44,274:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-22 00:24:44,275:INFO:create_model() successfully completed......................................
2024-10-22 00:24:44,397:INFO:SubProcess create_model() end ==================================
2024-10-22 00:24:44,397:INFO:Creating metrics dataframe
2024-10-22 00:24:44,403:INFO:Initializing Dummy Classifier
2024-10-22 00:24:44,403:INFO:Total runtime is 2.05908430814743 minutes
2024-10-22 00:24:44,405:INFO:SubProcess create_model() called ==================================
2024-10-22 00:24:44,406:INFO:Initializing create_model()
2024-10-22 00:24:44,406:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001601E8FF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:24:44,406:INFO:Checking exceptions
2024-10-22 00:24:44,406:INFO:Importing libraries
2024-10-22 00:24:44,406:INFO:Copying training dataset
2024-10-22 00:24:44,438:INFO:Defining folds
2024-10-22 00:24:44,438:INFO:Declaring metric variables
2024-10-22 00:24:44,441:INFO:Importing untrained model
2024-10-22 00:24:44,444:INFO:Dummy Classifier Imported successfully
2024-10-22 00:24:44,449:INFO:Starting cross validation
2024-10-22 00:24:44,450:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:24:45,223:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:24:45,314:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:24:45,366:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:24:45,389:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:24:45,444:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:24:45,480:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:24:45,522:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:24:45,560:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:24:45,576:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:24:45,599:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:24:45,612:INFO:Calculating mean and std
2024-10-22 00:24:45,613:INFO:Creating metrics dataframe
2024-10-22 00:24:45,614:INFO:Uploading results into container
2024-10-22 00:24:45,614:INFO:Uploading model into container now
2024-10-22 00:24:45,615:INFO:_master_model_container: 28
2024-10-22 00:24:45,615:INFO:_display_container: 3
2024-10-22 00:24:45,615:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-10-22 00:24:45,615:INFO:create_model() successfully completed......................................
2024-10-22 00:24:45,731:INFO:SubProcess create_model() end ==================================
2024-10-22 00:24:45,731:INFO:Creating metrics dataframe
2024-10-22 00:24:45,738:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-10-22 00:24:45,745:INFO:Initializing create_model()
2024-10-22 00:24:45,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:24:45,745:INFO:Checking exceptions
2024-10-22 00:24:45,747:INFO:Importing libraries
2024-10-22 00:24:45,747:INFO:Copying training dataset
2024-10-22 00:24:45,779:INFO:Defining folds
2024-10-22 00:24:45,779:INFO:Declaring metric variables
2024-10-22 00:24:45,779:INFO:Importing untrained model
2024-10-22 00:24:45,779:INFO:Declaring custom model
2024-10-22 00:24:45,780:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-22 00:24:45,781:INFO:Cross validation set to False
2024-10-22 00:24:45,781:INFO:Fitting Model
2024-10-22 00:24:46,136:INFO:[LightGBM] [Info] Number of positive: 24445, number of negative: 91078
2024-10-22 00:24:46,139:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000953 seconds.
2024-10-22 00:24:46,139:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-10-22 00:24:46,140:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-10-22 00:24:46,140:INFO:[LightGBM] [Info] Total Bins 860
2024-10-22 00:24:46,167:INFO:[LightGBM] [Info] Number of data points in the train set: 115523, number of used features: 12
2024-10-22 00:24:46,168:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.211603 -> initscore=-1.315291
2024-10-22 00:24:46,168:INFO:[LightGBM] [Info] Start training from score -1.315291
2024-10-22 00:24:46,487:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-22 00:24:46,487:INFO:create_model() successfully completed......................................
2024-10-22 00:24:46,602:INFO:Creating Dashboard logs
2024-10-22 00:24:46,605:INFO:Model: Light Gradient Boosting Machine
2024-10-22 00:24:46,672:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-10-22 00:24:47,137:INFO:Initializing predict_model()
2024-10-22 00:24:47,137:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001602896D800>)
2024-10-22 00:24:47,137:INFO:Checking exceptions
2024-10-22 00:24:47,137:INFO:Preloading libraries
2024-10-22 00:24:47,841:INFO:Creating Dashboard logs
2024-10-22 00:24:47,843:INFO:Model: Gradient Boosting Classifier
2024-10-22 00:24:47,885:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-22 00:24:48,376:INFO:Creating Dashboard logs
2024-10-22 00:24:48,379:INFO:Model: Ada Boost Classifier
2024-10-22 00:24:48,420:INFO:Logged params: {'algorithm': 'SAMME.R', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2024-10-22 00:24:48,784:INFO:Creating Dashboard logs
2024-10-22 00:24:48,786:INFO:Model: Random Forest Classifier
2024-10-22 00:24:48,829:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-22 00:24:49,216:INFO:Creating Dashboard logs
2024-10-22 00:24:49,218:INFO:Model: Extra Trees Classifier
2024-10-22 00:24:49,261:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-22 00:24:49,681:INFO:Creating Dashboard logs
2024-10-22 00:24:49,683:INFO:Model: Logistic Regression
2024-10-22 00:24:49,726:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-10-22 00:24:50,122:INFO:Creating Dashboard logs
2024-10-22 00:24:50,124:INFO:Model: Linear Discriminant Analysis
2024-10-22 00:24:50,165:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2024-10-22 00:24:50,664:INFO:Creating Dashboard logs
2024-10-22 00:24:50,667:INFO:Model: Ridge Classifier
2024-10-22 00:24:50,725:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2024-10-22 00:24:51,170:INFO:Creating Dashboard logs
2024-10-22 00:24:51,172:INFO:Model: Decision Tree Classifier
2024-10-22 00:24:51,237:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 123, 'splitter': 'best'}
2024-10-22 00:24:51,683:INFO:Creating Dashboard logs
2024-10-22 00:24:51,685:INFO:Model: Naive Bayes
2024-10-22 00:24:51,740:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2024-10-22 00:24:52,256:INFO:Creating Dashboard logs
2024-10-22 00:24:52,258:INFO:Model: Dummy Classifier
2024-10-22 00:24:52,300:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2024-10-22 00:24:52,725:INFO:Creating Dashboard logs
2024-10-22 00:24:52,727:INFO:Model: K Neighbors Classifier
2024-10-22 00:24:52,769:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-10-22 00:24:53,183:INFO:Creating Dashboard logs
2024-10-22 00:24:53,185:INFO:Model: SVM - Linear Kernel
2024-10-22 00:24:53,253:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-22 00:24:53,691:INFO:Creating Dashboard logs
2024-10-22 00:24:53,693:INFO:Model: Quadratic Discriminant Analysis
2024-10-22 00:24:53,757:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2024-10-22 00:24:54,138:INFO:_master_model_container: 28
2024-10-22 00:24:54,138:INFO:_display_container: 3
2024-10-22 00:24:54,139:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-22 00:24:54,139:INFO:compare_models() successfully completed......................................
2024-10-22 00:29:08,498:INFO:Initializing compare_models()
2024-10-22 00:29:08,498:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-22 00:29:08,498:INFO:Checking exceptions
2024-10-22 00:29:08,533:INFO:Preparing display monitor
2024-10-22 00:29:08,574:INFO:Initializing Logistic Regression
2024-10-22 00:29:08,575:INFO:Total runtime is 1.6609827677408855e-05 minutes
2024-10-22 00:29:08,579:INFO:SubProcess create_model() called ==================================
2024-10-22 00:29:08,579:INFO:Initializing create_model()
2024-10-22 00:29:08,579:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160289CAE10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000160207AF0D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:29:08,579:INFO:Checking exceptions
2024-10-22 00:29:08,581:INFO:Importing libraries
2024-10-22 00:29:08,581:INFO:Copying training dataset
2024-10-22 00:29:08,639:INFO:Defining folds
2024-10-22 00:29:08,639:INFO:Declaring metric variables
2024-10-22 00:29:08,642:INFO:Importing untrained model
2024-10-22 00:29:08,645:INFO:Logistic Regression Imported successfully
2024-10-22 00:29:08,651:INFO:Starting cross validation
2024-10-22 00:29:08,653:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:29:16,239:INFO:PyCaret ClassificationExperiment
2024-10-22 00:29:16,239:INFO:Logging name: Bank_Churn
2024-10-22 00:29:16,239:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-22 00:29:16,240:INFO:version 3.3.2
2024-10-22 00:29:16,240:INFO:Initializing setup()
2024-10-22 00:29:16,240:INFO:self.USI: 569c
2024-10-22 00:29:16,240:INFO:self._variable_keys: {'pipeline', 'memory', 'html_param', 'exp_id', 'gpu_param', 'X_test', 'logging_param', 'exp_name_log', 'gpu_n_jobs_param', 'seed', 'n_jobs_param', 'idx', 'log_plots_param', 'target_param', 'is_multiclass', 'fold_shuffle_param', 'USI', 'fold_groups_param', 'fix_imbalance', 'data', 'y_train', 'X', 'y_test', '_available_plots', 'X_train', 'fold_generator', 'y', '_ml_usecase'}
2024-10-22 00:29:16,240:INFO:Checking environment
2024-10-22 00:29:16,240:INFO:python_version: 3.11.1
2024-10-22 00:29:16,240:INFO:python_build: ('tags/v3.11.1:a7a450f', 'Dec  6 2022 19:58:39')
2024-10-22 00:29:16,240:INFO:machine: AMD64
2024-10-22 00:29:16,241:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-22 00:29:16,251:INFO:Memory: svmem(total=16984227840, available=8091791360, percent=52.4, used=8892436480, free=8091791360)
2024-10-22 00:29:16,251:INFO:Physical Core: 6
2024-10-22 00:29:16,251:INFO:Logical Core: 12
2024-10-22 00:29:16,251:INFO:Checking libraries
2024-10-22 00:29:16,251:INFO:System:
2024-10-22 00:29:16,251:INFO:    python: 3.11.1 (tags/v3.11.1:a7a450f, Dec  6 2022, 19:58:39) [MSC v.1934 64 bit (AMD64)]
2024-10-22 00:29:16,251:INFO:executable: e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Scripts\python.exe
2024-10-22 00:29:16,251:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-22 00:29:16,251:INFO:PyCaret required dependencies:
2024-10-22 00:29:16,252:INFO:                 pip: 22.3.1
2024-10-22 00:29:16,252:INFO:          setuptools: 65.5.0
2024-10-22 00:29:16,252:INFO:             pycaret: 3.3.2
2024-10-22 00:29:16,252:INFO:             IPython: 8.28.0
2024-10-22 00:29:16,252:INFO:          ipywidgets: 8.1.5
2024-10-22 00:29:16,252:INFO:                tqdm: 4.66.5
2024-10-22 00:29:16,252:INFO:               numpy: 1.26.4
2024-10-22 00:29:16,252:INFO:              pandas: 2.1.4
2024-10-22 00:29:16,252:INFO:              jinja2: 3.1.4
2024-10-22 00:29:16,252:INFO:               scipy: 1.11.4
2024-10-22 00:29:16,252:INFO:              joblib: 1.3.2
2024-10-22 00:29:16,252:INFO:             sklearn: 1.4.2
2024-10-22 00:29:16,252:INFO:                pyod: 2.0.2
2024-10-22 00:29:16,252:INFO:            imblearn: 0.12.4
2024-10-22 00:29:16,252:INFO:   category_encoders: 2.6.4
2024-10-22 00:29:16,252:INFO:            lightgbm: 4.5.0
2024-10-22 00:29:16,252:INFO:               numba: 0.60.0
2024-10-22 00:29:16,252:INFO:            requests: 2.32.3
2024-10-22 00:29:16,252:INFO:          matplotlib: 3.7.5
2024-10-22 00:29:16,252:INFO:          scikitplot: 0.3.7
2024-10-22 00:29:16,252:INFO:         yellowbrick: 1.5
2024-10-22 00:29:16,252:INFO:              plotly: 5.24.1
2024-10-22 00:29:16,253:INFO:    plotly-resampler: Not installed
2024-10-22 00:29:16,253:INFO:             kaleido: 0.2.1
2024-10-22 00:29:16,253:INFO:           schemdraw: 0.15
2024-10-22 00:29:16,253:INFO:         statsmodels: 0.14.4
2024-10-22 00:29:16,253:INFO:              sktime: 0.26.0
2024-10-22 00:29:16,253:INFO:               tbats: 1.1.3
2024-10-22 00:29:16,253:INFO:            pmdarima: 2.0.4
2024-10-22 00:29:16,253:INFO:              psutil: 6.1.0
2024-10-22 00:29:16,253:INFO:          markupsafe: 3.0.2
2024-10-22 00:29:16,253:INFO:             pickle5: Not installed
2024-10-22 00:29:16,253:INFO:         cloudpickle: 3.1.0
2024-10-22 00:29:16,253:INFO:         deprecation: 2.1.0
2024-10-22 00:29:16,254:INFO:              xxhash: 3.5.0
2024-10-22 00:29:16,254:INFO:           wurlitzer: Not installed
2024-10-22 00:29:16,254:INFO:PyCaret optional dependencies:
2024-10-22 00:29:16,254:INFO:                shap: Not installed
2024-10-22 00:29:16,254:INFO:           interpret: Not installed
2024-10-22 00:29:16,254:INFO:                umap: Not installed
2024-10-22 00:29:16,254:INFO:     ydata_profiling: Not installed
2024-10-22 00:29:16,254:INFO:  explainerdashboard: Not installed
2024-10-22 00:29:16,254:INFO:             autoviz: Not installed
2024-10-22 00:29:16,254:INFO:           fairlearn: Not installed
2024-10-22 00:29:16,254:INFO:          deepchecks: Not installed
2024-10-22 00:29:16,254:INFO:             xgboost: Not installed
2024-10-22 00:29:16,255:INFO:            catboost: Not installed
2024-10-22 00:29:16,255:INFO:              kmodes: Not installed
2024-10-22 00:29:16,255:INFO:             mlxtend: Not installed
2024-10-22 00:29:16,255:INFO:       statsforecast: Not installed
2024-10-22 00:29:16,255:INFO:        tune_sklearn: Not installed
2024-10-22 00:29:16,255:INFO:                 ray: Not installed
2024-10-22 00:29:16,255:INFO:            hyperopt: 0.2.7
2024-10-22 00:29:16,255:INFO:              optuna: 4.0.0
2024-10-22 00:29:16,255:INFO:               skopt: 0.10.2
2024-10-22 00:29:16,255:INFO:              mlflow: 2.17.0
2024-10-22 00:29:16,255:INFO:              gradio: Not installed
2024-10-22 00:29:16,255:INFO:             fastapi: 0.115.2
2024-10-22 00:29:16,255:INFO:             uvicorn: 0.32.0
2024-10-22 00:29:16,255:INFO:              m2cgen: Not installed
2024-10-22 00:29:16,256:INFO:           evidently: Not installed
2024-10-22 00:29:16,256:INFO:               fugue: Not installed
2024-10-22 00:29:16,256:INFO:           streamlit: Not installed
2024-10-22 00:29:16,256:INFO:             prophet: Not installed
2024-10-22 00:29:16,256:INFO:None
2024-10-22 00:29:16,256:INFO:Set up data.
2024-10-22 00:29:16,352:INFO:Set up folding strategy.
2024-10-22 00:29:16,353:INFO:Set up train/test split.
2024-10-22 00:29:16,417:INFO:Set up index.
2024-10-22 00:29:16,419:INFO:Assigning column types.
2024-10-22 00:29:16,433:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-22 00:29:16,486:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-22 00:29:16,487:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 00:29:16,546:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:29:16,546:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:29:16,578:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-22 00:29:16,579:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 00:29:16,596:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:29:16,597:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:29:16,597:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-22 00:29:16,622:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 00:29:16,641:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:29:16,641:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:29:16,671:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 00:29:16,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:29:16,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:29:16,687:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-22 00:29:16,730:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:29:16,730:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:29:16,772:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:29:16,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:29:16,773:INFO:Preparing preprocessing pipeline...
2024-10-22 00:29:16,777:INFO:Set up simple imputation.
2024-10-22 00:29:16,789:INFO:Set up encoding of ordinal features.
2024-10-22 00:29:16,797:INFO:Set up encoding of categorical features.
2024-10-22 00:29:17,203:INFO:Finished creating preprocessing pipeline.
2024-10-22 00:29:17,216:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-22 00:29:17,216:INFO:Creating final display dataframe.
2024-10-22 00:29:17,398:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target           Exited
2                   Target type           Binary
3           Original data shape     (165034, 14)
4        Transformed data shape     (165034, 13)
5   Transformed train set shape     (115523, 13)
6    Transformed test set shape      (49511, 13)
7               Ignore features                3
8              Numeric features                8
9          Categorical features                2
10                   Preprocess             True
11              Imputation type           simple
12           Numeric imputation             mean
13       Categorical imputation             mode
14     Maximum one-hot encoding               25
15              Encoding method             None
16               Fold Generator  StratifiedKFold
17                  Fold Number               10
18                     CPU Jobs               -1
19                      Use GPU            False
20               Log Experiment     MlflowLogger
21              Experiment Name       Bank_Churn
22                          USI             569c
2024-10-22 00:29:17,473:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:29:17,474:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:29:17,530:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:29:17,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:29:17,531:INFO:Logging experiment in loggers
2024-10-22 00:29:17,720:INFO:SubProcess save_model() called ==================================
2024-10-22 00:29:17,739:INFO:Initializing save_model()
2024-10-22 00:29:17,739:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), model_name=C:\Users\User\AppData\Local\Temp\tmpqef87tym\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-10-22 00:29:17,739:INFO:Adding model into prep_pipe
2024-10-22 00:29:17,739:WARNING:Only Model saved as it was a pipeline.
2024-10-22 00:29:17,742:INFO:C:\Users\User\AppData\Local\Temp\tmpqef87tym\Transformation Pipeline.pkl saved in current working directory
2024-10-22 00:29:17,750:INFO:Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-22 00:29:17,750:INFO:save_model() successfully completed......................................
2024-10-22 00:29:17,855:INFO:SubProcess save_model() end ==================================
2024-10-22 00:29:17,913:INFO:setup() successfully completed in 1.3s...............
2024-10-22 00:29:23,867:INFO:Initializing compare_models()
2024-10-22 00:29:23,867:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160288C21D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000160288C21D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-22 00:29:23,867:INFO:Checking exceptions
2024-10-22 00:29:23,890:INFO:Preparing display monitor
2024-10-22 00:29:23,916:INFO:Initializing Logistic Regression
2024-10-22 00:29:23,916:INFO:Total runtime is 0.0 minutes
2024-10-22 00:29:23,919:INFO:SubProcess create_model() called ==================================
2024-10-22 00:29:23,921:INFO:Initializing create_model()
2024-10-22 00:29:23,921:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160288C21D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016024E99910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:29:23,921:INFO:Checking exceptions
2024-10-22 00:29:23,921:INFO:Importing libraries
2024-10-22 00:29:23,921:INFO:Copying training dataset
2024-10-22 00:29:23,954:INFO:Defining folds
2024-10-22 00:29:23,954:INFO:Declaring metric variables
2024-10-22 00:29:23,956:INFO:Importing untrained model
2024-10-22 00:29:23,961:INFO:Logistic Regression Imported successfully
2024-10-22 00:29:23,968:INFO:Starting cross validation
2024-10-22 00:29:23,969:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:29:56,900:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:29:56,983:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:29:57,004:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:29:57,284:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:29:57,319:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:29:57,356:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:29:57,358:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:29:57,418:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:29:57,459:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:29:57,466:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-10-22 00:29:57,565:INFO:Calculating mean and std
2024-10-22 00:29:57,568:INFO:Creating metrics dataframe
2024-10-22 00:29:57,571:INFO:Uploading results into container
2024-10-22 00:29:57,572:INFO:Uploading model into container now
2024-10-22 00:29:57,573:INFO:_master_model_container: 1
2024-10-22 00:29:57,573:INFO:_display_container: 2
2024-10-22 00:29:57,574:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-22 00:29:57,574:INFO:create_model() successfully completed......................................
2024-10-22 00:29:57,733:INFO:SubProcess create_model() end ==================================
2024-10-22 00:29:57,733:INFO:Creating metrics dataframe
2024-10-22 00:29:57,737:INFO:Initializing K Neighbors Classifier
2024-10-22 00:29:57,737:INFO:Total runtime is 0.5636748194694519 minutes
2024-10-22 00:29:57,739:INFO:SubProcess create_model() called ==================================
2024-10-22 00:29:57,739:INFO:Initializing create_model()
2024-10-22 00:29:57,739:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160288C21D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016024E99910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:29:57,739:INFO:Checking exceptions
2024-10-22 00:29:57,739:INFO:Importing libraries
2024-10-22 00:29:57,739:INFO:Copying training dataset
2024-10-22 00:29:57,775:INFO:Defining folds
2024-10-22 00:29:57,775:INFO:Declaring metric variables
2024-10-22 00:29:57,778:INFO:Importing untrained model
2024-10-22 00:29:57,780:INFO:K Neighbors Classifier Imported successfully
2024-10-22 00:29:57,784:INFO:Starting cross validation
2024-10-22 00:29:57,784:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:30:02,981:INFO:Calculating mean and std
2024-10-22 00:30:02,982:INFO:Creating metrics dataframe
2024-10-22 00:30:02,983:INFO:Uploading results into container
2024-10-22 00:30:02,984:INFO:Uploading model into container now
2024-10-22 00:30:02,984:INFO:_master_model_container: 2
2024-10-22 00:30:02,984:INFO:_display_container: 2
2024-10-22 00:30:02,984:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-22 00:30:02,985:INFO:create_model() successfully completed......................................
2024-10-22 00:30:03,103:INFO:SubProcess create_model() end ==================================
2024-10-22 00:30:03,103:INFO:Creating metrics dataframe
2024-10-22 00:30:03,107:INFO:Initializing Naive Bayes
2024-10-22 00:30:03,107:INFO:Total runtime is 0.6531734863917033 minutes
2024-10-22 00:30:03,111:INFO:SubProcess create_model() called ==================================
2024-10-22 00:30:03,111:INFO:Initializing create_model()
2024-10-22 00:30:03,111:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160288C21D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016024E99910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:30:03,111:INFO:Checking exceptions
2024-10-22 00:30:03,111:INFO:Importing libraries
2024-10-22 00:30:03,111:INFO:Copying training dataset
2024-10-22 00:30:03,165:INFO:Defining folds
2024-10-22 00:30:03,165:INFO:Declaring metric variables
2024-10-22 00:30:03,169:INFO:Importing untrained model
2024-10-22 00:30:03,175:INFO:Naive Bayes Imported successfully
2024-10-22 00:30:03,186:INFO:Starting cross validation
2024-10-22 00:30:03,188:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:30:04,506:INFO:Calculating mean and std
2024-10-22 00:30:04,510:INFO:Creating metrics dataframe
2024-10-22 00:30:04,515:INFO:Uploading results into container
2024-10-22 00:30:04,516:INFO:Uploading model into container now
2024-10-22 00:30:04,517:INFO:_master_model_container: 3
2024-10-22 00:30:04,517:INFO:_display_container: 2
2024-10-22 00:30:04,517:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-22 00:30:04,517:INFO:create_model() successfully completed......................................
2024-10-22 00:30:04,665:INFO:SubProcess create_model() end ==================================
2024-10-22 00:30:04,665:INFO:Creating metrics dataframe
2024-10-22 00:30:04,675:INFO:Initializing Decision Tree Classifier
2024-10-22 00:30:04,676:INFO:Total runtime is 0.6793323874473571 minutes
2024-10-22 00:30:04,684:INFO:SubProcess create_model() called ==================================
2024-10-22 00:30:04,685:INFO:Initializing create_model()
2024-10-22 00:30:04,685:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160288C21D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016024E99910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:30:04,685:INFO:Checking exceptions
2024-10-22 00:30:04,685:INFO:Importing libraries
2024-10-22 00:30:04,685:INFO:Copying training dataset
2024-10-22 00:30:04,747:INFO:Defining folds
2024-10-22 00:30:04,747:INFO:Declaring metric variables
2024-10-22 00:30:04,751:INFO:Importing untrained model
2024-10-22 00:30:04,755:INFO:Decision Tree Classifier Imported successfully
2024-10-22 00:30:04,763:INFO:Starting cross validation
2024-10-22 00:30:04,765:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:30:06,763:INFO:Calculating mean and std
2024-10-22 00:30:06,764:INFO:Creating metrics dataframe
2024-10-22 00:30:06,765:INFO:Uploading results into container
2024-10-22 00:30:06,765:INFO:Uploading model into container now
2024-10-22 00:30:06,766:INFO:_master_model_container: 4
2024-10-22 00:30:06,766:INFO:_display_container: 2
2024-10-22 00:30:06,767:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-10-22 00:30:06,767:INFO:create_model() successfully completed......................................
2024-10-22 00:30:06,881:INFO:SubProcess create_model() end ==================================
2024-10-22 00:30:06,881:INFO:Creating metrics dataframe
2024-10-22 00:30:06,886:INFO:Initializing SVM - Linear Kernel
2024-10-22 00:30:06,886:INFO:Total runtime is 0.7161649266878763 minutes
2024-10-22 00:30:06,888:INFO:SubProcess create_model() called ==================================
2024-10-22 00:30:06,888:INFO:Initializing create_model()
2024-10-22 00:30:06,888:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160288C21D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016024E99910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:30:06,888:INFO:Checking exceptions
2024-10-22 00:30:06,888:INFO:Importing libraries
2024-10-22 00:30:06,888:INFO:Copying training dataset
2024-10-22 00:30:06,923:INFO:Defining folds
2024-10-22 00:30:06,923:INFO:Declaring metric variables
2024-10-22 00:30:06,926:INFO:Importing untrained model
2024-10-22 00:30:06,929:INFO:SVM - Linear Kernel Imported successfully
2024-10-22 00:30:06,933:INFO:Starting cross validation
2024-10-22 00:30:06,934:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:30:21,633:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:30:23,134:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:30:26,850:INFO:Calculating mean and std
2024-10-22 00:30:26,853:INFO:Creating metrics dataframe
2024-10-22 00:30:26,857:INFO:Uploading results into container
2024-10-22 00:30:26,859:INFO:Uploading model into container now
2024-10-22 00:30:26,860:INFO:_master_model_container: 5
2024-10-22 00:30:26,860:INFO:_display_container: 2
2024-10-22 00:30:26,861:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-22 00:30:26,862:INFO:create_model() successfully completed......................................
2024-10-22 00:30:27,027:INFO:SubProcess create_model() end ==================================
2024-10-22 00:30:27,027:INFO:Creating metrics dataframe
2024-10-22 00:30:27,032:INFO:Initializing Ridge Classifier
2024-10-22 00:30:27,032:INFO:Total runtime is 1.0519251942634582 minutes
2024-10-22 00:30:27,035:INFO:SubProcess create_model() called ==================================
2024-10-22 00:30:27,035:INFO:Initializing create_model()
2024-10-22 00:30:27,035:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160288C21D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016024E99910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:30:27,035:INFO:Checking exceptions
2024-10-22 00:30:27,036:INFO:Importing libraries
2024-10-22 00:30:27,036:INFO:Copying training dataset
2024-10-22 00:30:27,066:INFO:Defining folds
2024-10-22 00:30:27,067:INFO:Declaring metric variables
2024-10-22 00:30:27,070:INFO:Importing untrained model
2024-10-22 00:30:27,075:INFO:Ridge Classifier Imported successfully
2024-10-22 00:30:27,084:INFO:Starting cross validation
2024-10-22 00:30:27,086:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:30:28,293:INFO:Calculating mean and std
2024-10-22 00:30:28,294:INFO:Creating metrics dataframe
2024-10-22 00:30:28,296:INFO:Uploading results into container
2024-10-22 00:30:28,296:INFO:Uploading model into container now
2024-10-22 00:30:28,297:INFO:_master_model_container: 6
2024-10-22 00:30:28,297:INFO:_display_container: 2
2024-10-22 00:30:28,297:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-10-22 00:30:28,297:INFO:create_model() successfully completed......................................
2024-10-22 00:30:28,412:INFO:SubProcess create_model() end ==================================
2024-10-22 00:30:28,412:INFO:Creating metrics dataframe
2024-10-22 00:30:28,419:INFO:Initializing Random Forest Classifier
2024-10-22 00:30:28,419:INFO:Total runtime is 1.0750401298205057 minutes
2024-10-22 00:30:28,424:INFO:SubProcess create_model() called ==================================
2024-10-22 00:30:28,424:INFO:Initializing create_model()
2024-10-22 00:30:28,424:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160288C21D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016024E99910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:30:28,424:INFO:Checking exceptions
2024-10-22 00:30:28,424:INFO:Importing libraries
2024-10-22 00:30:28,424:INFO:Copying training dataset
2024-10-22 00:30:28,496:INFO:Defining folds
2024-10-22 00:30:28,497:INFO:Declaring metric variables
2024-10-22 00:30:28,501:INFO:Importing untrained model
2024-10-22 00:30:28,505:INFO:Random Forest Classifier Imported successfully
2024-10-22 00:30:28,512:INFO:Starting cross validation
2024-10-22 00:30:28,513:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:30:51,438:INFO:Calculating mean and std
2024-10-22 00:30:51,441:INFO:Creating metrics dataframe
2024-10-22 00:30:51,444:INFO:Uploading results into container
2024-10-22 00:30:51,445:INFO:Uploading model into container now
2024-10-22 00:30:51,446:INFO:_master_model_container: 7
2024-10-22 00:30:51,446:INFO:_display_container: 2
2024-10-22 00:30:51,446:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-22 00:30:51,446:INFO:create_model() successfully completed......................................
2024-10-22 00:30:51,703:INFO:SubProcess create_model() end ==================================
2024-10-22 00:30:51,703:INFO:Creating metrics dataframe
2024-10-22 00:30:51,711:INFO:Initializing Quadratic Discriminant Analysis
2024-10-22 00:30:51,711:INFO:Total runtime is 1.4632409731547038 minutes
2024-10-22 00:30:51,713:INFO:SubProcess create_model() called ==================================
2024-10-22 00:30:51,714:INFO:Initializing create_model()
2024-10-22 00:30:51,714:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160288C21D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016024E99910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:30:51,714:INFO:Checking exceptions
2024-10-22 00:30:51,714:INFO:Importing libraries
2024-10-22 00:30:51,714:INFO:Copying training dataset
2024-10-22 00:30:51,774:INFO:Defining folds
2024-10-22 00:30:51,774:INFO:Declaring metric variables
2024-10-22 00:30:51,778:INFO:Importing untrained model
2024-10-22 00:30:51,781:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-22 00:30:51,787:INFO:Starting cross validation
2024-10-22 00:30:51,788:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:30:52,667:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:30:52,753:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:30:52,782:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:30:52,910:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:30:52,974:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:30:53,010:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:30:53,053:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:30:53,081:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:30:53,123:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:30:53,218:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-22 00:30:53,297:INFO:Calculating mean and std
2024-10-22 00:30:53,298:INFO:Creating metrics dataframe
2024-10-22 00:30:53,300:INFO:Uploading results into container
2024-10-22 00:30:53,301:INFO:Uploading model into container now
2024-10-22 00:30:53,301:INFO:_master_model_container: 8
2024-10-22 00:30:53,301:INFO:_display_container: 2
2024-10-22 00:30:53,301:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-22 00:30:53,301:INFO:create_model() successfully completed......................................
2024-10-22 00:30:53,412:INFO:SubProcess create_model() end ==================================
2024-10-22 00:30:53,412:INFO:Creating metrics dataframe
2024-10-22 00:30:53,421:INFO:Initializing Ada Boost Classifier
2024-10-22 00:30:53,421:INFO:Total runtime is 1.491740596294403 minutes
2024-10-22 00:30:53,424:INFO:SubProcess create_model() called ==================================
2024-10-22 00:30:53,425:INFO:Initializing create_model()
2024-10-22 00:30:53,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160288C21D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016024E99910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:30:53,425:INFO:Checking exceptions
2024-10-22 00:30:53,425:INFO:Importing libraries
2024-10-22 00:30:53,425:INFO:Copying training dataset
2024-10-22 00:30:53,501:INFO:Defining folds
2024-10-22 00:30:53,501:INFO:Declaring metric variables
2024-10-22 00:30:53,505:INFO:Importing untrained model
2024-10-22 00:30:53,510:INFO:Ada Boost Classifier Imported successfully
2024-10-22 00:30:53,516:INFO:Starting cross validation
2024-10-22 00:30:53,517:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:30:54,209:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:30:54,248:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:30:54,292:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:30:54,333:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:30:54,400:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:30:54,462:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:30:54,495:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:30:54,529:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:30:54,598:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:30:54,611:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-22 00:31:01,039:INFO:Calculating mean and std
2024-10-22 00:31:01,041:INFO:Creating metrics dataframe
2024-10-22 00:31:01,042:INFO:Uploading results into container
2024-10-22 00:31:01,043:INFO:Uploading model into container now
2024-10-22 00:31:01,043:INFO:_master_model_container: 9
2024-10-22 00:31:01,043:INFO:_display_container: 2
2024-10-22 00:31:01,044:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-10-22 00:31:01,044:INFO:create_model() successfully completed......................................
2024-10-22 00:31:01,169:INFO:SubProcess create_model() end ==================================
2024-10-22 00:31:01,170:INFO:Creating metrics dataframe
2024-10-22 00:31:01,176:INFO:Initializing Gradient Boosting Classifier
2024-10-22 00:31:01,176:INFO:Total runtime is 1.6209986646970114 minutes
2024-10-22 00:31:01,178:INFO:SubProcess create_model() called ==================================
2024-10-22 00:31:01,178:INFO:Initializing create_model()
2024-10-22 00:31:01,178:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160288C21D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016024E99910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:31:01,178:INFO:Checking exceptions
2024-10-22 00:31:01,178:INFO:Importing libraries
2024-10-22 00:31:01,178:INFO:Copying training dataset
2024-10-22 00:31:01,212:INFO:Defining folds
2024-10-22 00:31:01,212:INFO:Declaring metric variables
2024-10-22 00:31:01,215:INFO:Importing untrained model
2024-10-22 00:31:01,219:INFO:Gradient Boosting Classifier Imported successfully
2024-10-22 00:31:01,226:INFO:Starting cross validation
2024-10-22 00:31:01,228:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:31:23,636:INFO:Calculating mean and std
2024-10-22 00:31:23,637:INFO:Creating metrics dataframe
2024-10-22 00:31:23,638:INFO:Uploading results into container
2024-10-22 00:31:23,638:INFO:Uploading model into container now
2024-10-22 00:31:23,639:INFO:_master_model_container: 10
2024-10-22 00:31:23,639:INFO:_display_container: 2
2024-10-22 00:31:23,639:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-22 00:31:23,639:INFO:create_model() successfully completed......................................
2024-10-22 00:31:23,784:INFO:SubProcess create_model() end ==================================
2024-10-22 00:31:23,784:INFO:Creating metrics dataframe
2024-10-22 00:31:23,794:INFO:Initializing Linear Discriminant Analysis
2024-10-22 00:31:23,794:INFO:Total runtime is 1.9979584932327272 minutes
2024-10-22 00:31:23,798:INFO:SubProcess create_model() called ==================================
2024-10-22 00:31:23,798:INFO:Initializing create_model()
2024-10-22 00:31:23,799:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160288C21D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016024E99910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:31:23,799:INFO:Checking exceptions
2024-10-22 00:31:23,799:INFO:Importing libraries
2024-10-22 00:31:23,799:INFO:Copying training dataset
2024-10-22 00:31:23,870:INFO:Defining folds
2024-10-22 00:31:23,870:INFO:Declaring metric variables
2024-10-22 00:31:23,876:INFO:Importing untrained model
2024-10-22 00:31:23,882:INFO:Linear Discriminant Analysis Imported successfully
2024-10-22 00:31:23,889:INFO:Starting cross validation
2024-10-22 00:31:23,890:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:31:25,347:INFO:Calculating mean and std
2024-10-22 00:31:25,348:INFO:Creating metrics dataframe
2024-10-22 00:31:25,349:INFO:Uploading results into container
2024-10-22 00:31:25,350:INFO:Uploading model into container now
2024-10-22 00:31:25,350:INFO:_master_model_container: 11
2024-10-22 00:31:25,351:INFO:_display_container: 2
2024-10-22 00:31:25,351:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-22 00:31:25,351:INFO:create_model() successfully completed......................................
2024-10-22 00:31:25,471:INFO:SubProcess create_model() end ==================================
2024-10-22 00:31:25,471:INFO:Creating metrics dataframe
2024-10-22 00:31:25,478:INFO:Initializing Extra Trees Classifier
2024-10-22 00:31:25,478:INFO:Total runtime is 2.026030123233795 minutes
2024-10-22 00:31:25,481:INFO:SubProcess create_model() called ==================================
2024-10-22 00:31:25,481:INFO:Initializing create_model()
2024-10-22 00:31:25,481:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160288C21D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016024E99910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:31:25,481:INFO:Checking exceptions
2024-10-22 00:31:25,481:INFO:Importing libraries
2024-10-22 00:31:25,481:INFO:Copying training dataset
2024-10-22 00:31:25,524:INFO:Defining folds
2024-10-22 00:31:25,525:INFO:Declaring metric variables
2024-10-22 00:31:25,530:INFO:Importing untrained model
2024-10-22 00:31:25,534:INFO:Extra Trees Classifier Imported successfully
2024-10-22 00:31:25,544:INFO:Starting cross validation
2024-10-22 00:31:25,546:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:31:44,766:INFO:Calculating mean and std
2024-10-22 00:31:44,768:INFO:Creating metrics dataframe
2024-10-22 00:31:44,770:INFO:Uploading results into container
2024-10-22 00:31:44,770:INFO:Uploading model into container now
2024-10-22 00:31:44,772:INFO:_master_model_container: 12
2024-10-22 00:31:44,772:INFO:_display_container: 2
2024-10-22 00:31:44,772:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-10-22 00:31:44,774:INFO:create_model() successfully completed......................................
2024-10-22 00:31:44,932:INFO:SubProcess create_model() end ==================================
2024-10-22 00:31:44,932:INFO:Creating metrics dataframe
2024-10-22 00:31:44,942:INFO:Initializing Light Gradient Boosting Machine
2024-10-22 00:31:44,942:INFO:Total runtime is 2.3504226764043175 minutes
2024-10-22 00:31:44,946:INFO:SubProcess create_model() called ==================================
2024-10-22 00:31:44,947:INFO:Initializing create_model()
2024-10-22 00:31:44,947:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160288C21D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016024E99910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:31:44,947:INFO:Checking exceptions
2024-10-22 00:31:44,947:INFO:Importing libraries
2024-10-22 00:31:44,947:INFO:Copying training dataset
2024-10-22 00:31:44,990:INFO:Defining folds
2024-10-22 00:31:44,990:INFO:Declaring metric variables
2024-10-22 00:31:44,995:INFO:Importing untrained model
2024-10-22 00:31:44,998:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-22 00:31:45,003:INFO:Starting cross validation
2024-10-22 00:31:45,005:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:31:50,320:INFO:Calculating mean and std
2024-10-22 00:31:50,321:INFO:Creating metrics dataframe
2024-10-22 00:31:50,326:INFO:Uploading results into container
2024-10-22 00:31:50,327:INFO:Uploading model into container now
2024-10-22 00:31:50,328:INFO:_master_model_container: 13
2024-10-22 00:31:50,328:INFO:_display_container: 2
2024-10-22 00:31:50,328:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-22 00:31:50,328:INFO:create_model() successfully completed......................................
2024-10-22 00:31:50,449:INFO:SubProcess create_model() end ==================================
2024-10-22 00:31:50,449:INFO:Creating metrics dataframe
2024-10-22 00:31:50,455:INFO:Initializing Dummy Classifier
2024-10-22 00:31:50,455:INFO:Total runtime is 2.442301956812541 minutes
2024-10-22 00:31:50,458:INFO:SubProcess create_model() called ==================================
2024-10-22 00:31:50,459:INFO:Initializing create_model()
2024-10-22 00:31:50,459:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160288C21D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016024E99910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:31:50,459:INFO:Checking exceptions
2024-10-22 00:31:50,459:INFO:Importing libraries
2024-10-22 00:31:50,459:INFO:Copying training dataset
2024-10-22 00:31:50,499:INFO:Defining folds
2024-10-22 00:31:50,499:INFO:Declaring metric variables
2024-10-22 00:31:50,500:INFO:Importing untrained model
2024-10-22 00:31:50,503:INFO:Dummy Classifier Imported successfully
2024-10-22 00:31:50,509:INFO:Starting cross validation
2024-10-22 00:31:50,511:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 00:31:51,327:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:31:51,363:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:31:51,446:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:31:51,458:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:31:51,529:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:31:51,568:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:31:51,585:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:31:51,626:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:31:51,660:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:31:51,675:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-22 00:31:51,699:INFO:Calculating mean and std
2024-10-22 00:31:51,700:INFO:Creating metrics dataframe
2024-10-22 00:31:51,701:INFO:Uploading results into container
2024-10-22 00:31:51,701:INFO:Uploading model into container now
2024-10-22 00:31:51,702:INFO:_master_model_container: 14
2024-10-22 00:31:51,702:INFO:_display_container: 2
2024-10-22 00:31:51,702:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-10-22 00:31:51,702:INFO:create_model() successfully completed......................................
2024-10-22 00:31:51,819:INFO:SubProcess create_model() end ==================================
2024-10-22 00:31:51,819:INFO:Creating metrics dataframe
2024-10-22 00:31:51,827:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-10-22 00:31:51,834:INFO:Initializing create_model()
2024-10-22 00:31:51,834:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160288C21D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 00:31:51,835:INFO:Checking exceptions
2024-10-22 00:31:51,837:INFO:Importing libraries
2024-10-22 00:31:51,837:INFO:Copying training dataset
2024-10-22 00:31:51,876:INFO:Defining folds
2024-10-22 00:31:51,876:INFO:Declaring metric variables
2024-10-22 00:31:51,876:INFO:Importing untrained model
2024-10-22 00:31:51,876:INFO:Declaring custom model
2024-10-22 00:31:51,877:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-22 00:31:51,878:INFO:Cross validation set to False
2024-10-22 00:31:51,878:INFO:Fitting Model
2024-10-22 00:31:52,230:INFO:[LightGBM] [Info] Number of positive: 24445, number of negative: 91078
2024-10-22 00:31:52,234:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000974 seconds.
2024-10-22 00:31:52,234:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-10-22 00:31:52,234:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-10-22 00:31:52,234:INFO:[LightGBM] [Info] Total Bins 860
2024-10-22 00:31:52,235:INFO:[LightGBM] [Info] Number of data points in the train set: 115523, number of used features: 12
2024-10-22 00:31:52,235:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.211603 -> initscore=-1.315291
2024-10-22 00:31:52,235:INFO:[LightGBM] [Info] Start training from score -1.315291
2024-10-22 00:31:52,552:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-22 00:31:52,552:INFO:create_model() successfully completed......................................
2024-10-22 00:31:52,677:INFO:Creating Dashboard logs
2024-10-22 00:31:52,684:INFO:Model: Light Gradient Boosting Machine
2024-10-22 00:31:52,770:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-10-22 00:31:53,017:INFO:Initializing predict_model()
2024-10-22 00:31:53,017:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000160288C21D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000160288FB240>)
2024-10-22 00:31:53,017:INFO:Checking exceptions
2024-10-22 00:31:53,017:INFO:Preloading libraries
2024-10-22 00:31:53,751:INFO:Creating Dashboard logs
2024-10-22 00:31:53,754:INFO:Model: Gradient Boosting Classifier
2024-10-22 00:31:53,802:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-22 00:31:54,217:INFO:Creating Dashboard logs
2024-10-22 00:31:54,219:INFO:Model: Ada Boost Classifier
2024-10-22 00:31:54,263:INFO:Logged params: {'algorithm': 'SAMME.R', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2024-10-22 00:31:54,647:INFO:Creating Dashboard logs
2024-10-22 00:31:54,649:INFO:Model: Random Forest Classifier
2024-10-22 00:31:54,695:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-22 00:31:55,095:INFO:Creating Dashboard logs
2024-10-22 00:31:55,097:INFO:Model: Extra Trees Classifier
2024-10-22 00:31:55,143:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-22 00:31:55,668:INFO:Creating Dashboard logs
2024-10-22 00:31:55,670:INFO:Model: Logistic Regression
2024-10-22 00:31:55,745:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-10-22 00:31:56,442:INFO:Creating Dashboard logs
2024-10-22 00:31:56,446:INFO:Model: Linear Discriminant Analysis
2024-10-22 00:31:56,565:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2024-10-22 00:31:57,001:INFO:Creating Dashboard logs
2024-10-22 00:31:57,004:INFO:Model: Ridge Classifier
2024-10-22 00:31:57,134:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2024-10-22 00:31:57,650:INFO:Creating Dashboard logs
2024-10-22 00:31:57,654:INFO:Model: Decision Tree Classifier
2024-10-22 00:31:57,767:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 123, 'splitter': 'best'}
2024-10-22 00:31:58,330:INFO:Creating Dashboard logs
2024-10-22 00:31:58,332:INFO:Model: Naive Bayes
2024-10-22 00:31:58,400:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2024-10-22 00:31:58,957:INFO:Creating Dashboard logs
2024-10-22 00:31:58,962:INFO:Model: Dummy Classifier
2024-10-22 00:31:59,065:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2024-10-22 00:31:59,595:INFO:Creating Dashboard logs
2024-10-22 00:31:59,600:INFO:Model: K Neighbors Classifier
2024-10-22 00:31:59,732:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-10-22 00:32:00,316:INFO:Creating Dashboard logs
2024-10-22 00:32:00,324:INFO:Model: SVM - Linear Kernel
2024-10-22 00:32:00,406:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-22 00:32:00,883:INFO:Creating Dashboard logs
2024-10-22 00:32:00,884:INFO:Model: Quadratic Discriminant Analysis
2024-10-22 00:32:00,978:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2024-10-22 00:32:01,431:INFO:_master_model_container: 14
2024-10-22 00:32:01,431:INFO:_display_container: 2
2024-10-22 00:32:01,431:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-22 00:32:01,431:INFO:compare_models() successfully completed......................................
2024-10-22 00:32:01,469:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\mlflow\models\utils.py:523: FutureWarning: Since MLflow 2.16.0, we no longer convert dictionary input example to pandas Dataframe, and directly save it as a json object. If the model expects a pandas DataFrame input instead, please pass the pandas DataFrame as input example directly.
  example = _Example(input_example)

2024-10-22 00:32:01,530:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\mlflow\types\utils.py:407: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-10-22 00:59:23,464:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-22 00:59:23,464:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-22 00:59:23,464:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-22 00:59:23,464:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-22 00:59:26,541:INFO:PyCaret ClassificationExperiment
2024-10-22 00:59:26,541:INFO:Logging name: Bank_Churn
2024-10-22 00:59:26,541:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-22 00:59:26,541:INFO:version 3.3.2
2024-10-22 00:59:26,541:INFO:Initializing setup()
2024-10-22 00:59:26,541:INFO:self.USI: f301
2024-10-22 00:59:26,541:INFO:self._variable_keys: {'X_train', 'X', 'y_train', 'n_jobs_param', 'seed', 'logging_param', 'gpu_param', 'exp_name_log', 'log_plots_param', 'USI', 'fold_shuffle_param', 'memory', 'is_multiclass', 'idx', 'fold_groups_param', 'target_param', 'X_test', 'fix_imbalance', 'y', 'data', 'y_test', 'pipeline', '_ml_usecase', '_available_plots', 'fold_generator', 'gpu_n_jobs_param', 'html_param', 'exp_id'}
2024-10-22 00:59:26,541:INFO:Checking environment
2024-10-22 00:59:26,541:INFO:python_version: 3.11.1
2024-10-22 00:59:26,541:INFO:python_build: ('tags/v3.11.1:a7a450f', 'Dec  6 2022 19:58:39')
2024-10-22 00:59:26,542:INFO:machine: AMD64
2024-10-22 00:59:26,542:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-22 00:59:26,551:INFO:Memory: svmem(total=16984227840, available=6434721792, percent=62.1, used=10549506048, free=6434721792)
2024-10-22 00:59:26,552:INFO:Physical Core: 6
2024-10-22 00:59:26,552:INFO:Logical Core: 12
2024-10-22 00:59:26,552:INFO:Checking libraries
2024-10-22 00:59:26,552:INFO:System:
2024-10-22 00:59:26,552:INFO:    python: 3.11.1 (tags/v3.11.1:a7a450f, Dec  6 2022, 19:58:39) [MSC v.1934 64 bit (AMD64)]
2024-10-22 00:59:26,552:INFO:executable: e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Scripts\python.exe
2024-10-22 00:59:26,552:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-22 00:59:26,552:INFO:PyCaret required dependencies:
2024-10-22 00:59:26,638:INFO:                 pip: 22.3.1
2024-10-22 00:59:26,638:INFO:          setuptools: 65.5.0
2024-10-22 00:59:26,638:INFO:             pycaret: 3.3.2
2024-10-22 00:59:26,638:INFO:             IPython: 8.28.0
2024-10-22 00:59:26,638:INFO:          ipywidgets: 8.1.5
2024-10-22 00:59:26,639:INFO:                tqdm: 4.66.5
2024-10-22 00:59:26,639:INFO:               numpy: 1.26.4
2024-10-22 00:59:26,639:INFO:              pandas: 2.1.4
2024-10-22 00:59:26,639:INFO:              jinja2: 3.1.4
2024-10-22 00:59:26,639:INFO:               scipy: 1.11.4
2024-10-22 00:59:26,639:INFO:              joblib: 1.3.2
2024-10-22 00:59:26,639:INFO:             sklearn: 1.4.2
2024-10-22 00:59:26,639:INFO:                pyod: 2.0.2
2024-10-22 00:59:26,639:INFO:            imblearn: 0.12.4
2024-10-22 00:59:26,639:INFO:   category_encoders: 2.6.4
2024-10-22 00:59:26,639:INFO:            lightgbm: 4.5.0
2024-10-22 00:59:26,639:INFO:               numba: 0.60.0
2024-10-22 00:59:26,639:INFO:            requests: 2.32.3
2024-10-22 00:59:26,639:INFO:          matplotlib: 3.7.5
2024-10-22 00:59:26,640:INFO:          scikitplot: 0.3.7
2024-10-22 00:59:26,640:INFO:         yellowbrick: 1.5
2024-10-22 00:59:26,640:INFO:              plotly: 5.24.1
2024-10-22 00:59:26,640:INFO:    plotly-resampler: Not installed
2024-10-22 00:59:26,640:INFO:             kaleido: 0.2.1
2024-10-22 00:59:26,640:INFO:           schemdraw: 0.15
2024-10-22 00:59:26,640:INFO:         statsmodels: 0.14.4
2024-10-22 00:59:26,640:INFO:              sktime: 0.26.0
2024-10-22 00:59:26,640:INFO:               tbats: 1.1.3
2024-10-22 00:59:26,640:INFO:            pmdarima: 2.0.4
2024-10-22 00:59:26,640:INFO:              psutil: 6.1.0
2024-10-22 00:59:26,640:INFO:          markupsafe: 3.0.2
2024-10-22 00:59:26,640:INFO:             pickle5: Not installed
2024-10-22 00:59:26,640:INFO:         cloudpickle: 3.1.0
2024-10-22 00:59:26,641:INFO:         deprecation: 2.1.0
2024-10-22 00:59:26,641:INFO:              xxhash: 3.5.0
2024-10-22 00:59:26,641:INFO:           wurlitzer: Not installed
2024-10-22 00:59:26,641:INFO:PyCaret optional dependencies:
2024-10-22 00:59:27,451:INFO:                shap: Not installed
2024-10-22 00:59:27,451:INFO:           interpret: Not installed
2024-10-22 00:59:27,451:INFO:                umap: Not installed
2024-10-22 00:59:27,451:INFO:     ydata_profiling: Not installed
2024-10-22 00:59:27,451:INFO:  explainerdashboard: Not installed
2024-10-22 00:59:27,452:INFO:             autoviz: Not installed
2024-10-22 00:59:27,452:INFO:           fairlearn: Not installed
2024-10-22 00:59:27,452:INFO:          deepchecks: Not installed
2024-10-22 00:59:27,452:INFO:             xgboost: Not installed
2024-10-22 00:59:27,452:INFO:            catboost: Not installed
2024-10-22 00:59:27,452:INFO:              kmodes: Not installed
2024-10-22 00:59:27,452:INFO:             mlxtend: Not installed
2024-10-22 00:59:27,452:INFO:       statsforecast: Not installed
2024-10-22 00:59:27,452:INFO:        tune_sklearn: Not installed
2024-10-22 00:59:27,452:INFO:                 ray: Not installed
2024-10-22 00:59:27,452:INFO:            hyperopt: 0.2.7
2024-10-22 00:59:27,452:INFO:              optuna: 4.0.0
2024-10-22 00:59:27,452:INFO:               skopt: 0.10.2
2024-10-22 00:59:27,452:INFO:              mlflow: 2.17.0
2024-10-22 00:59:27,452:INFO:              gradio: Not installed
2024-10-22 00:59:27,452:INFO:             fastapi: 0.115.2
2024-10-22 00:59:27,452:INFO:             uvicorn: 0.32.0
2024-10-22 00:59:27,452:INFO:              m2cgen: Not installed
2024-10-22 00:59:27,452:INFO:           evidently: Not installed
2024-10-22 00:59:27,452:INFO:               fugue: Not installed
2024-10-22 00:59:27,452:INFO:           streamlit: Not installed
2024-10-22 00:59:27,452:INFO:             prophet: Not installed
2024-10-22 00:59:27,453:INFO:None
2024-10-22 00:59:27,453:INFO:Set up data.
2024-10-22 00:59:27,535:INFO:Set up folding strategy.
2024-10-22 00:59:27,535:INFO:Set up train/test split.
2024-10-22 00:59:27,613:INFO:Set up index.
2024-10-22 00:59:27,619:INFO:Assigning column types.
2024-10-22 00:59:27,650:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-22 00:59:27,688:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-22 00:59:27,715:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 00:59:27,859:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:59:27,859:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:59:27,886:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-22 00:59:27,886:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 00:59:27,904:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:59:27,904:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:59:27,904:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-22 00:59:27,935:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 00:59:27,949:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:59:27,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:59:27,978:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 00:59:27,996:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:59:27,996:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:59:27,997:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-22 00:59:28,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:59:28,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:59:28,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:59:28,156:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:59:28,168:INFO:Preparing preprocessing pipeline...
2024-10-22 00:59:28,173:INFO:Set up simple imputation.
2024-10-22 00:59:28,186:INFO:Set up encoding of ordinal features.
2024-10-22 00:59:28,193:INFO:Set up encoding of categorical features.
2024-10-22 00:59:28,465:INFO:Finished creating preprocessing pipeline.
2024-10-22 00:59:28,530:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-22 00:59:28,531:INFO:Creating final display dataframe.
2024-10-22 00:59:28,697:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target           Exited
2                   Target type           Binary
3           Original data shape     (165034, 14)
4        Transformed data shape     (165034, 13)
5   Transformed train set shape     (115523, 13)
6    Transformed test set shape      (49511, 13)
7               Ignore features                3
8              Numeric features                8
9          Categorical features                2
10                   Preprocess             True
11              Imputation type           simple
12           Numeric imputation             mean
13       Categorical imputation             mode
14     Maximum one-hot encoding               25
15              Encoding method             None
16               Fold Generator  StratifiedKFold
17                  Fold Number               10
18                     CPU Jobs               -1
19                      Use GPU            False
20               Log Experiment     MlflowLogger
21              Experiment Name       Bank_Churn
22                          USI             f301
2024-10-22 00:59:28,748:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:59:28,749:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:59:28,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:59:28,805:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 00:59:28,806:INFO:Logging experiment in loggers
2024-10-22 00:59:29,579:INFO:SubProcess save_model() called ==================================
2024-10-22 00:59:29,598:INFO:Initializing save_model()
2024-10-22 00:59:29,598:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), model_name=C:\Users\User\AppData\Local\Temp\tmpxnuxflhy\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-10-22 00:59:29,598:INFO:Adding model into prep_pipe
2024-10-22 00:59:29,598:WARNING:Only Model saved as it was a pipeline.
2024-10-22 00:59:29,601:INFO:C:\Users\User\AppData\Local\Temp\tmpxnuxflhy\Transformation Pipeline.pkl saved in current working directory
2024-10-22 00:59:29,609:INFO:Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-22 00:59:29,609:INFO:save_model() successfully completed......................................
2024-10-22 00:59:29,676:INFO:SubProcess save_model() end ==================================
2024-10-22 00:59:29,687:INFO:setup() successfully completed in 2.27s...............
2024-10-22 01:02:05,205:INFO:PyCaret ClassificationExperiment
2024-10-22 01:02:05,205:INFO:Logging name: Bank_Churn
2024-10-22 01:02:05,205:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-22 01:02:05,205:INFO:version 3.3.2
2024-10-22 01:02:05,207:INFO:Initializing setup()
2024-10-22 01:02:05,207:INFO:self.USI: 9c75
2024-10-22 01:02:05,207:INFO:self._variable_keys: {'X_train', 'X', 'y_train', 'n_jobs_param', 'seed', 'logging_param', 'gpu_param', 'exp_name_log', 'log_plots_param', 'USI', 'fold_shuffle_param', 'memory', 'is_multiclass', 'idx', 'fold_groups_param', 'target_param', 'X_test', 'fix_imbalance', 'y', 'data', 'y_test', 'pipeline', '_ml_usecase', '_available_plots', 'fold_generator', 'gpu_n_jobs_param', 'html_param', 'exp_id'}
2024-10-22 01:02:05,207:INFO:Checking environment
2024-10-22 01:02:05,207:INFO:python_version: 3.11.1
2024-10-22 01:02:05,207:INFO:python_build: ('tags/v3.11.1:a7a450f', 'Dec  6 2022 19:58:39')
2024-10-22 01:02:05,207:INFO:machine: AMD64
2024-10-22 01:02:05,207:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-22 01:02:05,216:INFO:Memory: svmem(total=16984227840, available=6555680768, percent=61.4, used=10428547072, free=6555680768)
2024-10-22 01:02:05,216:INFO:Physical Core: 6
2024-10-22 01:02:05,216:INFO:Logical Core: 12
2024-10-22 01:02:05,216:INFO:Checking libraries
2024-10-22 01:02:05,216:INFO:System:
2024-10-22 01:02:05,216:INFO:    python: 3.11.1 (tags/v3.11.1:a7a450f, Dec  6 2022, 19:58:39) [MSC v.1934 64 bit (AMD64)]
2024-10-22 01:02:05,216:INFO:executable: e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Scripts\python.exe
2024-10-22 01:02:05,217:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-22 01:02:05,217:INFO:PyCaret required dependencies:
2024-10-22 01:02:05,217:INFO:                 pip: 22.3.1
2024-10-22 01:02:05,217:INFO:          setuptools: 65.5.0
2024-10-22 01:02:05,217:INFO:             pycaret: 3.3.2
2024-10-22 01:02:05,217:INFO:             IPython: 8.28.0
2024-10-22 01:02:05,217:INFO:          ipywidgets: 8.1.5
2024-10-22 01:02:05,217:INFO:                tqdm: 4.66.5
2024-10-22 01:02:05,217:INFO:               numpy: 1.26.4
2024-10-22 01:02:05,217:INFO:              pandas: 2.1.4
2024-10-22 01:02:05,217:INFO:              jinja2: 3.1.4
2024-10-22 01:02:05,217:INFO:               scipy: 1.11.4
2024-10-22 01:02:05,217:INFO:              joblib: 1.3.2
2024-10-22 01:02:05,217:INFO:             sklearn: 1.4.2
2024-10-22 01:02:05,217:INFO:                pyod: 2.0.2
2024-10-22 01:02:05,217:INFO:            imblearn: 0.12.4
2024-10-22 01:02:05,217:INFO:   category_encoders: 2.6.4
2024-10-22 01:02:05,217:INFO:            lightgbm: 4.5.0
2024-10-22 01:02:05,218:INFO:               numba: 0.60.0
2024-10-22 01:02:05,218:INFO:            requests: 2.32.3
2024-10-22 01:02:05,218:INFO:          matplotlib: 3.7.5
2024-10-22 01:02:05,218:INFO:          scikitplot: 0.3.7
2024-10-22 01:02:05,218:INFO:         yellowbrick: 1.5
2024-10-22 01:02:05,218:INFO:              plotly: 5.24.1
2024-10-22 01:02:05,218:INFO:    plotly-resampler: Not installed
2024-10-22 01:02:05,218:INFO:             kaleido: 0.2.1
2024-10-22 01:02:05,218:INFO:           schemdraw: 0.15
2024-10-22 01:02:05,218:INFO:         statsmodels: 0.14.4
2024-10-22 01:02:05,218:INFO:              sktime: 0.26.0
2024-10-22 01:02:05,218:INFO:               tbats: 1.1.3
2024-10-22 01:02:05,218:INFO:            pmdarima: 2.0.4
2024-10-22 01:02:05,218:INFO:              psutil: 6.1.0
2024-10-22 01:02:05,218:INFO:          markupsafe: 3.0.2
2024-10-22 01:02:05,218:INFO:             pickle5: Not installed
2024-10-22 01:02:05,218:INFO:         cloudpickle: 3.1.0
2024-10-22 01:02:05,218:INFO:         deprecation: 2.1.0
2024-10-22 01:02:05,218:INFO:              xxhash: 3.5.0
2024-10-22 01:02:05,218:INFO:           wurlitzer: Not installed
2024-10-22 01:02:05,218:INFO:PyCaret optional dependencies:
2024-10-22 01:02:05,218:INFO:                shap: Not installed
2024-10-22 01:02:05,218:INFO:           interpret: Not installed
2024-10-22 01:02:05,218:INFO:                umap: Not installed
2024-10-22 01:02:05,218:INFO:     ydata_profiling: Not installed
2024-10-22 01:02:05,218:INFO:  explainerdashboard: Not installed
2024-10-22 01:02:05,218:INFO:             autoviz: Not installed
2024-10-22 01:02:05,218:INFO:           fairlearn: Not installed
2024-10-22 01:02:05,218:INFO:          deepchecks: Not installed
2024-10-22 01:02:05,219:INFO:             xgboost: Not installed
2024-10-22 01:02:05,219:INFO:            catboost: Not installed
2024-10-22 01:02:05,219:INFO:              kmodes: Not installed
2024-10-22 01:02:05,219:INFO:             mlxtend: Not installed
2024-10-22 01:02:05,219:INFO:       statsforecast: Not installed
2024-10-22 01:02:05,219:INFO:        tune_sklearn: Not installed
2024-10-22 01:02:05,219:INFO:                 ray: Not installed
2024-10-22 01:02:05,219:INFO:            hyperopt: 0.2.7
2024-10-22 01:02:05,219:INFO:              optuna: 4.0.0
2024-10-22 01:02:05,219:INFO:               skopt: 0.10.2
2024-10-22 01:02:05,219:INFO:              mlflow: 2.17.0
2024-10-22 01:02:05,219:INFO:              gradio: Not installed
2024-10-22 01:02:05,219:INFO:             fastapi: 0.115.2
2024-10-22 01:02:05,219:INFO:             uvicorn: 0.32.0
2024-10-22 01:02:05,219:INFO:              m2cgen: Not installed
2024-10-22 01:02:05,219:INFO:           evidently: Not installed
2024-10-22 01:02:05,219:INFO:               fugue: Not installed
2024-10-22 01:02:05,219:INFO:           streamlit: Not installed
2024-10-22 01:02:05,219:INFO:             prophet: Not installed
2024-10-22 01:02:05,219:INFO:None
2024-10-22 01:02:05,219:INFO:Set up data.
2024-10-22 01:02:05,320:INFO:Set up folding strategy.
2024-10-22 01:02:05,320:INFO:Set up train/test split.
2024-10-22 01:02:05,376:INFO:Set up index.
2024-10-22 01:02:05,380:INFO:Assigning column types.
2024-10-22 01:02:05,399:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-22 01:02:05,424:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-22 01:02:05,424:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 01:02:05,438:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 01:02:05,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 01:02:05,468:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-22 01:02:05,470:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 01:02:05,485:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 01:02:05,485:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 01:02:05,485:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-22 01:02:05,513:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 01:02:05,528:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 01:02:05,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 01:02:05,564:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-22 01:02:05,579:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 01:02:05,579:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 01:02:05,579:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-22 01:02:05,644:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 01:02:05,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 01:02:05,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 01:02:05,695:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 01:02:05,697:INFO:Preparing preprocessing pipeline...
2024-10-22 01:02:05,704:INFO:Set up simple imputation.
2024-10-22 01:02:05,724:INFO:Set up encoding of ordinal features.
2024-10-22 01:02:05,733:INFO:Set up encoding of categorical features.
2024-10-22 01:02:05,996:INFO:Finished creating preprocessing pipeline.
2024-10-22 01:02:06,004:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-22 01:02:06,004:INFO:Creating final display dataframe.
2024-10-22 01:02:06,152:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target           Exited
2                   Target type           Binary
3           Original data shape     (165034, 14)
4        Transformed data shape     (165034, 13)
5   Transformed train set shape     (115523, 13)
6    Transformed test set shape      (49511, 13)
7               Ignore features                3
8              Numeric features                8
9          Categorical features                2
10                   Preprocess             True
11              Imputation type           simple
12           Numeric imputation             mean
13       Categorical imputation             mode
14     Maximum one-hot encoding               25
15              Encoding method             None
16               Fold Generator  StratifiedKFold
17                  Fold Number               10
18                     CPU Jobs               -1
19                      Use GPU            False
20               Log Experiment     MlflowLogger
21              Experiment Name       Bank_Churn
22                          USI             9c75
2024-10-22 01:02:06,229:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 01:02:06,229:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 01:02:06,332:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 01:02:06,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-22 01:02:06,335:INFO:Logging experiment in loggers
2024-10-22 01:02:06,469:INFO:SubProcess save_model() called ==================================
2024-10-22 01:02:06,487:INFO:Initializing save_model()
2024-10-22 01:02:06,487:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), model_name=C:\Users\User\AppData\Local\Temp\tmpst5yfa7d\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-10-22 01:02:06,487:INFO:Adding model into prep_pipe
2024-10-22 01:02:06,487:WARNING:Only Model saved as it was a pipeline.
2024-10-22 01:02:06,490:INFO:C:\Users\User\AppData\Local\Temp\tmpst5yfa7d\Transformation Pipeline.pkl saved in current working directory
2024-10-22 01:02:06,498:INFO:Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2024-10-22 01:02:06,498:INFO:save_model() successfully completed......................................
2024-10-22 01:02:06,572:INFO:SubProcess save_model() end ==================================
2024-10-22 01:02:06,585:INFO:setup() successfully completed in 1.14s...............
2024-10-22 01:02:30,432:INFO:Initializing create_model()
2024-10-22 01:02:30,432:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 01:02:30,432:INFO:Checking exceptions
2024-10-22 01:02:30,472:INFO:Importing libraries
2024-10-22 01:02:30,473:INFO:Copying training dataset
2024-10-22 01:02:30,543:INFO:Defining folds
2024-10-22 01:02:30,543:INFO:Declaring metric variables
2024-10-22 01:02:30,545:INFO:Importing untrained model
2024-10-22 01:02:30,548:INFO:Random Forest Classifier Imported successfully
2024-10-22 01:02:30,553:INFO:Starting cross validation
2024-10-22 01:02:30,554:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 01:02:55,078:INFO:Calculating mean and std
2024-10-22 01:02:55,081:INFO:Creating metrics dataframe
2024-10-22 01:02:55,091:INFO:Finalizing model
2024-10-22 01:02:57,820:INFO:Creating Dashboard logs
2024-10-22 01:02:57,823:INFO:Model: Random Forest Classifier
2024-10-22 01:02:57,877:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-22 01:02:57,989:INFO:Initializing predict_model()
2024-10-22 01:02:57,989:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016BC12CA520>)
2024-10-22 01:02:57,989:INFO:Checking exceptions
2024-10-22 01:02:57,989:INFO:Preloading libraries
2024-10-22 01:03:01,301:INFO:Uploading results into container
2024-10-22 01:03:01,301:INFO:Uploading model into container now
2024-10-22 01:03:01,308:INFO:_master_model_container: 1
2024-10-22 01:03:01,308:INFO:_display_container: 2
2024-10-22 01:03:01,308:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-22 01:03:01,308:INFO:create_model() successfully completed......................................
2024-10-22 01:07:23,208:INFO:Initializing tune_model()
2024-10-22 01:07:23,208:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid={'n_estimators': [100], 'max_depth': [10, 20], 'min_samples_split': [2]}, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-10-22 01:07:23,209:INFO:Checking exceptions
2024-10-22 01:07:23,260:INFO:Copying training dataset
2024-10-22 01:07:23,296:INFO:Checking base model
2024-10-22 01:07:23,296:INFO:Base model : Random Forest Classifier
2024-10-22 01:07:23,299:INFO:Declaring metric variables
2024-10-22 01:07:23,303:INFO:Defining Hyperparameters
2024-10-22 01:07:23,397:INFO:custom_grid: {'actual_estimator__n_estimators': [100], 'actual_estimator__max_depth': [10, 20], 'actual_estimator__min_samples_split': [2]}
2024-10-22 01:07:23,397:INFO:Tuning with n_jobs=-1
2024-10-22 01:07:23,397:INFO:Initializing GridSearchCV
2024-10-22 01:07:54,956:INFO:best_params: {'actual_estimator__max_depth': 10, 'actual_estimator__min_samples_split': 2, 'actual_estimator__n_estimators': 100}
2024-10-22 01:07:54,958:INFO:Hyperparameter search completed
2024-10-22 01:07:54,958:INFO:SubProcess create_model() called ==================================
2024-10-22 01:07:54,959:INFO:Initializing create_model()
2024-10-22 01:07:54,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016BBFB87910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'max_depth': 10, 'min_samples_split': 2, 'n_estimators': 100})
2024-10-22 01:07:54,960:INFO:Checking exceptions
2024-10-22 01:07:54,960:INFO:Importing libraries
2024-10-22 01:07:54,960:INFO:Copying training dataset
2024-10-22 01:07:55,003:INFO:Defining folds
2024-10-22 01:07:55,003:INFO:Declaring metric variables
2024-10-22 01:07:55,006:INFO:Importing untrained model
2024-10-22 01:07:55,007:INFO:Declaring custom model
2024-10-22 01:07:55,012:INFO:Random Forest Classifier Imported successfully
2024-10-22 01:07:55,016:INFO:Starting cross validation
2024-10-22 01:07:55,017:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 01:08:08,605:INFO:Calculating mean and std
2024-10-22 01:08:08,606:INFO:Creating metrics dataframe
2024-10-22 01:08:08,612:INFO:Finalizing model
2024-10-22 01:08:10,300:INFO:Uploading results into container
2024-10-22 01:08:10,300:INFO:Uploading model into container now
2024-10-22 01:08:10,301:INFO:_master_model_container: 2
2024-10-22 01:08:10,301:INFO:_display_container: 3
2024-10-22 01:08:10,301:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-22 01:08:10,301:INFO:create_model() successfully completed......................................
2024-10-22 01:08:10,376:INFO:SubProcess create_model() end ==================================
2024-10-22 01:08:10,377:INFO:choose_better activated
2024-10-22 01:08:10,378:INFO:SubProcess create_model() called ==================================
2024-10-22 01:08:10,379:INFO:Initializing create_model()
2024-10-22 01:08:10,379:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 01:08:10,379:INFO:Checking exceptions
2024-10-22 01:08:10,380:INFO:Importing libraries
2024-10-22 01:08:10,380:INFO:Copying training dataset
2024-10-22 01:08:10,405:INFO:Defining folds
2024-10-22 01:08:10,405:INFO:Declaring metric variables
2024-10-22 01:08:10,405:INFO:Importing untrained model
2024-10-22 01:08:10,405:INFO:Declaring custom model
2024-10-22 01:08:10,406:INFO:Random Forest Classifier Imported successfully
2024-10-22 01:08:10,406:INFO:Starting cross validation
2024-10-22 01:08:10,407:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-22 01:08:31,769:INFO:Calculating mean and std
2024-10-22 01:08:31,769:INFO:Creating metrics dataframe
2024-10-22 01:08:31,771:INFO:Finalizing model
2024-10-22 01:08:34,370:INFO:Uploading results into container
2024-10-22 01:08:34,370:INFO:Uploading model into container now
2024-10-22 01:08:34,370:INFO:_master_model_container: 3
2024-10-22 01:08:34,370:INFO:_display_container: 4
2024-10-22 01:08:34,371:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-22 01:08:34,371:INFO:create_model() successfully completed......................................
2024-10-22 01:08:34,462:INFO:SubProcess create_model() end ==================================
2024-10-22 01:08:34,462:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.8585
2024-10-22 01:08:34,463:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.8645
2024-10-22 01:08:34,463:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2024-10-22 01:08:34,463:INFO:choose_better completed
2024-10-22 01:08:34,463:INFO:Creating Dashboard logs
2024-10-22 01:08:34,465:INFO:Model: Random Forest Classifier
2024-10-22 01:08:34,509:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': 10, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-22 01:08:34,617:INFO:Initializing predict_model()
2024-10-22 01:08:34,617:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016BC14EA0C0>)
2024-10-22 01:08:34,617:INFO:Checking exceptions
2024-10-22 01:08:34,617:INFO:Preloading libraries
2024-10-22 01:08:35,177:INFO:_master_model_container: 3
2024-10-22 01:08:35,177:INFO:_display_container: 3
2024-10-22 01:08:35,177:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-22 01:08:35,177:INFO:tune_model() successfully completed......................................
2024-10-22 01:24:31,063:INFO:Initializing plot_model()
2024-10-22 01:24:31,063:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-10-22 01:24:31,063:INFO:Checking exceptions
2024-10-22 01:24:31,146:INFO:Preloading libraries
2024-10-22 01:24:31,168:INFO:Copying training dataset
2024-10-22 01:24:31,168:INFO:Plot type: confusion_matrix
2024-10-22 01:24:31,309:INFO:Fitting Model
2024-10-22 01:24:31,322:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-10-22 01:24:31,323:INFO:Scoring test/hold-out set
2024-10-22 01:24:31,862:INFO:Visual Rendered Successfully
2024-10-22 01:24:31,948:INFO:plot_model() successfully completed......................................
2024-10-22 01:25:06,677:INFO:Initializing evaluate_model()
2024-10-22 01:25:06,678:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-10-22 01:25:06,714:INFO:Initializing plot_model()
2024-10-22 01:25:06,714:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-22 01:25:06,714:INFO:Checking exceptions
2024-10-22 01:25:06,762:INFO:Preloading libraries
2024-10-22 01:25:06,773:INFO:Copying training dataset
2024-10-22 01:25:06,773:INFO:Plot type: pipeline
2024-10-22 01:25:07,221:INFO:Visual Rendered Successfully
2024-10-22 01:25:07,332:INFO:plot_model() successfully completed......................................
2024-10-22 01:27:21,461:INFO:Initializing plot_model()
2024-10-22 01:27:21,461:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=dimension, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-22 01:27:21,462:INFO:Checking exceptions
2024-10-22 01:27:21,544:INFO:Preloading libraries
2024-10-22 01:27:21,554:INFO:Copying training dataset
2024-10-22 01:27:21,554:INFO:Plot type: dimension
2024-10-22 01:27:21,864:INFO:Fitting StandardScaler()
2024-10-22 01:27:21,962:INFO:Fitting PCA()
2024-10-22 01:27:22,508:INFO:Fitting & Transforming Model
2024-10-22 01:27:24,174:INFO:Visual Rendered Successfully
2024-10-22 01:27:24,262:INFO:plot_model() successfully completed......................................
2024-10-22 01:27:28,139:INFO:Initializing plot_model()
2024-10-22 01:27:28,139:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=vc, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-22 01:27:28,139:INFO:Checking exceptions
2024-10-22 01:27:28,194:INFO:Preloading libraries
2024-10-22 01:27:28,206:INFO:Copying training dataset
2024-10-22 01:27:28,206:INFO:Plot type: vc
2024-10-22 01:27:28,206:INFO:Determining param_name
2024-10-22 01:27:28,206:INFO:param_name: max_depth
2024-10-22 01:27:28,364:INFO:Fitting Model
2024-10-22 01:29:00,409:INFO:Visual Rendered Successfully
2024-10-22 01:29:00,518:INFO:plot_model() successfully completed......................................
2024-10-22 01:39:25,693:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\mlflow\models\utils.py:523: FutureWarning: Since MLflow 2.16.0, we no longer convert dictionary input example to pandas Dataframe, and directly save it as a json object. If the model expects a pandas DataFrame input instead, please pass the pandas DataFrame as input example directly.
  example = _Example(input_example)

2024-10-22 01:39:25,725:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\mlflow\types\utils.py:407: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-10-22 01:39:30,138:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-10-22 01:50:20,262:INFO:Initializing plot_model()
2024-10-22 01:50:20,264:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=feature, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-22 01:50:20,264:INFO:Checking exceptions
2024-10-22 01:50:20,349:INFO:Preloading libraries
2024-10-22 01:50:20,360:INFO:Copying training dataset
2024-10-22 01:50:20,360:INFO:Plot type: feature
2024-10-22 01:50:20,360:WARNING:No coef_ found. Trying feature_importances_
2024-10-22 01:50:20,514:INFO:Visual Rendered Successfully
2024-10-22 01:50:20,664:INFO:plot_model() successfully completed......................................
2024-10-22 01:52:42,480:INFO:Initializing plot_model()
2024-10-22 01:52:42,480:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=dimension, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-22 01:52:42,480:INFO:Checking exceptions
2024-10-22 01:52:42,551:INFO:Preloading libraries
2024-10-22 01:52:42,561:INFO:Copying training dataset
2024-10-22 01:52:42,561:INFO:Plot type: dimension
2024-10-22 01:52:42,607:INFO:Fitting StandardScaler()
2024-10-22 01:52:42,661:INFO:Fitting PCA()
2024-10-22 01:52:42,946:INFO:Fitting & Transforming Model
2024-10-22 01:52:44,735:INFO:Visual Rendered Successfully
2024-10-22 01:52:44,839:INFO:plot_model() successfully completed......................................
2024-10-22 01:53:00,573:INFO:Initializing plot_model()
2024-10-22 01:53:00,573:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=pr, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-10-22 01:53:00,573:INFO:Checking exceptions
2024-10-22 01:53:00,658:INFO:Preloading libraries
2024-10-22 01:53:00,667:INFO:Copying training dataset
2024-10-22 01:53:00,668:INFO:Plot type: pr
2024-10-22 01:53:00,839:INFO:Fitting Model
2024-10-22 01:53:00,841:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-10-22 01:53:00,842:INFO:Scoring test/hold-out set
2024-10-22 01:53:01,159:INFO:Visual Rendered Successfully
2024-10-22 01:53:01,267:INFO:plot_model() successfully completed......................................
2024-10-22 02:07:59,589:INFO:Initializing get_config()
2024-10-22 02:07:59,589:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, variable=X)
2024-10-22 02:07:59,614:INFO:Variable:  returned as         CreditScore Geography  Gender   Age  Tenure        Balance  \
73567           683    France    Male  32.0       4  135919.328125   
84962           746     Spain    Male  31.0       6       0.000000   
134645          624    France    Male  26.0       9   74681.898438   
103513          631    France    Male  36.0       9   99685.062500   
164462          635    France    Male  29.0       4       0.000000   
...             ...       ...     ...   ...     ...            ...   
81431           725   Germany    Male  37.0       6  103499.093750   
8782            641     Spain  Female  49.0       1  110132.546875   
124678          698   Germany  Female  54.0       3  141581.703125   
53741           630    France    Male  50.0       4       0.000000   
117744          535    France    Male  39.0       7       0.000000   

        NumOfProducts  HasCrCard  IsActiveMember  EstimatedSalary  
73567               2        1.0             1.0    152876.656250  
84962               1        0.0             1.0     63889.101562  
134645              2        1.0             0.0     31231.349609  
103513              1        0.0             0.0    114474.976562  
164462              2        1.0             0.0    137985.687500  
...               ...        ...             ...              ...  
81431               2        1.0             0.0    176924.203125  
8782                1        1.0             0.0    187689.906250  
124678              1        1.0             0.0    114566.468750  
53741               2        0.0             0.0     79377.453125  
117744              1        1.0             0.0     92887.062500  

[165034 rows x 10 columns]
2024-10-22 02:07:59,614:INFO:get_config() successfully completed......................................
2024-10-22 02:08:23,788:INFO:Initializing get_config()
2024-10-22 02:08:23,788:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, variable=X)
2024-10-22 02:08:23,818:INFO:Variable:  returned as         CreditScore Geography  Gender   Age  Tenure        Balance  \
73567           683    France    Male  32.0       4  135919.328125   
84962           746     Spain    Male  31.0       6       0.000000   
134645          624    France    Male  26.0       9   74681.898438   
103513          631    France    Male  36.0       9   99685.062500   
164462          635    France    Male  29.0       4       0.000000   
...             ...       ...     ...   ...     ...            ...   
81431           725   Germany    Male  37.0       6  103499.093750   
8782            641     Spain  Female  49.0       1  110132.546875   
124678          698   Germany  Female  54.0       3  141581.703125   
53741           630    France    Male  50.0       4       0.000000   
117744          535    France    Male  39.0       7       0.000000   

        NumOfProducts  HasCrCard  IsActiveMember  EstimatedSalary  
73567               2        1.0             1.0    152876.656250  
84962               1        0.0             1.0     63889.101562  
134645              2        1.0             0.0     31231.349609  
103513              1        0.0             0.0    114474.976562  
164462              2        1.0             0.0    137985.687500  
...               ...        ...             ...              ...  
81431               2        1.0             0.0    176924.203125  
8782                1        1.0             0.0    187689.906250  
124678              1        1.0             0.0    114566.468750  
53741               2        0.0             0.0     79377.453125  
117744              1        1.0             0.0     92887.062500  

[165034 rows x 10 columns]
2024-10-22 02:08:23,818:INFO:get_config() successfully completed......................................
2024-10-22 02:08:25,470:INFO:Initializing get_config()
2024-10-22 02:08:25,470:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, variable=X)
2024-10-22 02:08:25,504:INFO:Variable:  returned as         CreditScore Geography  Gender   Age  Tenure        Balance  \
73567           683    France    Male  32.0       4  135919.328125   
84962           746     Spain    Male  31.0       6       0.000000   
134645          624    France    Male  26.0       9   74681.898438   
103513          631    France    Male  36.0       9   99685.062500   
164462          635    France    Male  29.0       4       0.000000   
...             ...       ...     ...   ...     ...            ...   
81431           725   Germany    Male  37.0       6  103499.093750   
8782            641     Spain  Female  49.0       1  110132.546875   
124678          698   Germany  Female  54.0       3  141581.703125   
53741           630    France    Male  50.0       4       0.000000   
117744          535    France    Male  39.0       7       0.000000   

        NumOfProducts  HasCrCard  IsActiveMember  EstimatedSalary  
73567               2        1.0             1.0    152876.656250  
84962               1        0.0             1.0     63889.101562  
134645              2        1.0             0.0     31231.349609  
103513              1        0.0             0.0    114474.976562  
164462              2        1.0             0.0    137985.687500  
...               ...        ...             ...              ...  
81431               2        1.0             0.0    176924.203125  
8782                1        1.0             0.0    187689.906250  
124678              1        1.0             0.0    114566.468750  
53741               2        0.0             0.0     79377.453125  
117744              1        1.0             0.0     92887.062500  

[165034 rows x 10 columns]
2024-10-22 02:08:25,504:INFO:get_config() successfully completed......................................
2024-10-22 02:09:14,743:INFO:Initializing get_config()
2024-10-22 02:09:14,743:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, variable=X)
2024-10-22 02:09:14,763:INFO:Variable:  returned as         CreditScore Geography  Gender   Age  Tenure        Balance  \
73567           683    France    Male  32.0       4  135919.328125   
84962           746     Spain    Male  31.0       6       0.000000   
134645          624    France    Male  26.0       9   74681.898438   
103513          631    France    Male  36.0       9   99685.062500   
164462          635    France    Male  29.0       4       0.000000   
...             ...       ...     ...   ...     ...            ...   
81431           725   Germany    Male  37.0       6  103499.093750   
8782            641     Spain  Female  49.0       1  110132.546875   
124678          698   Germany  Female  54.0       3  141581.703125   
53741           630    France    Male  50.0       4       0.000000   
117744          535    France    Male  39.0       7       0.000000   

        NumOfProducts  HasCrCard  IsActiveMember  EstimatedSalary  
73567               2        1.0             1.0    152876.656250  
84962               1        0.0             1.0     63889.101562  
134645              2        1.0             0.0     31231.349609  
103513              1        0.0             0.0    114474.976562  
164462              2        1.0             0.0    137985.687500  
...               ...        ...             ...              ...  
81431               2        1.0             0.0    176924.203125  
8782                1        1.0             0.0    187689.906250  
124678              1        1.0             0.0    114566.468750  
53741               2        0.0             0.0     79377.453125  
117744              1        1.0             0.0     92887.062500  

[165034 rows x 10 columns]
2024-10-22 02:09:14,764:INFO:get_config() successfully completed......................................
2024-10-22 02:09:49,650:INFO:Initializing get_config()
2024-10-22 02:09:49,650:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, variable=X)
2024-10-22 02:09:49,667:INFO:Variable:  returned as         CreditScore Geography  Gender   Age  Tenure        Balance  \
73567           683    France    Male  32.0       4  135919.328125   
84962           746     Spain    Male  31.0       6       0.000000   
134645          624    France    Male  26.0       9   74681.898438   
103513          631    France    Male  36.0       9   99685.062500   
164462          635    France    Male  29.0       4       0.000000   
...             ...       ...     ...   ...     ...            ...   
81431           725   Germany    Male  37.0       6  103499.093750   
8782            641     Spain  Female  49.0       1  110132.546875   
124678          698   Germany  Female  54.0       3  141581.703125   
53741           630    France    Male  50.0       4       0.000000   
117744          535    France    Male  39.0       7       0.000000   

        NumOfProducts  HasCrCard  IsActiveMember  EstimatedSalary  
73567               2        1.0             1.0    152876.656250  
84962               1        0.0             1.0     63889.101562  
134645              2        1.0             0.0     31231.349609  
103513              1        0.0             0.0    114474.976562  
164462              2        1.0             0.0    137985.687500  
...               ...        ...             ...              ...  
81431               2        1.0             0.0    176924.203125  
8782                1        1.0             0.0    187689.906250  
124678              1        1.0             0.0    114566.468750  
53741               2        0.0             0.0     79377.453125  
117744              1        1.0             0.0     92887.062500  

[165034 rows x 10 columns]
2024-10-22 02:09:49,667:INFO:get_config() successfully completed......................................
2024-10-22 02:10:29,576:INFO:Initializing get_config()
2024-10-22 02:10:29,576:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, variable=X)
2024-10-22 02:10:29,586:INFO:Variable:  returned as         CreditScore Geography  Gender   Age  Tenure        Balance  \
73567           683    France    Male  32.0       4  135919.328125   
84962           746     Spain    Male  31.0       6       0.000000   
134645          624    France    Male  26.0       9   74681.898438   
103513          631    France    Male  36.0       9   99685.062500   
164462          635    France    Male  29.0       4       0.000000   
...             ...       ...     ...   ...     ...            ...   
81431           725   Germany    Male  37.0       6  103499.093750   
8782            641     Spain  Female  49.0       1  110132.546875   
124678          698   Germany  Female  54.0       3  141581.703125   
53741           630    France    Male  50.0       4       0.000000   
117744          535    France    Male  39.0       7       0.000000   

        NumOfProducts  HasCrCard  IsActiveMember  EstimatedSalary  
73567               2        1.0             1.0    152876.656250  
84962               1        0.0             1.0     63889.101562  
134645              2        1.0             0.0     31231.349609  
103513              1        0.0             0.0    114474.976562  
164462              2        1.0             0.0    137985.687500  
...               ...        ...             ...              ...  
81431               2        1.0             0.0    176924.203125  
8782                1        1.0             0.0    187689.906250  
124678              1        1.0             0.0    114566.468750  
53741               2        0.0             0.0     79377.453125  
117744              1        1.0             0.0     92887.062500  

[165034 rows x 10 columns]
2024-10-22 02:10:29,586:INFO:get_config() successfully completed......................................
2024-10-22 02:12:55,099:INFO:Initializing finalize_model()
2024-10-22 02:12:55,100:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-10-22 02:12:55,100:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-10-22 02:12:55,116:INFO:Initializing create_model()
2024-10-22 02:12:55,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-10-22 02:12:55,116:INFO:Checking exceptions
2024-10-22 02:12:55,117:INFO:Importing libraries
2024-10-22 02:12:55,117:INFO:Copying training dataset
2024-10-22 02:12:55,119:INFO:Defining folds
2024-10-22 02:12:55,119:INFO:Declaring metric variables
2024-10-22 02:12:55,120:INFO:Importing untrained model
2024-10-22 02:12:55,120:INFO:Declaring custom model
2024-10-22 02:12:55,120:INFO:Random Forest Classifier Imported successfully
2024-10-22 02:12:55,121:INFO:Cross validation set to False
2024-10-22 02:12:55,121:INFO:Fitting Model
2024-10-22 02:12:57,529:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-10-22 02:12:57,529:INFO:create_model() successfully completed......................................
2024-10-22 02:12:57,668:INFO:Creating Dashboard logs
2024-10-22 02:12:57,669:INFO:Model: Random Forest Classifier
2024-10-22 02:12:57,708:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': 10, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-22 02:12:58,043:INFO:_master_model_container: 3
2024-10-22 02:12:58,043:INFO:_display_container: 3
2024-10-22 02:12:58,072:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-10-22 02:12:58,074:INFO:finalize_model() successfully completed......................................
2024-10-22 02:13:26,256:INFO:Initializing predict_model()
2024-10-22 02:13:26,257:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016BF56E9260>)
2024-10-22 02:13:26,257:INFO:Checking exceptions
2024-10-22 02:13:26,257:INFO:Preloading libraries
2024-10-22 02:13:26,261:INFO:Set up data.
2024-10-22 02:13:26,321:INFO:Set up index.
2024-10-22 02:14:13,195:INFO:Initializing save_model()
2024-10-22 02:14:13,195:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), model_name=final_dt_model_customer_churn, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                               mapping=[{'col': 'Gender',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['Geography'],
                                    transformer=OneHotEncoder(cols=['Geography'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-10-22 02:14:13,195:INFO:Adding model into prep_pipe
2024-10-22 02:14:13,195:WARNING:Only Model saved as it was a pipeline.
2024-10-22 02:14:13,222:INFO:final_dt_model_customer_churn.pkl saved in current working directory
2024-10-22 02:14:13,238:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-10-22 02:14:13,238:INFO:save_model() successfully completed......................................
2024-10-22 02:14:13,370:INFO:Initializing load_model()
2024-10-22 02:14:13,370:INFO:load_model(model_name=final_dt_model_customer_churn, platform=None, authentication=None, verbose=True)
2024-10-22 02:32:12,193:WARNING:C:\Users\User\AppData\Local\Temp\ipykernel_10588\922725523.py:1: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(name='Bank_Churn_Prod',version=1,stage='Production')

2024-10-22 02:33:54,610:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 02:40:08,789:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 11:38:02,903:WARNING:C:\Users\User\AppData\Local\Temp\ipykernel_10588\922725523.py:1: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(name='Bank_Churn_Prod',version=1,stage='Production')

2024-10-22 11:38:08,815:WARNING:C:\Users\User\AppData\Local\Temp\ipykernel_10588\207861559.py:1: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(name='Bank_Churn',version=1,stage='Production')

2024-10-22 11:38:56,569:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 11:44:26,543:WARNING:C:\Users\User\AppData\Local\Temp\ipykernel_10588\207861559.py:1: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(name='Bank_Churn',version=1,stage='Production')

2024-10-22 11:44:58,197:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 11:45:27,795:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 11:51:11,992:WARNING:C:\Users\User\AppData\Local\Temp\ipykernel_10588\2953580713.py:1: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(name='Bank_Churn_PROD',version=1,stage='Production')

2024-10-22 11:51:17,783:WARNING:C:\Users\User\AppData\Local\Temp\ipykernel_10588\207861559.py:1: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(name='Bank_Churn',version=1,stage='Production')

2024-10-22 11:52:09,829:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 11:52:28,676:WARNING:C:\Users\User\AppData\Local\Temp\ipykernel_10588\207861559.py:1: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(name='Bank_Churn',version=1,stage='Production')

2024-10-22 11:52:41,117:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 11:52:53,034:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 12:02:30,076:WARNING:C:\Users\User\AppData\Local\Temp\ipykernel_10588\3178947369.py:1: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(name='Bank_Churn_model',version=1,stage='Production')

2024-10-22 12:02:50,728:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 12:10:19,101:WARNING:C:\Users\User\AppData\Local\Temp\ipykernel_32380\3178947369.py:1: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(name='Bank_Churn_model',version=1,stage='Production')

2024-10-22 12:11:19,458:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 12:47:16,958:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 12:50:58,242:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 13:35:47,785:WARNING:C:\Users\User\AppData\Local\Temp\ipykernel_32380\3178947369.py:1: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(name='Bank_Churn_model',version=1,stage='Production')

2024-10-22 14:17:49,038:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 14:18:47,162:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 14:25:15,815:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\mlflow\store\artifact\utils\models.py:31: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/latest/model-registry.html#migrating-from-stages
  latest = client.get_latest_versions(name, None if stage is None else [stage])

2024-10-22 17:19:35,963:INFO:Initializing predict_model()
2024-10-22 17:19:35,965:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016BF56E8540>)
2024-10-22 17:19:35,965:INFO:Checking exceptions
2024-10-22 17:19:35,965:INFO:Preloading libraries
2024-10-22 17:19:36,008:INFO:Set up data.
2024-10-22 17:19:36,121:INFO:Set up index.
2024-10-22 17:21:41,901:INFO:Initializing predict_model()
2024-10-22 17:21:41,901:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['CreditScore', 'Age', 'Tenure',
                                             'Balance', 'NumOfProducts',
                                             'HasCrCard', 'IsActiveMember',
                                             'EstimatedSalary'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('ca...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=10, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000016BF56E8540>)
2024-10-22 17:21:41,901:INFO:Checking exceptions
2024-10-22 17:21:41,901:INFO:Preloading libraries
2024-10-22 17:21:41,905:INFO:Set up data.
2024-10-22 17:21:42,004:INFO:Set up index.
2024-10-22 17:43:52,903:INFO:Initializing plot_model()
2024-10-22 17:43:52,904:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016BC1424850>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-10-22 17:43:52,904:INFO:Checking exceptions
2024-10-22 17:43:53,035:INFO:Preloading libraries
2024-10-22 17:43:53,068:INFO:Copying training dataset
2024-10-22 17:43:53,068:INFO:Plot type: confusion_matrix
2024-10-22 17:43:53,232:INFO:Fitting Model
2024-10-22 17:43:53,232:WARNING:e:\User\Documents\Rid\DMC\Diplomado Data Architect\ML\Eval_Dar5\mlopsenv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-10-22 17:43:53,233:INFO:Scoring test/hold-out set
2024-10-22 17:43:53,435:INFO:Visual Rendered Successfully
2024-10-22 17:43:53,595:INFO:plot_model() successfully completed......................................
